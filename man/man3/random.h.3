.TH "hal/random.h" 3 "Thu Mar 20 2025 13:52:27" "Version 1.0.0" "TikTakToe" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hal/random.h \- Contains constants and abstraction functions for the RNG device\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <stdint\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRNG_BASE_ADDRESS\fP   0x4000D000"
.br
.ti -1c
.RI "#define \fBRNG_START\fP   0x000"
.br
.ti -1c
.RI "#define \fBRNG_STOP\fP   0x004"
.br
.ti -1c
.RI "#define \fBRNG_VALRDY\fP       0x100"
.br
.ti -1c
.RI "#define \fBRNG_SHORTS\fP   0x200"
.br
.ti -1c
.RI "#define \fBRNG_INTEN\fP   0x300"
.br
.ti -1c
.RI "#define \fBRNG_INTENSET\fP   0x304"
.br
.ti -1c
.RI "#define \fBRNG_INTENCLR\fP   0x308"
.br
.ti -1c
.RI "#define \fBRNG_CONFIG\fP   0x504"
.br
.ti -1c
.RI "#define \fBRNG_VALUE\fP   0x508"
.br
.ti -1c
.RI "#define \fBRNG_TASK_START\fP   1"
.br
.ti -1c
.RI "#define \fBRNG_EVENT_TRIGGER\fP   1"
.br
.ti -1c
.RI "#define \fBRNG_EVENT_CLEAR\fP   0"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBrng_init\fP (void)"
.br
.RI "Enables the generation of random numbers\&. "
.ti -1c
.RI "uint8_t \fBrng_getRandomValue_immediately\fP (void)"
.br
.RI "Get the Random Value from the generator immediately\&. "
.ti -1c
.RI "uint8_t \fBrng_getRandomValue_waiting\fP (void)"
.br
.RI "This is a function stub\&. Implement it, if needed\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains constants and abstraction functions for the RNG device\&. 


.PP
\fBCopyright\fP
.RS 4
This Source Code Form is subject to the terms of the Mozilla Public License, v2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/\&. 
.RE
.PP

.PP
Definition in file \fBrandom\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define RNG_BASE_ADDRESS   0x4000D000"

.PP
Definition at line \fB17\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_CONFIG   0x504"

.PP
Definition at line \fB33\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_EVENT_CLEAR   0"

.PP
Definition at line \fB39\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_EVENT_TRIGGER   1"

.PP
Definition at line \fB38\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_INTEN   0x300"

.PP
Definition at line \fB30\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_INTENCLR   0x308"

.PP
Definition at line \fB32\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_INTENSET   0x304"

.PP
Definition at line \fB31\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_SHORTS   0x200"

.PP
Definition at line \fB29\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_START   0x000"

.PP
Definition at line \fB21\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_STOP   0x004"

.PP
Definition at line \fB22\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_TASK_START   1"

.PP
Definition at line \fB37\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_VALRDY       0x100"

.PP
Definition at line \fB25\fP of file \fBrandom\&.h\fP\&.
.SS "#define RNG_VALUE   0x508"

.PP
Definition at line \fB34\fP of file \fBrandom\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "uint8_t rng_getRandomValue_immediately (void )"

.PP
Get the Random Value from the generator immediately\&. The function will \fBNOT\fP wait until the next value is generated!

.PP
\fBReturns\fP
.RS 4
uint8_t A random byte
.RE
.PP
The function is \fBNOT\fP waiting until the next value is generated!

.PP
\fBReturns\fP
.RS 4
uint8_t random byte 
.RE
.PP

.PP
Definition at line \fB43\fP of file \fBrandom\&.c\fP\&.
.PP
References \fBregister_read()\fP, \fBRNG_BASE_ADDRESS\fP, and \fBRNG_VALUE\fP\&.
.SS "uint8_t rng_getRandomValue_waiting (void )"

.PP
This is a function stub\&. Implement it, if needed\&. 
.PP
\fBReturns\fP
.RS 4
uint8_t A random byte
.RE
.PP
This is a function stub\&. Implement it, if needed\&.

.PP
TODO: Implement it, if you need it

.PP
Things it should do here:
.IP "\(bu" 2
Get the Random Value from the generator by polling and waiting\&.
.IP "\(bu" 2
The function should be \fBblocking\fP until the next value is generated
.IP "\(bu" 2
it should return the random byte
.PP

.PP
\fBReturns\fP
.RS 4
uint8_t (curently) always \fR0\fP 
.RE
.PP

.PP
Definition at line \fB64\fP of file \fBrandom\&.c\fP\&.
.PP
References \fBregister_read()\fP, \fBregister_write()\fP, \fBRNG_BASE_ADDRESS\fP, \fBrng_getRandomValue_immediately()\fP, and \fBRNG_VALRDY\fP\&.
.SS "void rng_init (void )"

.PP
Enables the generation of random numbers\&. This is done by writing a \fR1\fP to the \fRSTART_TASK\fP of the RNG peripheral\&. 
.PP
Definition at line \fB29\fP of file \fBrandom\&.c\fP\&.
.PP
References \fBregister_write()\fP, \fBRNG_BASE_ADDRESS\fP, \fBRNG_START\fP, and \fBRNG_TASK_START\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TikTakToe from the source code\&.
