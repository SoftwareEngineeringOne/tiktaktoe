.TH "hal/uart.h" 3 "Fri Mar 21 2025 12:09:51" "Version 1.0.0" "TikTakToe" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hal/uart.h \- Contains constants and abstraction functions for the UART device\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'def\&.h'\fP
.br
\fR#include <stdint\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUART_BASE_ADDRESS\fP   0x40002000"
.br
.ti -1c
.RI "#define \fBUART_STARTRX\fP   0x000"
.br
.ti -1c
.RI "#define \fBUART_STOPRX\fP   0x004"
.br
.ti -1c
.RI "#define \fBUART_STARTTX\fP   0x008"
.br
.ti -1c
.RI "#define \fBUART_STOPTX\fP   0x00C"
.br
.ti -1c
.RI "#define \fBUART_SUSPEND\fP   0x01C"
.br
.ti -1c
.RI "#define \fBUART_CTS\fP   0x100"
.br
.ti -1c
.RI "#define \fBUART_NCTS\fP   0x104"
.br
.ti -1c
.RI "#define \fBUART_RXDRDY\fP   0x108"
.br
.ti -1c
.RI "#define \fBUART_TXDRDY\fP   0x11C"
.br
.ti -1c
.RI "#define \fBUART_ERROR\fP   0x124"
.br
.ti -1c
.RI "#define \fBUART_RXTO\fP   0x144"
.br
.ti -1c
.RI "#define \fBUART_INTEN\fP   0x300"
.br
.ti -1c
.RI "#define \fBUART_INTENSET\fP   0x304"
.br
.ti -1c
.RI "#define \fBUART_INTENCLR\fP   0x308"
.br
.ti -1c
.RI "#define \fBUART_ERRORSRC\fP   0x480"
.br
.ti -1c
.RI "#define \fBUART_ENABLE\fP   0x500"
.br
.ti -1c
.RI "#define \fBUART_PSELRTS\fP   0x508"
.br
.ti -1c
.RI "#define \fBUART_PSELTXD\fP   0x50C"
.br
.ti -1c
.RI "#define \fBUART_PSELCTS\fP   0x510"
.br
.ti -1c
.RI "#define \fBUART_PSELRXD\fP   0x514"
.br
.ti -1c
.RI "#define \fBUART_RXD\fP   0x518"
.br
.ti -1c
.RI "#define \fBUART_TXD\fP   0x51C"
.br
.ti -1c
.RI "#define \fBUART_BAUDRATE\fP   0x524"
.br
.ti -1c
.RI "#define \fBUART_CONFIG\fP   0x56C"
.br
.ti -1c
.RI "#define \fBUART_TASK_START\fP   1"
.br
.ti -1c
.RI "#define \fBUART_EVENT_TRIGGER\fP   1"
.br
.ti -1c
.RI "#define \fBUART_EVENT_CLEAR\fP   0"
.br
.ti -1c
.RI "#define \fBUART_INT_RXDRDY\fP   (1 << 2)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBuart_init\fP (\fBbool\fP with_interrupts)"
.br
.RI "Initializing the UART with the following Settings: 115200-8-N-1\&. "
.ti -1c
.RI "void \fBuart_writeByte\fP (uint8_t data)"
.br
.RI "Writes/Sends a byte over the serial Port\&. "
.ti -1c
.RI "uint8_t \fBuart_readByte\fP ()"
.br
.RI "Read/Receive a byte from the serial Port\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains constants and abstraction functions for the UART device\&. 


.PP
\fBCopyright\fP
.RS 4
This Source Code Form is subject to the terms of the Mozilla Public License, v2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/\&. 
.RE
.PP

.PP
Definition in file \fBuart\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define UART_BASE_ADDRESS   0x40002000"

.PP
Definition at line \fB18\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_BAUDRATE   0x524"

.PP
Definition at line \fB48\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_CONFIG   0x56C"

.PP
Definition at line \fB49\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_CTS   0x100"

.PP
Definition at line \fB29\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_ENABLE   0x500"

.PP
Definition at line \fB41\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_ERROR   0x124"

.PP
Definition at line \fB33\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_ERRORSRC   0x480"

.PP
Definition at line \fB40\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_EVENT_CLEAR   0"

.PP
Definition at line \fB54\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_EVENT_TRIGGER   1"

.PP
Definition at line \fB53\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_INT_RXDRDY   (1 << 2)"

.PP
Definition at line \fB56\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_INTEN   0x300"

.PP
Definition at line \fB37\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_INTENCLR   0x308"

.PP
Definition at line \fB39\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_INTENSET   0x304"

.PP
Definition at line \fB38\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_NCTS   0x104"

.PP
Definition at line \fB30\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_PSELCTS   0x510"

.PP
Definition at line \fB44\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_PSELRTS   0x508"

.PP
Definition at line \fB42\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_PSELRXD   0x514"

.PP
Definition at line \fB45\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_PSELTXD   0x50C"

.PP
Definition at line \fB43\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_RXD   0x518"

.PP
Definition at line \fB46\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_RXDRDY   0x108"

.PP
Definition at line \fB31\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_RXTO   0x144"

.PP
Definition at line \fB34\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_STARTRX   0x000"

.PP
Definition at line \fB22\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_STARTTX   0x008"

.PP
Definition at line \fB24\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_STOPRX   0x004"

.PP
Definition at line \fB23\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_STOPTX   0x00C"

.PP
Definition at line \fB25\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_SUSPEND   0x01C"

.PP
Definition at line \fB26\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_TASK_START   1"

.PP
Definition at line \fB52\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_TXD   0x51C"

.PP
Definition at line \fB47\fP of file \fBuart\&.h\fP\&.
.SS "#define UART_TXDRDY   0x11C"

.PP
Definition at line \fB32\fP of file \fBuart\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "void uart_init (\fBbool\fP with_interrupts)"

.PP
Initializing the UART with the following Settings: 115200-8-N-1\&. 
.PP
\fBParameters\fP
.RS 4
\fIwith_interrupts\fP Wether or not interrupts should be triggered 
.RE
.PP

.PP
Definition at line \fB25\fP of file \fBuart\&.c\fP\&.
.PP
References \fBInterrupt_ID2\fP, \fBInterrupt_Set_Enable\fP, \fBregister_write()\fP, \fBUART_BASE_ADDRESS\fP, \fBUART_ENABLE\fP, \fBUART_INT_RXDRDY\fP, \fBUART_INTENSET\fP, \fBUART_STARTRX\fP, \fBUART_STARTTX\fP, and \fBUART_TASK_START\fP\&.
.SS "uint8_t uart_readByte ()"

.PP
Read/Receive a byte from the serial Port\&. 
.PP
\fBReturns\fP
.RS 4
uint8_t received Byte or 0 (zero) if nothing was received 
.RE
.PP

.PP
Definition at line \fB81\fP of file \fBuart\&.c\fP\&.
.PP
References \fBregister_read()\fP, \fBregister_write()\fP, \fBUART_BASE_ADDRESS\fP, \fBUART_EVENT_CLEAR\fP, \fBUART_RXD\fP, and \fBUART_RXDRDY\fP\&.
.SS "void uart_writeByte (uint8_t data)"

.PP
Writes/Sends a byte over the serial Port\&. 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP byte to send 
.RE
.PP

.PP
Definition at line \fB73\fP of file \fBuart\&.c\fP\&.
.PP
References \fBregister_write()\fP, \fBUART_BASE_ADDRESS\fP, and \fBUART_TXD\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TikTakToe from the source code\&.
