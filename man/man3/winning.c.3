.TH "logic/winning.c" 3 "Sat Mar 22 2025 15:19:14" "Version 1.0.0" "TikTakToe" \" -*- nroff -*-
.ad l
.nh
.SH NAME
logic/winning.c \- Implements the function for checking if someone has won\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'logic/winning\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static \fBbool\fP \fBcheckIfPlayerWon\fP (const \fBCell\fP *cell, \fBPlayer\fP player, \fBCellState\fP *\fBcell_state\fP, \fBCell\fP *winner_cells[\fBmax\fP(\fBCELLS_PER_COL\fP, \fBCELLS_PER_ROW\fP)])"
.br
.RI "Checks if the given player has won\&. "
.ti -1c
.RI "\fBPlayer\fP \fBwinning_checkForWinner\fP (\fBCellState\fP *\fBcell_state\fP, \fBCell\fP *winner_cells[\fBmax\fP(\fBCELLS_PER_COL\fP, \fBCELLS_PER_ROW\fP)])"
.br
.RI "Checks at the end of the round if someone has won\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implements the function for checking if someone has won\&. 

This file contains the implementation of the logic for determining if a player has won in the game\&. It includes the main function and helper functions for evaluating the game state\&.

.PP
\fBSee also\fP
.RS 4
\fBwinning\&.h\fP
.RE
.PP
\fBCopyright\fP
.RS 4
This Source Code Form is subject to the terms of the Mozilla Public License, v2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/\&. 
.RE
.PP

.PP
Definition in file \fBwinning\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "static \fBbool\fP checkIfPlayerWon (const \fBCell\fP * cell, \fBPlayer\fP player, \fBCellState\fP * cell_state, \fBCell\fP * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])\fR [static]\fP"

.PP
Checks if the given player has won\&. This function evaluates the game board to determine if the specified player has won\&. It checks vertical, horizontal, and diagonal lines originating from the last marked cell of the player\&. If a winning condition is met, the relevant cells are written to the provided buffer\&.

.PP
\fBParameters\fP
.RS 4
\fIcell\fP Last marked cell of the player 
.br
\fIplayer\fP Player it is looking for 
.br
\fIcell_state\fP Current state of the game board 
.br
\fIwinner_cells\fP Buffer to store the cells forming the winning line
.RE
.PP
\fBReturns\fP
.RS 4
True if the player has won, false otherwise 
.RE
.PP

.PP
Definition at line \fB62\fP of file \fBwinning\&.c\fP\&.
.PP
References \fBCellState::all\fP, \fBcell_state\fP, \fBCELLS_PER_COL\fP, \fBCELLS_PER_ROW\fP, \fBCell::col\fP, \fBCell::marked_by\fP, \fBmax\fP, \fBmin\fP, and \fBCell::row\fP\&.
.SS "\fBPlayer\fP winning_checkForWinner (\fBCellState\fP * cell_state, \fBCell\fP * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])"

.PP
Checks at the end of the round if someone has won\&. This function evaluates the current state of the game board to determine if a player has won\&. If a player has won, the relevant cells are written to the provided buffer\&.

.PP
\fBParameters\fP
.RS 4
\fIcell_state\fP Current state of the cells 
.br
\fIwinner_cells\fP If a player won, the relevant cells will be written to this buffer
.RE
.PP
\fBReturns\fP
.RS 4
The player who won, or \fRNone\fP if no player has won 
.RE
.PP

.PP
Definition at line \fB46\fP of file \fBwinning\&.c\fP\&.
.PP
References \fBcell_state\fP, \fBcheckIfPlayerWon()\fP, \fBCircle\fP, \fBCross\fP, \fBCellState::last_circle\fP, \fBCellState::last_cross\fP, and \fBNone\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TikTakToe from the source code\&.
