.TH "logic/winning.h" 3 "Sat Mar 22 2025 15:19:14" "Version 1.0.0" "TikTakToe" \" -*- nroff -*-
.ad l
.nh
.SH NAME
logic/winning.h \- Contains the function for checking if someone has won\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'logic/game\&.h'\fP
.br
\fR#include 'util/math\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPlayer\fP \fBwinning_checkForWinner\fP (\fBCellState\fP *\fBcell_state\fP, \fBCell\fP *winner_cells[\fBmax\fP(\fBCELLS_PER_COL\fP, \fBCELLS_PER_ROW\fP)])"
.br
.RI "Checks at the end of the round if someone has won\&. "
.in -1c
.SH "Detailed Description"
.PP 
Contains the function for checking if someone has won\&. 

This file contains the declaration of the function used to check if a player has won in the game\&.
.SH "VICTORY ALGORITHM"
.PP
.SS "Vertical / Horizontal:"
The algorithm starts at the border and iterates to the other side\&. It goes in 2 different directions and counts on 2 axes\&. It runs in one of the directions till a cell is reached that is not marked by our player\&. Diagonal: The algorithm starts at the given cell coordinates\&. It goes in 4 different direction and counts on 2 axes\&. Every step in one of the directions increments the dedicated axis until a cell is reached that is not marked by our player\&.

.PP
The return value is true when one axis or more axes has / have reached the win condition (line to the other side)\&. 
.PP
.nf
 UP      UP     UP          | axis       | direction 1 | direction 2 |
LEFT           RIGHT        |\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-|
       \\ | /                | vertical   | down        |             |
LEFT  \-\-\-+\-\-\-> RIGHT        | horizontal | right       |             |
       / | \\                | diagonal_1 | up right    | down left   |
DOWN     v     DOWN         | diagonal_2 | up left     | down right  |
LEFT    DOWN   RIGHT

.fi
.PP

.PP
\fBSee also\fP
.RS 4
\fBwinning\&.c\fP
.RE
.PP
\fBCopyright\fP
.RS 4
This Source Code Form is subject to the terms of the Mozilla Public License, v2\&.0\&. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/\&. 
.RE
.PP

.PP
Definition in file \fBwinning\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "\fBPlayer\fP winning_checkForWinner (\fBCellState\fP * cell_state, \fBCell\fP * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])"

.PP
Checks at the end of the round if someone has won\&. This function evaluates the current state of the game board to determine if a player has won\&. If a player has won, the relevant cells are written to the provided buffer\&.

.PP
\fBParameters\fP
.RS 4
\fIcell_state\fP Current state of the cells 
.br
\fIwinner_cells\fP If a player won, the relevant cells will be written to this buffer
.RE
.PP
\fBReturns\fP
.RS 4
The player who won, or \fRNone\fP if no player has won 
.RE
.PP

.PP
Definition at line \fB46\fP of file \fBwinning\&.c\fP\&.
.PP
References \fBcell_state\fP, \fBcheckIfPlayerWon()\fP, \fBCircle\fP, \fBCross\fP, \fBCellState::last_circle\fP, \fBCellState::last_cross\fP, and \fBNone\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for TikTakToe from the source code\&.
