This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: docs, .direnv, .cache, build-cortex-m0
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.github/
  workflows/
    docker.yml
    documentation.yml
assets/
  circle_starts.txt
  circle_wins.txt
  computer_starts.txt
  cross_starts.txt
  cross_wins.txt
  its_a_tie.txt
  medium_cross_unicode.txt
  player_starts.txt
  tik_tak_toe_ascii.txt
entry/
  entry.S
  linker_script.ld
include/
  hal/
    interrupts.h
    memset.h
    nvic.h
    random.h
    register_access.h
    system.h
    timer.h
    uart.h
  logic/
    bot.h
    game.h
    input.h
    time.h
    winning.h
  presentation/
    ascii_art.h
    cell.h
    cursor.h
    field.h
    menu.h
    print.h
    style.h
    ui.h
  util/
    conversion.h
    error_handling.h
    input_buf.h
    math.h
  config.h
  config.h.in
  def.h
src/
  hal/
    interrupts.c
    memset.c
    random.c
    register_access.c
    system.c
    timer.c
    uart.c
  logic/
    bot.c
    game.c
    input.c
    time.c
    winning.c
  presentation/
    cell.c
    cursor.c
    field.c
    menu.c
    print.c
    style.c
    ui.c
  util/
    conversion.c
    error_handling.c
    input_buf.c
  main.c
util/
  convert_to_array.sh
  convert_to_string.sh
.clang-format
.dockerignore
.envrc
.gitignore
Architecture.md
AUTHORS
CMakeLists.txt
CMakePresets.json
compile_commands.json
Conventions.md
Dockerfile
Doxyfile
flake.nix
Justfile
LICENSE
Makefile
Presentation.md
README.md
README.md.backup
toolchain.cmake
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="CMakePresets.json">
{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 22,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "arm-cortex-m0-base",
      "hidden": true,
      "binaryDir": "build-cortex-m0",
      "toolchainFile": "toolchain.cmake",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "inherits": ["arm-cortex-m0-base"],
      "name": "arm-cortex-m0-unix",
      "displayName": "GCC Arm EABI (Unix Makefiles)",
      "description": "GCC Arm EABI (Unix Makefiles)",
      "generator": "Unix Makefiles"
    },
    {
      "inherits": ["arm-cortex-m0-base"],
      "name": "arm-cortex-m0-mingw",
      "displayName": "GCC Arm EABI (MinGW Makefiles)",
      "description": "GCC Arm EABI (MinGW Makefiles)",
      "generator": "MinGW Makefiles"
    }
  ],
  "buildPresets": [
    {
      "name": "arm-cortex-m0-unix",
      "displayName": "GCC Arm EABI (Unix Makefiles)",
      "description": "GCC Arm EABI (Unix Makefiles)",
      "configurePreset": "arm-cortex-m0-unix"
    },
    {
      "name": "arm-cortex-m0-mingw",
      "displayName": "GCC Arm EABI (MinGW Makefiles)",
      "description": "GCC Arm EABI (MinGW Makefiles)",
      "configurePreset": "arm-cortex-m0-mingw"
    }
  ]
}
</file>

<file path="LICENSE">
Mozilla Public License Version 2.0
==================================

1. Definitions
--------------

1.1. "Contributor"
    means each individual or legal entity that creates, contributes to
    the creation of, or owns Covered Software.

1.2. "Contributor Version"
    means the combination of the Contributions of others (if any) used
    by a Contributor and that particular Contributor's Contribution.

1.3. "Contribution"
    means Covered Software of a particular Contributor.

1.4. "Covered Software"
    means Source Code Form to which the initial Contributor has attached
    the notice in Exhibit A, the Executable Form of such Source Code
    Form, and Modifications of such Source Code Form, in each case
    including portions thereof.

1.5. "Incompatible With Secondary Licenses"
    means

    (a) that the initial Contributor has attached the notice described
        in Exhibit B to the Covered Software; or

    (b) that the Covered Software was made available under the terms of
        version 1.1 or earlier of the License, but not also under the
        terms of a Secondary License.

1.6. "Executable Form"
    means any form of the work other than Source Code Form.

1.7. "Larger Work"
    means a work that combines Covered Software with other material, in
    a separate file or files, that is not Covered Software.

1.8. "License"
    means this document.

1.9. "Licensable"
    means having the right to grant, to the maximum extent possible,
    whether at the time of the initial grant or subsequently, any and
    all of the rights conveyed by this License.

1.10. "Modifications"
    means any of the following:

    (a) any file in Source Code Form that results from an addition to,
        deletion from, or modification of the contents of Covered
        Software; or

    (b) any new file in Source Code Form that contains any Covered
        Software.

1.11. "Patent Claims" of a Contributor
    means any patent claim(s), including without limitation, method,
    process, and apparatus claims, in any patent Licensable by such
    Contributor that would be infringed, but for the grant of the
    License, by the making, using, selling, offering for sale, having
    made, import, or transfer of either its Contributions or its
    Contributor Version.

1.12. "Secondary License"
    means either the GNU General Public License, Version 2.0, the GNU
    Lesser General Public License, Version 2.1, the GNU Affero General
    Public License, Version 3.0, or any later versions of those
    licenses.

1.13. "Source Code Form"
    means the form of the work preferred for making modifications.

1.14. "You" (or "Your")
    means an individual or a legal entity exercising rights under this
    License. For legal entities, "You" includes any entity that
    controls, is controlled by, or is under common control with You. For
    purposes of this definition, "control" means (a) the power, direct
    or indirect, to cause the direction or management of such entity,
    whether by contract or otherwise, or (b) ownership of more than
    fifty percent (50%) of the outstanding shares or beneficial
    ownership of such entity.

2. License Grants and Conditions
--------------------------------

2.1. Grants

Each Contributor hereby grants You a world-wide, royalty-free,
non-exclusive license:

(a) under intellectual property rights (other than patent or trademark)
    Licensable by such Contributor to use, reproduce, make available,
    modify, display, perform, distribute, and otherwise exploit its
    Contributions, either on an unmodified basis, with Modifications, or
    as part of a Larger Work; and

(b) under Patent Claims of such Contributor to make, use, sell, offer
    for sale, have made, import, and otherwise transfer either its
    Contributions or its Contributor Version.

2.2. Effective Date

The licenses granted in Section 2.1 with respect to any Contribution
become effective for each Contribution on the date the Contributor first
distributes such Contribution.

2.3. Limitations on Grant Scope

The licenses granted in this Section 2 are the only rights granted under
this License. No additional rights or licenses will be implied from the
distribution or licensing of Covered Software under this License.
Notwithstanding Section 2.1(b) above, no patent license is granted by a
Contributor:

(a) for any code that a Contributor has removed from Covered Software;
    or

(b) for infringements caused by: (i) Your and any other third party's
    modifications of Covered Software, or (ii) the combination of its
    Contributions with other software (except as part of its Contributor
    Version); or

(c) under Patent Claims infringed by Covered Software in the absence of
    its Contributions.

This License does not grant any rights in the trademarks, service marks,
or logos of any Contributor (except as may be necessary to comply with
the notice requirements in Section 3.4).

2.4. Subsequent Licenses

No Contributor makes additional grants as a result of Your choice to
distribute the Covered Software under a subsequent version of this
License (see Section 10.2) or under the terms of a Secondary License (if
permitted under the terms of Section 3.3).

2.5. Representation

Each Contributor represents that the Contributor believes its
Contributions are its original creation(s) or it has sufficient rights
to grant the rights to its Contributions conveyed by this License.

2.6. Fair Use

This License is not intended to limit any rights You have under
applicable copyright doctrines of fair use, fair dealing, or other
equivalents.

2.7. Conditions

Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted
in Section 2.1.

3. Responsibilities
-------------------

3.1. Distribution of Source Form

All distribution of Covered Software in Source Code Form, including any
Modifications that You create or to which You contribute, must be under
the terms of this License. You must inform recipients that the Source
Code Form of the Covered Software is governed by the terms of this
License, and how they can obtain a copy of this License. You may not
attempt to alter or restrict the recipients' rights in the Source Code
Form.

3.2. Distribution of Executable Form

If You distribute Covered Software in Executable Form then:

(a) such Covered Software must also be made available in Source Code
    Form, as described in Section 3.1, and You must inform recipients of
    the Executable Form how they can obtain a copy of such Source Code
    Form by reasonable means in a timely manner, at a charge no more
    than the cost of distribution to the recipient; and

(b) You may distribute such Executable Form under the terms of this
    License, or sublicense it under different terms, provided that the
    license for the Executable Form does not attempt to limit or alter
    the recipients' rights in the Source Code Form under this License.

3.3. Distribution of a Larger Work

You may create and distribute a Larger Work under terms of Your choice,
provided that You also comply with the requirements of this License for
the Covered Software. If the Larger Work is a combination of Covered
Software with a work governed by one or more Secondary Licenses, and the
Covered Software is not Incompatible With Secondary Licenses, this
License permits You to additionally distribute such Covered Software
under the terms of such Secondary License(s), so that the recipient of
the Larger Work may, at their option, further distribute the Covered
Software under the terms of either this License or such Secondary
License(s).

3.4. Notices

You may not remove or alter the substance of any license notices
(including copyright notices, patent notices, disclaimers of warranty,
or limitations of liability) contained within the Source Code Form of
the Covered Software, except that You may alter any license notices to
the extent required to remedy known factual inaccuracies.

3.5. Application of Additional Terms

You may choose to offer, and to charge a fee for, warranty, support,
indemnity or liability obligations to one or more recipients of Covered
Software. However, You may do so only on Your own behalf, and not on
behalf of any Contributor. You must make it absolutely clear that any
such warranty, support, indemnity, or liability obligation is offered by
You alone, and You hereby agree to indemnify every Contributor for any
liability incurred by such Contributor as a result of warranty, support,
indemnity or liability terms You offer. You may include additional
disclaimers of warranty and limitations of liability specific to any
jurisdiction.

4. Inability to Comply Due to Statute or Regulation
---------------------------------------------------

If it is impossible for You to comply with any of the terms of this
License with respect to some or all of the Covered Software due to
statute, judicial order, or regulation then You must: (a) comply with
the terms of this License to the maximum extent possible; and (b)
describe the limitations and the code they affect. Such description must
be placed in a text file included with all distributions of the Covered
Software under this License. Except to the extent prohibited by statute
or regulation, such description must be sufficiently detailed for a
recipient of ordinary skill to be able to understand it.

5. Termination
--------------

5.1. The rights granted under this License will terminate automatically
if You fail to comply with any of its terms. However, if You become
compliant, then the rights granted under this License from a particular
Contributor are reinstated (a) provisionally, unless and until such
Contributor explicitly and finally terminates Your grants, and (b) on an
ongoing basis, if such Contributor fails to notify You of the
non-compliance by some reasonable means prior to 60 days after You have
come back into compliance. Moreover, Your grants from a particular
Contributor are reinstated on an ongoing basis if such Contributor
notifies You of the non-compliance by some reasonable means, this is the
first time You have received notice of non-compliance with this License
from such Contributor, and You become compliant prior to 30 days after
Your receipt of the notice.

5.2. If You initiate litigation against any entity by asserting a patent
infringement claim (excluding declaratory judgment actions,
counter-claims, and cross-claims) alleging that a Contributor Version
directly or indirectly infringes any patent, then the rights granted to
You by any and all Contributors for the Covered Software under Section
2.1 of this License shall terminate.

5.3. In the event of termination under Sections 5.1 or 5.2 above, all
end user license agreements (excluding distributors and resellers) which
have been validly granted by You or Your distributors under this License
prior to termination shall survive termination.

************************************************************************
*                                                                      *
*  6. Disclaimer of Warranty                                           *
*  -------------------------                                           *
*                                                                      *
*  Covered Software is provided under this License on an "as is"       *
*  basis, without warranty of any kind, either expressed, implied, or  *
*  statutory, including, without limitation, warranties that the       *
*  Covered Software is free of defects, merchantable, fit for a        *
*  particular purpose or non-infringing. The entire risk as to the     *
*  quality and performance of the Covered Software is with You.        *
*  Should any Covered Software prove defective in any respect, You     *
*  (not any Contributor) assume the cost of any necessary servicing,   *
*  repair, or correction. This disclaimer of warranty constitutes an   *
*  essential part of this License. No use of any Covered Software is   *
*  authorized under this License except under this disclaimer.         *
*                                                                      *
************************************************************************

************************************************************************
*                                                                      *
*  7. Limitation of Liability                                          *
*  --------------------------                                          *
*                                                                      *
*  Under no circumstances and under no legal theory, whether tort      *
*  (including negligence), contract, or otherwise, shall any           *
*  Contributor, or anyone who distributes Covered Software as          *
*  permitted above, be liable to You for any direct, indirect,         *
*  special, incidental, or consequential damages of any character      *
*  including, without limitation, damages for lost profits, loss of    *
*  goodwill, work stoppage, computer failure or malfunction, or any    *
*  and all other commercial damages or losses, even if such party      *
*  shall have been informed of the possibility of such damages. This   *
*  limitation of liability shall not apply to liability for death or   *
*  personal injury resulting from such party's negligence to the       *
*  extent applicable law prohibits such limitation. Some               *
*  jurisdictions do not allow the exclusion or limitation of           *
*  incidental or consequential damages, so this exclusion and          *
*  limitation may not apply to You.                                    *
*                                                                      *
************************************************************************

8. Litigation
-------------

Any litigation relating to this License may be brought only in the
courts of a jurisdiction where the defendant maintains its principal
place of business and such litigation shall be governed by laws of that
jurisdiction, without reference to its conflict-of-law provisions.
Nothing in this Section shall prevent a party's ability to bring
cross-claims or counter-claims.

9. Miscellaneous
----------------

This License represents the complete agreement concerning the subject
matter hereof. If any provision of this License is held to be
unenforceable, such provision shall be reformed only to the extent
necessary to make it enforceable. Any law or regulation which provides
that the language of a contract shall be construed against the drafter
shall not be used to construe this License against a Contributor.

10. Versions of the License
---------------------------

10.1. New Versions

Mozilla Foundation is the license steward. Except as provided in Section
10.3, no one other than the license steward has the right to modify or
publish new versions of this License. Each version will be given a
distinguishing version number.

10.2. Effect of New Versions

You may distribute the Covered Software under the terms of the version
of the License under which You originally received the Covered Software,
or under the terms of any subsequent version published by the license
steward.

10.3. Modified Versions

If you create software not governed by this License, and you want to
create a new license for such software, you may create and use a
modified version of this License if you rename the license and remove
any references to the name of the license steward (except to note that
such modified license differs from this License).

10.4. Distributing Source Code Form that is Incompatible With Secondary
Licenses

If You choose to distribute Source Code Form that is Incompatible With
Secondary Licenses under the terms of this version of the License, the
notice described in Exhibit B of this License must be attached.

Exhibit A - Source Code Form License Notice
-------------------------------------------

  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.

If it is not possible or desirable to put the notice in a particular
file, then You may include the notice in a location (such as a LICENSE
file in a relevant directory) where a recipient would be likely to look
for such a notice.

You may add additional accurate notices of copyright ownership.

Exhibit B - "Incompatible With Secondary Licenses" Notice
---------------------------------------------------------

  This Source Code Form is "Incompatible With Secondary Licenses", as
  defined by the Mozilla Public License, v. 2.0.
</file>

<file path="assets/circle_starts.txt">
____ _          _            _             _       _ 
 / ___(_)_ __ ___| | ___   ___| |_ __ _ _ __| |_ ___| |
| |   | | '__/ __| |/ _ \ / __| __/ _` | '__| __/ __| |
| |___| | | | (__| |  __/ \__ \ || (_| | |  | |_\__ \_|
 \____|_|_|  \___|_|\___| |___/\__\__,_|_|   \__|___(_)
</file>

<file path="assets/circle_wins.txt">
____ _          _       __        ___           _ 
 / ___(_)_ __ ___| | ___  \ \      / (_)_ __  ___| |
| |   | | '__/ __| |/ _ \  \ \ /\ / /| | '_ \/ __| |
| |___| | | | (__| |  __/   \ V  V / | | | | \__ \_|
 \____|_|_|  \___|_|\___|    \_/\_/  |_|_| |_|___(_)
</file>

<file path="assets/computer_starts.txt">
____                            _                  _             _       _ 
 / ___|___  _ __ ___  _ __  _   _| |_ ___ _ __   ___| |_ __ _ _ __| |_ ___| |
| |   / _ \| '_ ` _ \| '_ \| | | | __/ _ \ '__| / __| __/ _` | '__| __/ __| |
| |__| (_) | | | | | | |_) | |_| | ||  __/ |    \__ \ || (_| | |  | |_\__ \_|
 \____\___/|_| |_| |_| .__/ \__,_|\__\___|_|    |___/\__\__,_|_|   \__|___(_)
                     |_|
</file>

<file path="assets/cross_starts.txt">
____                         _             _       _ 
 / ___|_ __ ___  ___ ___   ___| |_ __ _ _ __| |_ ___| |
| |   | '__/ _ \/ __/ __| / __| __/ _` | '__| __/ __| |
| |___| | | (_) \__ \__ \ \__ \ || (_| | |  | |_\__ \_|
 \____|_|  \___/|___/___/ |___/\__\__,_|_|   \__|___(_)
</file>

<file path="assets/cross_wins.txt">
____                    __        ___           _ 
 / ___|_ __ ___  ___ ___  \ \      / (_)_ __  ___| |
| |   | '__/ _ \/ __/ __|  \ \ /\ / /| | '_ \/ __| |
| |___| | | (_) \__ \__ \   \ V  V / | | | | \__ \_|
 \____|_|  \___/|___/___/    \_/\_/  |_|_| |_|___(_)
</file>

<file path="assets/its_a_tie.txt">
___ _   _               _____ _      _ 
|_ _| |_( )___    __ _  |_   _(_) ___| |
 | || __|// __|  / _` |   | | | |/ _ \ |
 | || |_  \__ \ | (_| |   | | | |  __/_|
|___|\__| |___/  \__,_|   |_| |_|\___(_)
</file>

<file path="assets/medium_cross_unicode.txt">
\ ╱
 ╳
╱ ╲
</file>

<file path="assets/player_starts.txt">
____  _                             _             _       _ 
|  _ \| | __ _ _   _  ___ _ __   ___| |_ __ _ _ __| |_ ___| |
| |_) | |/ _` | | | |/ _ \ '__| / __| __/ _` | '__| __/ __| |
|  __/| | (_| | |_| |  __/ |    \__ \ || (_| | |  | |_\__ \_|
|_|   |_|\__,_|\__, |\___|_|    |___/\__\__,_|_|   \__|___(_)
               |___/
</file>

<file path="assets/tik_tak_toe_ascii.txt">
.___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______
|           ||  | |  |/  / |           |   /   \     |  |/  / |           | /  __  \  |   ____|
`---|  |----`|  | |  '  /  `---|  |----`  /  ^  \    |  '  /  `---|  |----`|  |  |  | |  |__
    |  |     |  | |    <       |  |      /  /_\  \   |    <       |  |     |  |  |  | |   __|
    |  |     |  | |  .  \      |  |     /  _____  \  |  .  \      |  |     |  `--'  | |  |____
    |__|     |__| |__|\__\     |__|    /__/     \__\ |__|\__\     |__|      \______/  |_______|
</file>

<file path="src/hal/memset.c">
#include "hal/memset.h"

#include <stdint.h>

void *memset(void *ptr, const int x, size_t n)
{
    uint8_t *p = ptr;
    while(n--)
    {
        *p++ = (uint8_t)x;
    }
    return ptr;
}
</file>

<file path="src/hal/system.c">
#include "hal/system.h"

#include "def.h"
#include "hal/register_access.h"

void system_softReset()
{
    register_write(SYS_AIRCR, SYS_VECTKEY | SYS_SYSRESETREQ);
    // ReSharper disable once CppDFAEndlessLoop
    while(true)
        ;
}


void system_offMode()
{
    register_write(SYS_POWER | SYS_SYSTEMOFF, 1);
    // ReSharper disable once CppDFAEndlessLoop
    while(true)
        ;
}
</file>

<file path="src/presentation/style.c">
#include "presentation/style.h"

const Style DEFAULT_BOLD = {
    .font_style = BOLD,
};

const Style DEFAULT_ITALIC = {
    .font_style = ITALIC,
};

const Style DEFAULT_DIM = {
    .font_style = DIM,
};

const Style BOLD_DIM = {
    .font_style = BOLD,
    .fg_color = DIM,
};

const Style ITALIC_DIM = {
    .font_style = ITALIC,
    .fg_color = DIM,
};

const Style DEFAULT_CIRCLE = {
    .fg_color = FG_MAGENTA,
};

const Style BOLD_CIRCLE = {
    .fg_color = FG_MAGENTA,
    .font_style = BOLD,
};

const Style DEFAULT_CROSS = {
    .fg_color = FG_GREEN,
};

const Style BOLD_CROSS = {
    .fg_color = FG_GREEN,
    .font_style = BOLD,
};

const Style HEADING_STYLE = {
    .fg_color = FG_BLUE,
    .font_style = BOLD,
};
</file>

<file path="util/convert_to_array.sh">
#!/usr/bin/env bash
# AI-Disclaimer: This file was largely generated using AI and only tested for our
# specific use case. As such functionality can't be guaranteed.

BOLD=$'\033[1m'
RESET=$'\033[0m'

usage() {
  cat <<EOF
${BOLD}Usage: ./convert_ascii.sh input.txt [ARRAY_NAME] [desired_width]${RESET}

Example:
  ./convert_ascii.sh ascii_art.txt MEDIUM_X 7

If ascii_art.txt contains:
  ╲ ╱  
   ╳   
  ╱ ╲  

Then the script outputs:
static char *MEDIUM_X[3][7] = {
    {" ", " ", DIAGONAL_BW, " ", DIAGONAL_FW, " ", " "},
    {" ", " ", " ", DIAGONAL_MID, " ", " ", " "},
    {" ", " ", DIAGONAL_FW, " ", DIAGONAL_BW, " ", " "},
};
EOF
}

if [ "$#" -lt 2 ]; then
    usage
    exit 1
fi

input_file="$1"
array_name="$2"

if [ "$#" -ge 3 ]; then
    desired_width="$3"
else
    # Get the length of the first line (remove newline)
    desired_width=$(head -n 1 "$input_file" | awk '{print length}')
fi

#  number of rows
rows=$(wc -l < "$input_file" | tr -d ' ')

echo "static char *${array_name}[${rows}][${desired_width}] = {"

# Use awk to process each line:
# 1. For each line, compute left/right padding to center the line in desired_width.
# 2. Convert each character to the corresponding token.
awk -v desired_width="$desired_width" '
# Function to generate a string with n spaces
function spaces(n) {
    s = ""
    for(i = 0; i < n; i++){
        s = s " "
    }
    return s
}
function convert(c) {
    if (c == "\\") {
        return "\"\\\\\""
    } 

    return "\"" c "\"";
}
{
    # Original line and its length.
    line = $0;
    line_length = length(line);
    # Calculate left and right padding to center the text.
    left_pad = int((desired_width - line_length) / 2);
    if (left_pad < 0) left_pad = 0;
    right_pad = desired_width - line_length - left_pad;
    # Construct the padded line.
    padded_line = spaces(left_pad) line spaces(right_pad);
    
    # Begin the C array row.
    printf "    {";
    # Process each character of the padded line.
    for(i = 1; i <= length(padded_line); i++){
        c = substr(padded_line, i, 1);
        printf (i == 1 ? "" : ", ");
        printf "%s", convert(c);
    }
    print "},";
}' "$input_file"

# Close the C array declaration.
echo "};"
</file>

<file path="util/convert_to_string.sh">
#!/usr/bin/env bash
# AI-Disclaimer: This file was largely generated using AI and only tested for our
# specific use case. As such functionality can't be guaranteed.
#
BOLD=$'\033[1m'
RESET=$'\033[0m'

usage() {
  cat <<EOF
${BOLD}Usage: ./convert_ascii.sh input.txt [VARIABLE_NAME]${RESET}

Example:
  ./convert_ascii.sh ascii_art.txt MEDIUM_X

If ascii_art.txt contains:
  .___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______ 
  |           ||  | |  |/  / |           |   /   \     |  |/  / |           | /  __  \  |   ____|
  \`---|  |----\`|  | |  '  /  \`---|  |----\`  /  ^  \    |  '  /  \`---|  |----\`|  |  |  | |  |__    
      |  |     |  | |    <       |  |      /  /_\  \   |    <       |  |     |  |  |  | |   __|   
      |  |     |  | |  .  \      |  |     /  _____  \  |  .  \      |  |     |  \`--'  | |  |____  
      |__|     |__| |__|\__\     |__|    /__/     \__\ |__|\__\     |__|      \______/  |_______| 

The script outputs:

#define MEDIUM_X "\\
.___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______ \n\\
|           ||  | |  |/  / |           |   /   \\     |  |/  / |           | /  __  \\  |   ____| \n\\
\`---|  |----\`|  | |  '  /  \`---|  |----\`  /  ^  \\    |  '  /  \`---|  |----\`|  |  |  | |  |__   \\n\\
    |  |     |  | |    <       |  |      /  /_\\  \\   |    <       |  |     |  |  |  | |   __|   \n\\
    |  |     |  | |  .  \\      |  |     /  _____  \\  |  .  \\      |  |     |  \`--'  | |  |____  \n\\
    |__|     |__| |__|\\__\\     |__|    /__/     \\__\\ |__|\\__\\     |__|      \\______/  |_______| \n\\
"
EOF
}

if [ "$#" -lt 2 ]; then
    usage
    exit 1
fi

input_file="$1"
varname="$2"

# Begin output: note the backslash at the end of the first line for multi-line C string literal
echo "#define $varname \"\\"

# Process each line of the input file
while IFS= read -r line; do
    # Escape backslashes by replacing each '\' with '\\'
    escaped_line=$(echo "$line" | sed 's/\\/\\\\/g')
    # Also escape double quotes, if any
    escaped_line=$(echo "$escaped_line" | sed 's/"/\\"/g')
    # Print the line with an embedded newline escape and a continuation backslash
    echo "${escaped_line}\\n\\"
done < "$input_file"

# End the C variable declaration
echo "\""
</file>

<file path=".clang-format">
---
Language:        Cpp
AccessModifierOffset: -2
AlignAfterOpenBracket: AlwaysBreak
AlignArrayOfStructures: None
AlignConsecutiveAssignments:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    true
AlignConsecutiveBitFields:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveDeclarations:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveMacros:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveShortCaseStatements:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCaseArrows: false
  AlignCaseColons: false
AlignConsecutiveTableGenBreakingDAGArgColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveTableGenCondOperatorColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignConsecutiveTableGenDefinitionColons:
  Enabled:         false
  AcrossEmptyLines: false
  AcrossComments:  false
  AlignCompound:   false
  AlignFunctionPointers: false
  PadOperators:    false
AlignEscapedNewlines: DontAlign
AlignOperands:   DontAlign
AlignTrailingComments:
  Kind:            Always
  OverEmptyLines:  0
AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowBreakBeforeNoexceptSpecifier: Never
AllowShortBlocksOnASingleLine: Always
AllowShortCaseExpressionOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: false
AllowShortCompoundRequirementOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakBeforeMultilineStrings: false
AttributeMacros:
  - __capability
BinPackArguments: false
BinPackParameters: false
BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel:  false
  AfterClass:      true
  AfterControlStatement: Always
  AfterEnum:       true
  AfterExternBlock: false
  AfterFunction:   true
  AfterNamespace:  false
  AfterObjCDeclaration: true
  AfterStruct:     true
  AfterUnion:      true
  BeforeCatch:     true
  BeforeElse:      true
  BeforeLambdaBody: false
  BeforeWhile:     false
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true
BreakAdjacentStringLiterals: true
BreakAfterAttributes: Never
BreakAfterJavaFieldAnnotations: false
BreakAfterReturnType: Automatic
BreakArrays:     true
BreakBeforeBinaryOperators: NonAssignment
BreakBeforeConceptDeclarations: Always
BreakBeforeBraces: Custom
BreakBeforeInlineASMColon: OnlyMultiline
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: AfterColon
BreakFunctionDefinitionParameters: false
BreakInheritanceList: AfterColon
BreakStringLiterals: true
BreakTemplateDeclarations: Yes
ColumnLimit:     100
CommentPragmas:  '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
DerivePointerAlignment: false
DisableFormat:   false
EmptyLineAfterAccessModifier: Never
EmptyLineBeforeAccessModifier: LogicalBlock
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: false
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IfMacros:
  - KJ_IF_MAYBE
IncludeBlocks:   Preserve
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
    SortPriority:    0
    CaseSensitive:   false
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0
    CaseSensitive:   false
IncludeIsMainRegex: '(Test)?$'
IncludeIsMainSourceRegex: ''
IndentAccessModifiers: true
IndentCaseBlocks: false
IndentCaseLabels: true
IndentExternBlock: AfterExternBlock
IndentGotoLabels: true
IndentPPDirectives: None
IndentRequiresClause: true
IndentWidth:     4
IndentWrappedFunctionNames: false
InsertBraces:    false
InsertNewlineAtEOF: true
InsertTrailingCommas: None
JavaScriptQuotes: Leave
JavaScriptWrapImports: true
KeepEmptyLines:
  AtEndOfFile:     false
  AtStartOfBlock:  false
  AtStartOfFile:   false
LambdaBodyIndentation: Signature
LineEnding:      DeriveLF
MacroBlockBegin: ''
MacroBlockEnd:   ''
MainIncludeChar: Quote
MaxEmptyLinesToKeep: 2
NamespaceIndentation: None
ObjCBinPackProtocolList: Auto
ObjCBlockIndentWidth: 2
ObjCBreakBeforeNestedBlockParam: true
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
PackConstructorInitializers: Never
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakOpenParenthesis: 0
PenaltyBreakScopeResolution: 500
PenaltyBreakString: 1000
PenaltyBreakTemplateDeclaration: 10
PenaltyExcessCharacter: 1000000
PenaltyIndentedWhitespace: 0
PenaltyReturnTypeOnItsOwnLine: 60
PointerAlignment: Right
PPIndentWidth:   -1
QualifierAlignment: Leave
ReferenceAlignment: Pointer
ReflowComments:  true
RemoveBracesLLVM: false
RemoveParentheses: Leave
RemoveSemicolon: false
RequiresClausePosition: OwnLine
RequiresExpressionIndentation: OuterScope
SeparateDefinitionBlocks: Leave
ShortNamespaceLines: 1
SkipMacroDefinitionBody: false
SortIncludes:    Never
SortJavaStaticImport: Before
SortUsingDeclarations: LexicographicNumeric
SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Both
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeJsonColon: false
SpaceBeforeParens: Never
SpaceBeforeParensOptions:
  AfterControlStatements: false
  AfterForeachMacros: false
  AfterFunctionDefinitionName: false
  AfterFunctionDeclarationName: false
  AfterIfMacros:   true
  AfterOverloadedOperator: false
  AfterPlacementOperator: true
  AfterRequiresInClause: false
  AfterRequiresInExpression: false
  BeforeNonEmptyParentheses: false
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpacesBeforeTrailingComments: 0
SpacesInAngles:  Always
SpacesInContainerLiterals: true
SpacesInLineCommentPrefix:
  Minimum:         1
  Maximum:         -1
SpacesInParens:  Custom
SpacesInParensOptions:
  ExceptDoubleParentheses: false
  InCStyleCasts:   false
  InConditionalStatements: false
  InEmptyParentheses: false
  Other:           false
SpacesInSquareBrackets: false
Standard:        Latest
StatementAttributeLikeMacros:
  - Q_EMIT
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TableGenBreakInsideDAGArg: DontBreak
TabWidth:        4
UseTab:          Never
VerilogBreakBetweenInstancePorts: true
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
  - NS_SWIFT_NAME
  - CF_SWIFT_NAME
...
</file>

<file path=".envrc">
use flake
</file>

<file path="AUTHORS">
Simon Blum
Ben Oeckl
Paul Stöckle
Maximilian Rodler
# Based on code by
Thomas Vogt
Sven Reis
</file>

<file path="compile_commands.json">
[
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/interrupts.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/interrupts.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/interrupts.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/interrupts.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/memset.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/memset.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/memset.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/memset.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/random.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/random.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/random.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/random.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/register_access.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/register_access.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/register_access.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/register_access.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/system.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/system.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/system.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/system.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/timer.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/timer.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/timer.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/timer.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/hal/uart.c.obj -c /home/simon/2_Uni/tiktaktoe/src/hal/uart.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/hal/uart.c",
  "output": "CMakeFiles/TikTakToe.dir/src/hal/uart.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/logic/bot.c.obj -c /home/simon/2_Uni/tiktaktoe/src/logic/bot.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/logic/bot.c",
  "output": "CMakeFiles/TikTakToe.dir/src/logic/bot.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/logic/game.c.obj -c /home/simon/2_Uni/tiktaktoe/src/logic/game.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/logic/game.c",
  "output": "CMakeFiles/TikTakToe.dir/src/logic/game.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/logic/input.c.obj -c /home/simon/2_Uni/tiktaktoe/src/logic/input.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/logic/input.c",
  "output": "CMakeFiles/TikTakToe.dir/src/logic/input.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/logic/time.c.obj -c /home/simon/2_Uni/tiktaktoe/src/logic/time.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/logic/time.c",
  "output": "CMakeFiles/TikTakToe.dir/src/logic/time.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/logic/winning.c.obj -c /home/simon/2_Uni/tiktaktoe/src/logic/winning.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/logic/winning.c",
  "output": "CMakeFiles/TikTakToe.dir/src/logic/winning.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/main.c.obj -c /home/simon/2_Uni/tiktaktoe/src/main.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/main.c",
  "output": "CMakeFiles/TikTakToe.dir/src/main.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/cell.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/cell.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/cell.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/cell.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/cursor.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/cursor.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/cursor.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/cursor.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/field.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/field.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/field.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/field.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/menu.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/menu.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/menu.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/menu.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/print.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/print.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/print.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/print.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/style.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/style.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/style.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/style.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/presentation/ui.c.obj -c /home/simon/2_Uni/tiktaktoe/src/presentation/ui.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/presentation/ui.c",
  "output": "CMakeFiles/TikTakToe.dir/src/presentation/ui.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/util/conversion.c.obj -c /home/simon/2_Uni/tiktaktoe/src/util/conversion.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/util/conversion.c",
  "output": "CMakeFiles/TikTakToe.dir/src/util/conversion.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/util/error_handling.c.obj -c /home/simon/2_Uni/tiktaktoe/src/util/error_handling.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/util/error_handling.c",
  "output": "CMakeFiles/TikTakToe.dir/src/util/error_handling.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/src/util/input_buf.c.obj -c /home/simon/2_Uni/tiktaktoe/src/util/input_buf.c",
  "file": "/home/simon/2_Uni/tiktaktoe/src/util/input_buf.c",
  "output": "CMakeFiles/TikTakToe.dir/src/util/input_buf.c.obj"
},
{
  "directory": "/home/simon/2_Uni/tiktaktoe/build-cortex-m0",
  "command": "/nix/store/h5h5ppbyvs1w1fdjz8mywphkpx3cf2n2-gcc-arm-embedded-12.3.rel1/bin/arm-none-eabi-gcc  -I/home/simon/2_Uni/tiktaktoe/include -nostdlib -mcpu=cortex-m0 -Wall -Werror -g -o CMakeFiles/TikTakToe.dir/entry/entry.S.obj -c /home/simon/2_Uni/tiktaktoe/entry/entry.S",
  "file": "/home/simon/2_Uni/tiktaktoe/entry/entry.S",
  "output": "CMakeFiles/TikTakToe.dir/entry/entry.S.obj"
}
]
</file>

<file path="Conventions.md">
# Coding Conventions
- Conventional Commits (https://gist.github.com/qoomon/5dfcdf8eec66a051ecd85625518cfd13)
- The architecture is documented in this README
- Every file must have a short description at the beginning
- Every function must have a doc comment with a short description
- Not self describing code must be commented (should be avoided)
- Public functions start with the package name followed by an underscore
- Private functions should therefore not be called from outside
- Private functions should be defined in the beginning of the source files
- Private functions should be implemented in the source file, following the public functions

## File structure
All files should follow a common structure as defined below. Exceptions may be made, however
these should be explicitely explained.

### Header file structure
1. Module comment
2. Defines
3. global constants
4. global variables
5. structs
6. public function prototypes

### Source file structure
1. Module comment (may reference header comment and add information if needed)
2. module constants
3. module variables
4. private function prototypes
5. public function implementations
6. private function implementations


### Naming
#### Functions
- public functions should be prefixed with "`module_[...]`"
- private functions should be marked as `static` and prefixed with "`_[...]`"
- the function name itself should be written in `camelCase`
- a specialization may follow as a suffix, such as "`[...]_waiting`"


## Documentation
- All files should contain a top level comment structured similiar to this:
```c
/**
 * @file 
 *
 * @brief 
 *
 * @ingroup
 *
 * @see 
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
```
- All public functions should be documented in the header file
- All private functions should be documented at the definition in the source files

```c
/**
 * Brief
 * 
 * Details
 * 
 * @param
 *
 * @return
 */
```
</file>

<file path="Doxyfile">
# Doxyfile 1.10.0

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.
#
# All text after a double hash (##) is considered a comment and is placed in
# front of the TAG it is preceding.
#
# All text after a single hash (#) is considered a comment and will be ignored.
# The format is:
# TAG = value [value, ...]
# For lists, items can also be appended using:
# TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (\" \").
#
# Note:
#
# Use doxygen to compare the used configuration file with the template
# configuration file:
# doxygen -x [configFile]
# Use doxygen to compare the used configuration file with the template
# configuration file without replacing the environment variables or CMake type
# replacement variables:
# doxygen -x_noenv [configFile]

#---------------------------------------------------------------------------
# Project related configuration options
#---------------------------------------------------------------------------

# This tag specifies the encoding used for all characters in the configuration
# file that follow. The default is UTF-8 which is also the encoding used for all
# text before the first occurrence of this tag. Doxygen uses libiconv (or the
# iconv built into libc) for the transcoding. See
# https://www.gnu.org/software/libiconv/ for the list of possible encodings.
# The default value is: UTF-8.

DOXYFILE_ENCODING      = UTF-8

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by
# double-quotes, unless you are using Doxywizard) that should identify the
# project for which the documentation is generated. This name is used in the
# title of most generated pages and in a few other places.
# The default value is: My Project.

PROJECT_NAME           = TikTakToe

# The PROJECT_NUMBER tag can be used to enter a project or revision number. This
# could be handy for archiving the generated documentation or if some version
# control system is used.

PROJECT_NUMBER         = 1.0.0

# Using the PROJECT_BRIEF tag one can provide an optional one line description
# for a project that appears at the top of each page and should give viewer a
# quick idea about the purpose of the project. Keep the description short.

PROJECT_BRIEF          =

# With the PROJECT_LOGO tag one can specify a logo or an icon that is included
# in the documentation. The maximum height of the logo should not exceed 55
# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy
# the logo to the output directory.

PROJECT_LOGO           = assets/DHBW-Logo.png

# With the PROJECT_ICON tag one can specify an icon that is included in the tabs
# when the HTML document is shown. Doxygen will copy the logo to the output
# directory.

PROJECT_ICON           =

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path
# into which the generated documentation will be written. If a relative path is
# entered, it will be relative to the location where doxygen was started. If
# left blank the current directory will be used.

OUTPUT_DIRECTORY       = docs/

# If the CREATE_SUBDIRS tag is set to YES then doxygen will create up to 4096
# sub-directories (in 2 levels) under the output directory of each output format
# and will distribute the generated files over these directories. Enabling this
# option can be useful when feeding doxygen a huge amount of source files, where
# putting all generated files in the same directory would otherwise causes
# performance problems for the file system. Adapt CREATE_SUBDIRS_LEVEL to
# control the number of sub-directories.
# The default value is: NO.

CREATE_SUBDIRS         = YES

# Controls the number of sub-directories that will be created when
# CREATE_SUBDIRS tag is set to YES. Level 0 represents 16 directories, and every
# level increment doubles the number of directories, resulting in 4096
# directories at level 8 which is the default and also the maximum value. The
# sub-directories are organized in 2 levels, the first level always has a fixed
# number of 16 directories.
# Minimum value: 0, maximum value: 8, default value: 8.
# This tag requires that the tag CREATE_SUBDIRS is set to YES.

CREATE_SUBDIRS_LEVEL   = 8

# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII
# characters to appear in the names of generated files. If set to NO, non-ASCII
# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode
# U+3044.
# The default value is: NO.

ALLOW_UNICODE_NAMES    = NO

# The OUTPUT_LANGUAGE tag is used to specify the language in which all
# documentation generated by doxygen is written. Doxygen will use this
# information to generate all constant output in the proper language.
# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Bulgarian,
# Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, English
# (United States), Esperanto, Farsi (Persian), Finnish, French, German, Greek,
# Hindi, Hungarian, Indonesian, Italian, Japanese, Japanese-en (Japanese with
# English messages), Korean, Korean-en (Korean with English messages), Latvian,
# Lithuanian, Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese,
# Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish,
# Swedish, Turkish, Ukrainian and Vietnamese.
# The default value is: English.

OUTPUT_LANGUAGE        = English

# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member
# descriptions after the members that are listed in the file and class
# documentation (similar to Javadoc). Set to NO to disable this.
# The default value is: YES.

BRIEF_MEMBER_DESC      = YES

# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief
# description of a member or function before the detailed description
#
# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
# brief descriptions will be completely suppressed.
# The default value is: YES.

REPEAT_BRIEF           = YES

# This tag implements a quasi-intelligent brief description abbreviator that is
# used to form the text in various listings. Each string in this list, if found
# as the leading text of the brief description, will be stripped from the text
# and the result, after processing the whole list, is used as the annotated
# text. Otherwise, the brief description is used as-is. If left blank, the
# following values are used ($name is automatically replaced with the name of
# the entity):The $name class, The $name widget, The $name file, is, provides,
# specifies, contains, represents, a, an and the.

ABBREVIATE_BRIEF       = "The $name class" \
                         "The $name widget" \
                         "The $name file" \
                         is \
                         provides \
                         specifies \
                         contains \
                         represents \
                         a \
                         an \
                         the

# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
# doxygen will generate a detailed section even if there is only a brief
# description.
# The default value is: NO.

ALWAYS_DETAILED_SEC    = NO

# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
# inherited members of a class in the documentation of that class as if those
# members were ordinary class members. Constructors, destructors and assignment
# operators of the base classes will not be shown.
# The default value is: NO.

INLINE_INHERITED_MEMB  = NO

# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path
# before files name in the file list and in the header files. If set to NO the
# shortest path that makes the file name unique will be used
# The default value is: YES.

FULL_PATH_NAMES        = YES

# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.
# Stripping is only done if one of the specified strings matches the left-hand
# part of the path. The tag can be used to show relative paths in the file list.
# If left blank the directory from which doxygen is run is used as the path to
# strip.
#
# Note that you can specify absolute paths here, but also relative paths, which
# will be relative from the directory where doxygen is started.
# This tag requires that the tag FULL_PATH_NAMES is set to YES.

STRIP_FROM_PATH        = src include

# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the
# path mentioned in the documentation of a class, which tells the reader which
# header file to include in order to use a class. If left blank only the name of
# the header file containing the class definition is used. Otherwise one should
# specify the list of include paths that are normally passed to the compiler
# using the -I flag.

STRIP_FROM_INC_PATH    =

# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but
# less readable) file names. This can be useful is your file systems doesn't
# support long names like on DOS, Mac, or CD-ROM.
# The default value is: NO.

SHORT_NAMES            = NO

# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the
# first line (until the first dot) of a Javadoc-style comment as the brief
# description. If set to NO, the Javadoc-style will behave just like regular Qt-
# style comments (thus requiring an explicit @brief command for a brief
# description.)
# The default value is: NO.

JAVADOC_AUTOBRIEF      = NO

# If the JAVADOC_BANNER tag is set to YES then doxygen will interpret a line
# such as
# /***************
# as being the beginning of a Javadoc-style comment "banner". If set to NO, the
# Javadoc-style will behave just like regular comments and it will not be
# interpreted by doxygen.
# The default value is: NO.

JAVADOC_BANNER         = NO

# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first
# line (until the first dot) of a Qt-style comment as the brief description. If
# set to NO, the Qt-style will behave just like regular Qt-style comments (thus
# requiring an explicit \brief command for a brief description.)
# The default value is: NO.

QT_AUTOBRIEF           = NO

# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a
# multi-line C++ special comment block (i.e. a block of //! or /// comments) as
# a brief description. This used to be the default behavior. The new default is
# to treat a multi-line C++ comment block as a detailed description. Set this
# tag to YES if you prefer the old behavior instead.
#
# Note that setting this tag to YES also means that rational rose comments are
# not recognized any more.
# The default value is: NO.

MULTILINE_CPP_IS_BRIEF = NO

# By default Python docstrings are displayed as preformatted text and doxygen's
# special commands cannot be used. By setting PYTHON_DOCSTRING to NO the
# doxygen's special commands can be used and the contents of the docstring
# documentation blocks is shown as doxygen documentation.
# The default value is: YES.

PYTHON_DOCSTRING       = YES

# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the
# documentation from any documented member that it re-implements.
# The default value is: YES.

INHERIT_DOCS           = YES

# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new
# page for each member. If set to NO, the documentation of a member will be part
# of the file/class/namespace that contains it.
# The default value is: NO.

SEPARATE_MEMBER_PAGES  = NO

# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen
# uses this value to replace tabs by spaces in code fragments.
# Minimum value: 1, maximum value: 16, default value: 4.

TAB_SIZE               = 4

# This tag can be used to specify a number of aliases that act as commands in
# the documentation. An alias has the form:
# name=value
# For example adding
# "sideeffect=@par Side Effects:^^"
# will allow you to put the command \sideeffect (or @sideeffect) in the
# documentation, which will result in a user-defined paragraph with heading
# "Side Effects:". Note that you cannot put \n's in the value part of an alias
# to insert newlines (in the resulting output). You can put ^^ in the value part
# of an alias to insert a newline as if a physical newline was in the original
# file. When you need a literal { or } or , in the value part of an alias you
# have to escape them by means of a backslash (\), this can lead to conflicts
# with the commands \{ and \} for these it is advised to use the version @{ and
# @} or use a double escape (\\{ and \\})

ALIASES                =

# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources
# only. Doxygen will then generate output that is more tailored for C. For
# instance, some of the names that are used will be different. The list of all
# members will be omitted, etc.
# The default value is: NO.

OPTIMIZE_OUTPUT_FOR_C  = YES

# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or
# Python sources only. Doxygen will then generate output that is more tailored
# for that language. For instance, namespaces will be presented as packages,
# qualified scopes will look different, etc.
# The default value is: NO.

OPTIMIZE_OUTPUT_JAVA   = NO

# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
# sources. Doxygen will then generate output that is tailored for Fortran.
# The default value is: NO.

OPTIMIZE_FOR_FORTRAN   = NO

# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
# sources. Doxygen will then generate output that is tailored for VHDL.
# The default value is: NO.

OPTIMIZE_OUTPUT_VHDL   = NO

# Set the OPTIMIZE_OUTPUT_SLICE tag to YES if your project consists of Slice
# sources only. Doxygen will then generate output that is more tailored for that
# language. For instance, namespaces will be presented as modules, types will be
# separated into more groups, etc.
# The default value is: NO.

OPTIMIZE_OUTPUT_SLICE  = NO

# Doxygen selects the parser to use depending on the extension of the files it
# parses. With this tag you can assign which parser to use for a given
# extension. Doxygen has a built-in mapping, but you can override or extend it
# using this tag. The format is ext=language, where ext is a file extension, and
# language is one of the parsers supported by doxygen: IDL, Java, JavaScript,
# Csharp (C#), C, C++, Lex, D, PHP, md (Markdown), Objective-C, Python, Slice,
# VHDL, Fortran (fixed format Fortran: FortranFixed, free formatted Fortran:
# FortranFree, unknown formatted Fortran: Fortran. In the later case the parser
# tries to guess whether the code is fixed or free formatted code, this is the
# default for Fortran type files). For instance to make doxygen treat .inc files
# as Fortran files (default is PHP), and .f files as C (default is Fortran),
# use: inc=Fortran f=C.
#
# Note: For files without extension you can use no_extension as a placeholder.
#
# Note that for custom extensions you also need to set FILE_PATTERNS otherwise
# the files are not read by doxygen. When specifying no_extension you should add
# * to the FILE_PATTERNS.
#
# Note see also the list of default file extension mappings.

EXTENSION_MAPPING      =

# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments
# according to the Markdown format, which allows for more readable
# documentation. See https://daringfireball.net/projects/markdown/ for details.
# The output of markdown processing is further processed by doxygen, so you can
# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in
# case of backward compatibilities issues.
# The default value is: YES.

MARKDOWN_SUPPORT       = YES

# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up
# to that level are automatically included in the table of contents, even if
# they do not have an id attribute.
# Note: This feature currently applies only to Markdown headings.
# Minimum value: 0, maximum value: 99, default value: 5.
# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.

TOC_INCLUDE_HEADINGS   = 5

# The MARKDOWN_ID_STYLE tag can be used to specify the algorithm used to
# generate identifiers for the Markdown headings. Note: Every identifier is
# unique.
# Possible values are: DOXYGEN use a fixed 'autotoc_md' string followed by a
# sequence number starting at 0 and GITHUB use the lower case version of title
# with any whitespace replaced by '-' and punctuation characters removed.
# The default value is: DOXYGEN.
# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.

MARKDOWN_ID_STYLE      = DOXYGEN

# When enabled doxygen tries to link words that correspond to documented
# classes, or namespaces to their corresponding documentation. Such a link can
# be prevented in individual cases by putting a % sign in front of the word or
# globally by setting AUTOLINK_SUPPORT to NO.
# The default value is: YES.

AUTOLINK_SUPPORT       = YES

# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
# to include (a tag file for) the STL sources as input, then you should set this
# tag to YES in order to let doxygen match functions declarations and
# definitions whose arguments contain STL classes (e.g. func(std::string);
# versus func(std::string) {}). This also make the inheritance and collaboration
# diagrams that involve STL classes more complete and accurate.
# The default value is: NO.

BUILTIN_STL_SUPPORT    = NO

# If you use Microsoft's C++/CLI language, you should set this option to YES to
# enable parsing support.
# The default value is: NO.

CPP_CLI_SUPPORT        = NO

# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:
# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen
# will parse them like normal C++ but will assume all classes use public instead
# of private inheritance when no explicit protection keyword is present.
# The default value is: NO.

SIP_SUPPORT            = NO

# For Microsoft's IDL there are propget and propput attributes to indicate
# getter and setter methods for a property. Setting this option to YES will make
# doxygen to replace the get and set methods by a property in the documentation.
# This will only work if the methods are indeed getting or setting a simple
# type. If this is not the case, or you want to show the methods anyway, you
# should set this option to NO.
# The default value is: YES.

IDL_PROPERTY_SUPPORT   = YES

# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
# tag is set to YES then doxygen will reuse the documentation of the first
# member in the group (if any) for the other members of the group. By default
# all members of a group must be documented explicitly.
# The default value is: NO.

DISTRIBUTE_GROUP_DOC   = NO

# If one adds a struct or class to a group and this option is enabled, then also
# any nested class or struct is added to the same group. By default this option
# is disabled and one has to add nested compounds explicitly via \ingroup.
# The default value is: NO.

GROUP_NESTED_COMPOUNDS = NO

# Set the SUBGROUPING tag to YES to allow class member groups of the same type
# (for instance a group of public functions) to be put as a subgroup of that
# type (e.g. under the Public Functions section). Set it to NO to prevent
# subgrouping. Alternatively, this can be done per class using the
# \nosubgrouping command.
# The default value is: YES.

SUBGROUPING            = YES

# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions
# are shown inside the group in which they are included (e.g. using \ingroup)
# instead of on a separate page (for HTML and Man pages) or section (for LaTeX
# and RTF).
#
# Note that this feature does not work in combination with
# SEPARATE_MEMBER_PAGES.
# The default value is: NO.

INLINE_GROUPED_CLASSES = NO

# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions
# with only public data fields or simple typedef fields will be shown inline in
# the documentation of the scope in which they are defined (i.e. file,
# namespace, or group documentation), provided this scope is documented. If set
# to NO, structs, classes, and unions are shown on a separate page (for HTML and
# Man pages) or section (for LaTeX and RTF).
# The default value is: NO.

INLINE_SIMPLE_STRUCTS  = NO

# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or
# enum is documented as struct, union, or enum with the name of the typedef. So
# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
# with name TypeT. When disabled the typedef will appear as a member of a file,
# namespace, or class. And the struct will be named TypeS. This can typically be
# useful for C code in case the coding convention dictates that all compound
# types are typedef'ed and only the typedef is referenced, never the tag name.
# The default value is: NO.

TYPEDEF_HIDES_STRUCT   = NO

# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This
# cache is used to resolve symbols given their name and scope. Since this can be
# an expensive process and often the same symbol appears multiple times in the
# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small
# doxygen will become slower. If the cache is too large, memory is wasted. The
# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range
# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536
# symbols. At the end of a run doxygen will report the cache usage and suggest
# the optimal cache size from a speed point of view.
# Minimum value: 0, maximum value: 9, default value: 0.

LOOKUP_CACHE_SIZE      = 0

# The NUM_PROC_THREADS specifies the number of threads doxygen is allowed to use
# during processing. When set to 0 doxygen will based this on the number of
# cores available in the system. You can set it explicitly to a value larger
# than 0 to get more control over the balance between CPU load and processing
# speed. At this moment only the input processing can be done using multiple
# threads. Since this is still an experimental feature the default is set to 1,
# which effectively disables parallel processing. Please report any issues you
# encounter. Generating dot graphs in parallel is controlled by the
# DOT_NUM_THREADS setting.
# Minimum value: 0, maximum value: 32, default value: 1.

NUM_PROC_THREADS       = 1

# If the TIMESTAMP tag is set different from NO then each generated page will
# contain the date or date and time when the page was generated. Setting this to
# NO can help when comparing the output of multiple runs.
# Possible values are: YES, NO, DATETIME and DATE.
# The default value is: NO.

TIMESTAMP              = DATETIME

#---------------------------------------------------------------------------
# Build related configuration options
#---------------------------------------------------------------------------

# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in
# documentation are documented, even if no documentation was available. Private
# class members and static file members will be hidden unless the
# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.
# Note: This will also disable the warnings about undocumented members that are
# normally produced when WARNINGS is set to YES.
# The default value is: NO.

EXTRACT_ALL            = YES

# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will
# be included in the documentation.
# The default value is: NO.

EXTRACT_PRIVATE        = YES

# If the EXTRACT_PRIV_VIRTUAL tag is set to YES, documented private virtual
# methods of a class will be included in the documentation.
# The default value is: NO.

EXTRACT_PRIV_VIRTUAL   = YES

# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal
# scope will be included in the documentation.
# The default value is: NO.

EXTRACT_PACKAGE        = YES

# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be
# included in the documentation.
# The default value is: NO.

EXTRACT_STATIC         = YES

# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined
# locally in source files will be included in the documentation. If set to NO,
# only classes defined in header files are included. Does not have any effect
# for Java sources.
# The default value is: YES.

EXTRACT_LOCAL_CLASSES  = YES

# This flag is only useful for Objective-C code. If set to YES, local methods,
# which are defined in the implementation section but not in the interface are
# included in the documentation. If set to NO, only methods in the interface are
# included.
# The default value is: NO.

EXTRACT_LOCAL_METHODS  = YES

# If this flag is set to YES, the members of anonymous namespaces will be
# extracted and appear in the documentation as a namespace called
# 'anonymous_namespace{file}', where file will be replaced with the base name of
# the file that contains the anonymous namespace. By default anonymous namespace
# are hidden.
# The default value is: NO.

EXTRACT_ANON_NSPACES   = YES

# If this flag is set to YES, the name of an unnamed parameter in a declaration
# will be determined by the corresponding definition. By default unnamed
# parameters remain unnamed in the output.
# The default value is: YES.

RESOLVE_UNNAMED_PARAMS = YES

# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all
# undocumented members inside documented classes or files. If set to NO these
# members will be included in the various overviews, but no documentation
# section is generated. This option has no effect if EXTRACT_ALL is enabled.
# The default value is: NO.

HIDE_UNDOC_MEMBERS     = NO

# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all
# undocumented classes that are normally visible in the class hierarchy. If set
# to NO, these classes will be included in the various overviews. This option
# will also hide undocumented C++ concepts if enabled. This option has no effect
# if EXTRACT_ALL is enabled.
# The default value is: NO.

HIDE_UNDOC_CLASSES     = NO

# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend
# declarations. If set to NO, these declarations will be included in the
# documentation.
# The default value is: NO.

HIDE_FRIEND_COMPOUNDS  = NO

# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any
# documentation blocks found inside the body of a function. If set to NO, these
# blocks will be appended to the function's detailed documentation block.
# The default value is: NO.

HIDE_IN_BODY_DOCS      = NO

# The INTERNAL_DOCS tag determines if documentation that is typed after a
# \internal command is included. If the tag is set to NO then the documentation
# will be excluded. Set it to YES to include the internal documentation.
# The default value is: NO.

INTERNAL_DOCS          = NO

# With the correct setting of option CASE_SENSE_NAMES doxygen will better be
# able to match the capabilities of the underlying filesystem. In case the
# filesystem is case sensitive (i.e. it supports files in the same directory
# whose names only differ in casing), the option must be set to YES to properly
# deal with such files in case they appear in the input. For filesystems that
# are not case sensitive the option should be set to NO to properly deal with
# output files written for symbols that only differ in casing, such as for two
# classes, one named CLASS and the other named Class, and to also support
# references to files without having to specify the exact matching casing. On
# Windows (including Cygwin) and MacOS, users should typically set this option
# to NO, whereas on Linux or other Unix flavors it should typically be set to
# YES.
# Possible values are: SYSTEM, NO and YES.
# The default value is: SYSTEM.

CASE_SENSE_NAMES       = SYSTEM

# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with
# their full class and namespace scopes in the documentation. If set to YES, the
# scope will be hidden.
# The default value is: NO.

HIDE_SCOPE_NAMES       = NO

# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will
# append additional text to a page's title, such as Class Reference. If set to
# YES the compound reference will be hidden.
# The default value is: NO.

HIDE_COMPOUND_REFERENCE= NO

# If the SHOW_HEADERFILE tag is set to YES then the documentation for a class
# will show which file needs to be included to use the class.
# The default value is: YES.

SHOW_HEADERFILE        = YES

# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of
# the files that are included by a file in the documentation of that file.
# The default value is: YES.

SHOW_INCLUDE_FILES     = YES

# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each
# grouped member an include statement to the documentation, telling the reader
# which file to include in order to use the member.
# The default value is: NO.

SHOW_GROUPED_MEMB_INC  = NO

# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include
# files with double quotes in the documentation rather than with sharp brackets.
# The default value is: NO.

FORCE_LOCAL_INCLUDES   = NO

# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the
# documentation for inline members.
# The default value is: YES.

INLINE_INFO            = YES

# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the
# (detailed) documentation of file and class members alphabetically by member
# name. If set to NO, the members will appear in declaration order.
# The default value is: YES.

SORT_MEMBER_DOCS       = YES

# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief
# descriptions of file, namespace and class members alphabetically by member
# name. If set to NO, the members will appear in declaration order. Note that
# this will also influence the order of the classes in the class list.
# The default value is: NO.

SORT_BRIEF_DOCS        = NO

# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the
# (brief and detailed) documentation of class members so that constructors and
# destructors are listed first. If set to NO the constructors will appear in the
# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.
# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief
# member documentation.
# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting
# detailed member documentation.
# The default value is: NO.

SORT_MEMBERS_CTORS_1ST = NO

# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy
# of group names into alphabetical order. If set to NO the group names will
# appear in their defined order.
# The default value is: NO.

SORT_GROUP_NAMES       = NO

# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by
# fully-qualified names, including namespaces. If set to NO, the class list will
# be sorted only by class name, not including the namespace part.
# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
# Note: This option applies only to the class list, not to the alphabetical
# list.
# The default value is: NO.

SORT_BY_SCOPE_NAME     = NO

# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper
# type resolution of all parameters of a function it will reject a match between
# the prototype and the implementation of a member function even if there is
# only one candidate or it is obvious which candidate to choose by doing a
# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still
# accept a match between prototype and implementation in such cases.
# The default value is: NO.

STRICT_PROTO_MATCHING  = NO

# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo
# list. This list is created by putting \todo commands in the documentation.
# The default value is: YES.

GENERATE_TODOLIST      = YES

# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test
# list. This list is created by putting \test commands in the documentation.
# The default value is: YES.

GENERATE_TESTLIST      = YES

# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug
# list. This list is created by putting \bug commands in the documentation.
# The default value is: YES.

GENERATE_BUGLIST       = YES

# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)
# the deprecated list. This list is created by putting \deprecated commands in
# the documentation.
# The default value is: YES.

GENERATE_DEPRECATEDLIST= YES

# The ENABLED_SECTIONS tag can be used to enable conditional documentation
# sections, marked by \if <section_label> ... \endif and \cond <section_label>
# ... \endcond blocks.

ENABLED_SECTIONS       =

# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the
# initial value of a variable or macro / define can have for it to appear in the
# documentation. If the initializer consists of more lines than specified here
# it will be hidden. Use a value of 0 to hide initializers completely. The
# appearance of the value of individual variables and macros / defines can be
# controlled using \showinitializer or \hideinitializer command in the
# documentation regardless of this setting.
# Minimum value: 0, maximum value: 10000, default value: 30.

MAX_INITIALIZER_LINES  = 30

# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at
# the bottom of the documentation of classes and structs. If set to YES, the
# list will mention the files that were used to generate the documentation.
# The default value is: YES.

SHOW_USED_FILES        = YES

# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This
# will remove the Files entry from the Quick Index and from the Folder Tree View
# (if specified).
# The default value is: YES.

SHOW_FILES             = YES

# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces
# page. This will remove the Namespaces entry from the Quick Index and from the
# Folder Tree View (if specified).
# The default value is: YES.

SHOW_NAMESPACES        = YES

# The FILE_VERSION_FILTER tag can be used to specify a program or script that
# doxygen should invoke to get the current version for each file (typically from
# the version control system). Doxygen will invoke the program by executing (via
# popen()) the command command input-file, where command is the value of the
# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided
# by doxygen. Whatever the program writes to standard output is used as the file
# version. For an example see the documentation.

FILE_VERSION_FILTER    =

# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
# by doxygen. The layout file controls the global structure of the generated
# output files in an output format independent way. To create the layout file
# that represents doxygen's defaults, run doxygen with the -l option. You can
# optionally specify a file name after the option, if omitted DoxygenLayout.xml
# will be used as the name of the layout file. See also section "Changing the
# layout of pages" for information.
#
# Note that if you run doxygen from a directory containing a file called
# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE
# tag is left empty.

LAYOUT_FILE            =

# The CITE_BIB_FILES tag can be used to specify one or more bib files containing
# the reference definitions. This must be a list of .bib files. The .bib
# extension is automatically appended if omitted. This requires the bibtex tool
# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.
# For LaTeX the style of the bibliography can be controlled using
# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the
# search path. See also \cite for info how to create references.

CITE_BIB_FILES         =

#---------------------------------------------------------------------------
# Configuration options related to warning and progress messages
#---------------------------------------------------------------------------

# The QUIET tag can be used to turn on/off the messages that are generated to
# standard output by doxygen. If QUIET is set to YES this implies that the
# messages are off.
# The default value is: NO.

QUIET                  = NO

# The WARNINGS tag can be used to turn on/off the warning messages that are
# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES
# this implies that the warnings are on.
#
# Tip: Turn warnings on while writing the documentation.
# The default value is: YES.

WARNINGS               = YES

# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate
# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag
# will automatically be disabled.
# The default value is: YES.

WARN_IF_UNDOCUMENTED   = YES

# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for
# potential errors in the documentation, such as documenting some parameters in
# a documented function twice, or documenting parameters that don't exist or
# using markup commands wrongly.
# The default value is: YES.

WARN_IF_DOC_ERROR      = YES

# If WARN_IF_INCOMPLETE_DOC is set to YES, doxygen will warn about incomplete
# function parameter documentation. If set to NO, doxygen will accept that some
# parameters have no documentation without warning.
# The default value is: YES.

WARN_IF_INCOMPLETE_DOC = YES

# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that
# are documented, but have no documentation for their parameters or return
# value. If set to NO, doxygen will only warn about wrong parameter
# documentation, but not about the absence of documentation. If EXTRACT_ALL is
# set to YES then this flag will automatically be disabled. See also
# WARN_IF_INCOMPLETE_DOC
# The default value is: NO.

WARN_NO_PARAMDOC       = NO

# If WARN_IF_UNDOC_ENUM_VAL option is set to YES, doxygen will warn about
# undocumented enumeration values. If set to NO, doxygen will accept
# undocumented enumeration values. If EXTRACT_ALL is set to YES then this flag
# will automatically be disabled.
# The default value is: NO.

WARN_IF_UNDOC_ENUM_VAL = NO

# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when
# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS
# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but
# at the end of the doxygen process doxygen will return with a non-zero status.
# If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS_PRINT then doxygen behaves
# like FAIL_ON_WARNINGS but in case no WARN_LOGFILE is defined doxygen will not
# write the warning messages in between other messages but write them at the end
# of a run, in case a WARN_LOGFILE is defined the warning messages will be
# besides being in the defined file also be shown at the end of a run, unless
# the WARN_LOGFILE is defined as - i.e. standard output (stdout) in that case
# the behavior will remain as with the setting FAIL_ON_WARNINGS.
# Possible values are: NO, YES, FAIL_ON_WARNINGS and FAIL_ON_WARNINGS_PRINT.
# The default value is: NO.

WARN_AS_ERROR          = NO

# The WARN_FORMAT tag determines the format of the warning messages that doxygen
# can produce. The string should contain the $file, $line, and $text tags, which
# will be replaced by the file and line number from which the warning originated
# and the warning text. Optionally the format may contain $version, which will
# be replaced by the version of the file (if it could be obtained via
# FILE_VERSION_FILTER)
# See also: WARN_LINE_FORMAT
# The default value is: $file:$line: $text.

WARN_FORMAT            = "$file:$line: $text"

# In the $text part of the WARN_FORMAT command it is possible that a reference
# to a more specific place is given. To make it easier to jump to this place
# (outside of doxygen) the user can define a custom "cut" / "paste" string.
# Example:
# WARN_LINE_FORMAT = "'vi $file +$line'"
# See also: WARN_FORMAT
# The default value is: at line $line of file $file.

WARN_LINE_FORMAT       = "at line $line of file $file"

# The WARN_LOGFILE tag can be used to specify a file to which warning and error
# messages should be written. If left blank the output is written to standard
# error (stderr). In case the file specified cannot be opened for writing the
# warning and error messages are written to standard error. When as file - is
# specified the warning and error messages are written to standard output
# (stdout).

WARN_LOGFILE           =

#---------------------------------------------------------------------------
# Configuration options related to the input files
#---------------------------------------------------------------------------

# The INPUT tag is used to specify the files and/or directories that contain
# documented source files. You may enter file names like myfile.cpp or
# directories like /usr/src/myproject. Separate the files or directories with
# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING
# Note: If this tag is empty the current directory is searched.

INPUT                  = src \
                         include \
                         README.md \
                         Architecture.md \
                         Conventions.md

# This tag can be used to specify the character encoding of the source files
# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses
# libiconv (or the iconv built into libc) for the transcoding. See the libiconv
# documentation (see:
# https://www.gnu.org/software/libiconv/) for the list of possible encodings.
# See also: INPUT_FILE_ENCODING
# The default value is: UTF-8.

INPUT_ENCODING         = UTF-8

# This tag can be used to specify the character encoding of the source files
# that doxygen parses The INPUT_FILE_ENCODING tag can be used to specify
# character encoding on a per file pattern basis. Doxygen will compare the file
# name with each pattern and apply the encoding instead of the default
# INPUT_ENCODING) if there is a match. The character encodings are a list of the
# form: pattern=encoding (like *.php=ISO-8859-1). See cfg_input_encoding
# "INPUT_ENCODING" for further information on supported encodings.

INPUT_FILE_ENCODING    =

# If the value of the INPUT tag contains directories, you can use the
# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and
# *.h) to filter out the source-files in the directories.
#
# Note that for custom extensions or not directly supported extensions you also
# need to set EXTENSION_MAPPING for the extension otherwise the files are not
# read by doxygen.
#
# Note the list of default checked file patterns might differ from the list of
# default file extension mappings.
#
# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cxxm,
# *.cpp, *.cppm, *.ccm, *.c++, *.c++m, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl,
# *.idl, *.ddl, *.odl, *.h, *.hh, *.hxx, *.hpp, *.h++, *.ixx, *.l, *.cs, *.d,
# *.php, *.php4, *.php5, *.phtml, *.inc, *.m, *.markdown, *.md, *.mm, *.dox (to
# be provided as doxygen C comment), *.py, *.pyw, *.f90, *.f95, *.f03, *.f08,
# *.f18, *.f, *.for, *.vhd, *.vhdl, *.ucf, *.qsf and *.ice.

FILE_PATTERNS          = *.c \
                         *.cc \
                         *.cxx \
                         *.cxxm \
                         *.cpp \
                         *.cppm \
                         *.ccm \
                         *.c++ \
                         *.c++m \
                         *.java \
                         *.ii \
                         *.ixx \
                         *.ipp \
                         *.i++ \
                         *.inl \
                         *.idl \
                         *.ddl \
                         *.odl \
                         *.h \
                         *.hh \
                         *.hxx \
                         *.hpp \
                         *.h++ \
                         *.ixx \
                         *.l \
                         *.cs \
                         *.d \
                         *.php \
                         *.php4 \
                         *.php5 \
                         *.phtml \
                         *.inc \
                         *.m \
                         *.markdown \
                         *.md \
                         *.mm \
                         *.dox \
                         *.py \
                         *.pyw \
                         *.f90 \
                         *.f95 \
                         *.f03 \
                         *.f08 \
                         *.f18 \
                         *.f \
                         *.for \
                         *.vhd \
                         *.vhdl \
                         *.ucf \
                         *.qsf \
                         *.ice

# The RECURSIVE tag can be used to specify whether or not subdirectories should
# be searched for input files as well.
# The default value is: NO.

RECURSIVE              = YES

# The EXCLUDE tag can be used to specify files and/or directories that should be
# excluded from the INPUT source files. This way you can easily exclude a
# subdirectory from a directory tree whose root is specified with the INPUT tag.
#
# Note that relative paths are relative to the directory from which doxygen is
# run.

EXCLUDE                = build \
                         scripts \
                         doxygen-awesome-css \
                         docs \
                         lib

# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
# directories that are symbolic links (a Unix file system feature) are excluded
# from the input.
# The default value is: NO.

EXCLUDE_SYMLINKS       = NO

# If the value of the INPUT tag contains directories, you can use the
# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
# certain files from those directories.
#
# Note that the wildcards are matched against the file with absolute path, so to
# exclude all test directories for example use the pattern */test/*

EXCLUDE_PATTERNS       =

# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
# (namespaces, classes, functions, etc.) that should be excluded from the
# output. The symbol name can be a fully qualified name, a word, or if the
# wildcard * is used, a substring. Examples: ANamespace, AClass,
# ANamespace::AClass, ANamespace::*Test

EXCLUDE_SYMBOLS        =

# The EXAMPLE_PATH tag can be used to specify one or more files or directories
# that contain example code fragments that are included (see the \include
# command).

EXAMPLE_PATH           =

# If the value of the EXAMPLE_PATH tag contains directories, you can use the
# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and
# *.h) to filter out the source-files in the directories. If left blank all
# files are included.

EXAMPLE_PATTERNS       = *

# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
# searched for input files to be used with the \include or \dontinclude commands
# irrespective of the value of the RECURSIVE tag.
# The default value is: NO.

EXAMPLE_RECURSIVE      = NO

# The IMAGE_PATH tag can be used to specify one or more files or directories
# that contain images that are to be included in the documentation (see the
# \image command).

IMAGE_PATH             =

# The INPUT_FILTER tag can be used to specify a program that doxygen should
# invoke to filter for each input file. Doxygen will invoke the filter program
# by executing (via popen()) the command:
#
# <filter> <input-file>
#
# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the
# name of an input file. Doxygen will then use the output that the filter
# program writes to standard output. If FILTER_PATTERNS is specified, this tag
# will be ignored.
#
# Note that the filter must not add or remove lines; it is applied before the
# code is scanned, but not when the output code is generated. If lines are added
# or removed, the anchors will not be placed correctly.
#
# Note that doxygen will use the data processed and written to standard output
# for further processing, therefore nothing else, like debug statements or used
# commands (so in case of a Windows batch file always use @echo OFF), should be
# written to standard output.
#
# Note that for custom extensions or not directly supported extensions you also
# need to set EXTENSION_MAPPING for the extension otherwise the files are not
# properly processed by doxygen.

INPUT_FILTER           =

# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
# basis. Doxygen will compare the file name with each pattern and apply the
# filter if there is a match. The filters are a list of the form: pattern=filter
# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how
# filters are used. If the FILTER_PATTERNS tag is empty or if none of the
# patterns match the file name, INPUT_FILTER is applied.
#
# Note that for custom extensions or not directly supported extensions you also
# need to set EXTENSION_MAPPING for the extension otherwise the files are not
# properly processed by doxygen.

FILTER_PATTERNS        =

# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
# INPUT_FILTER) will also be used to filter the input files that are used for
# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).
# The default value is: NO.

FILTER_SOURCE_FILES    = NO

# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and
# it is also possible to disable source filtering for a specific pattern using
# *.ext= (so without naming a filter).
# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.

FILTER_SOURCE_PATTERNS =

# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that
# is part of the input, its contents will be placed on the main page
# (index.html). This can be useful if you have a project on for instance GitHub
# and want to reuse the introduction page also for the doxygen output.

USE_MDFILE_AS_MAINPAGE = README.md

# The Fortran standard specifies that for fixed formatted Fortran code all
# characters from position 72 are to be considered as comment. A common
# extension is to allow longer lines before the automatic comment starts. The
# setting FORTRAN_COMMENT_AFTER will also make it possible that longer lines can
# be processed before the automatic comment starts.
# Minimum value: 7, maximum value: 10000, default value: 72.

FORTRAN_COMMENT_AFTER  = 72

#---------------------------------------------------------------------------
# Configuration options related to source browsing
#---------------------------------------------------------------------------

# If the SOURCE_BROWSER tag is set to YES then a list of source files will be
# generated. Documented entities will be cross-referenced with these sources.
#
# Note: To get rid of all source code in the generated output, make sure that
# also VERBATIM_HEADERS is set to NO.
# The default value is: NO.

SOURCE_BROWSER         = YES

# Setting the INLINE_SOURCES tag to YES will include the body of functions,
# multi-line macros, enums or list initialized variables directly into the
# documentation.
# The default value is: NO.

INLINE_SOURCES         = NO

# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any
# special comment blocks from generated source code fragments. Normal C, C++ and
# Fortran comments will always remain visible.
# The default value is: YES.

STRIP_CODE_COMMENTS    = YES

# If the REFERENCED_BY_RELATION tag is set to YES then for each documented
# entity all documented functions referencing it will be listed.
# The default value is: NO.

REFERENCED_BY_RELATION = NO

# If the REFERENCES_RELATION tag is set to YES then for each documented function
# all documented entities called/used by that function will be listed.
# The default value is: NO.

REFERENCES_RELATION    = YES

# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set
# to YES then the hyperlinks from functions in REFERENCES_RELATION and
# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will
# link to the documentation.
# The default value is: YES.

REFERENCES_LINK_SOURCE = YES

# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the
# source code will show a tooltip with additional information such as prototype,
# brief description and links to the definition and documentation. Since this
# will make the HTML file larger and loading of large files a bit slower, you
# can opt to disable this feature.
# The default value is: YES.
# This tag requires that the tag SOURCE_BROWSER is set to YES.

SOURCE_TOOLTIPS        = YES

# If the USE_HTAGS tag is set to YES then the references to source code will
# point to the HTML generated by the htags(1) tool instead of doxygen built-in
# source browser. The htags tool is part of GNU's global source tagging system
# (see https://www.gnu.org/software/global/global.html). You will need version
# 4.8.6 or higher.
#
# To use it do the following:
# - Install the latest version of global
# - Enable SOURCE_BROWSER and USE_HTAGS in the configuration file
# - Make sure the INPUT points to the root of the source tree
# - Run doxygen as normal
#
# Doxygen will invoke htags (and that will in turn invoke gtags), so these
# tools must be available from the command line (i.e. in the search path).
#
# The result: instead of the source browser generated by doxygen, the links to
# source code will now point to the output of htags.
# The default value is: NO.
# This tag requires that the tag SOURCE_BROWSER is set to YES.

USE_HTAGS              = NO

# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a
# verbatim copy of the header file for each class for which an include is
# specified. Set to NO to disable this.
# See also: Section \class.
# The default value is: YES.

VERBATIM_HEADERS       = YES

#---------------------------------------------------------------------------
# Configuration options related to the alphabetical class index
#---------------------------------------------------------------------------

# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all
# compounds will be generated. Enable this if the project contains a lot of
# classes, structs, unions or interfaces.
# The default value is: YES.

ALPHABETICAL_INDEX     = YES

# The IGNORE_PREFIX tag can be used to specify a prefix (or a list of prefixes)
# that should be ignored while generating the index headers. The IGNORE_PREFIX
# tag works for classes, function and member names. The entity will be placed in
# the alphabetical list under the first letter of the entity name that remains
# after removing the prefix.
# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.

IGNORE_PREFIX          =

#---------------------------------------------------------------------------
# Configuration options related to the HTML output
#---------------------------------------------------------------------------

# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output
# The default value is: YES.

GENERATE_HTML          = YES

# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a
# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
# it.
# The default directory is: html.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_OUTPUT            = html

# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each
# generated HTML page (for example: .htm, .php, .asp).
# The default value is: .html.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_FILE_EXTENSION    = .html

# The HTML_HEADER tag can be used to specify a user-defined HTML header file for
# each generated HTML page. If the tag is left blank doxygen will generate a
# standard header.
#
# To get valid HTML the header file that includes any scripts and style sheets
# that doxygen needs, which is dependent on the configuration options used (e.g.
# the setting GENERATE_TREEVIEW). It is highly recommended to start with a
# default header using
# doxygen -w html new_header.html new_footer.html new_stylesheet.css
# YourConfigFile
# and then modify the file new_header.html. See also section "Doxygen usage"
# for information on how to generate the default header that doxygen normally
# uses.
# Note: The header is subject to change so you typically have to regenerate the
# default header when upgrading to a newer version of doxygen. For a description
# of the possible markers and block names see the documentation.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_HEADER            =

# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each
# generated HTML page. If the tag is left blank doxygen will generate a standard
# footer. See HTML_HEADER for more information on how to generate a default
# footer and what special commands can be used inside the footer. See also
# section "Doxygen usage" for information on how to generate the default footer
# that doxygen normally uses.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_FOOTER            =

# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style
# sheet that is used by each HTML page. It can be used to fine-tune the look of
# the HTML output. If left blank doxygen will generate a default style sheet.
# See also section "Doxygen usage" for information on how to generate the style
# sheet that doxygen normally uses.
# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as
# it is more robust and this tag (HTML_STYLESHEET) will in the future become
# obsolete.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_STYLESHEET        =

# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined
# cascading style sheets that are included after the standard style sheets
# created by doxygen. Using this option one can overrule certain style aspects.
# This is preferred over using HTML_STYLESHEET since it does not replace the
# standard style sheet and is therefore more robust against future updates.
# Doxygen will copy the style sheet files to the output directory.
# Note: The order of the extra style sheet files is of importance (e.g. the last
# style sheet in the list overrules the setting of the previous ones in the
# list).
# Note: Since the styling of scrollbars can currently not be overruled in
# Webkit/Chromium, the styling will be left out of the default doxygen.css if
# one or more extra stylesheets have been specified. So if scrollbar
# customization is desired it has to be added explicitly. For an example see the
# documentation.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_EXTRA_STYLESHEET  = docs/doxygen-awesome-css/doxygen-awesome.css \
                         docs/doxygen-awesome-css/doxygen-awesome-sidebar-only.css

# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
# other source files which should be copied to the HTML output directory. Note
# that these files will be copied to the base HTML output directory. Use the
# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
# files. In the HTML_STYLESHEET file, use the file name only. Also note that the
# files will be copied as-is; there are no commands or markers available.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_EXTRA_FILES       =

# The HTML_COLORSTYLE tag can be used to specify if the generated HTML output
# should be rendered with a dark or light theme.
# Possible values are: LIGHT always generate light mode output, DARK always
# generate dark mode output, AUTO_LIGHT automatically set the mode according to
# the user preference, use light mode if no preference is set (the default),
# AUTO_DARK automatically set the mode according to the user preference, use
# dark mode if no preference is set and TOGGLE allow to user to switch between
# light and dark mode via a button.
# The default value is: AUTO_LIGHT.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_COLORSTYLE        = LIGHT

# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen
# will adjust the colors in the style sheet and background images according to
# this color. Hue is specified as an angle on a color-wheel, see
# https://en.wikipedia.org/wiki/Hue for more information. For instance the value
# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300
# purple, and 360 is red again.
# Minimum value: 0, maximum value: 359, default value: 220.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_COLORSTYLE_HUE    = 135

# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors
# in the HTML output. For a value of 0 the output will use gray-scales only. A
# value of 255 will produce the most vivid colors.
# Minimum value: 0, maximum value: 255, default value: 100.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_COLORSTYLE_SAT    = 100

# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the
# luminance component of the colors in the HTML output. Values below 100
# gradually make the output lighter, whereas values above 100 make the output
# darker. The value divided by 100 is the actual gamma applied, so 80 represents
# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not
# change the gamma.
# Minimum value: 40, maximum value: 240, default value: 80.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_COLORSTYLE_GAMMA  = 80

# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML
# documentation will contain a main index with vertical navigation menus that
# are dynamically created via JavaScript. If disabled, the navigation index will
# consists of multiple levels of tabs that are statically embedded in every HTML
# page. Disable this option to support browsers that do not have JavaScript,
# like the Qt help browser.
# The default value is: YES.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_DYNAMIC_MENUS     = YES

# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
# documentation will contain sections that can be hidden and shown after the
# page has loaded.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_DYNAMIC_SECTIONS  = NO

# If the HTML_CODE_FOLDING tag is set to YES then classes and functions can be
# dynamically folded and expanded in the generated HTML source code.
# The default value is: YES.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_CODE_FOLDING      = YES

# If the HTML_COPY_CLIPBOARD tag is set to YES then doxygen will show an icon in
# the top right corner of code and text fragments that allows the user to copy
# its content to the clipboard. Note this only works if supported by the browser
# and the web page is served via a secure context (see:
# https://www.w3.org/TR/secure-contexts/), i.e. using the https: or file:
# protocol.
# The default value is: YES.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_COPY_CLIPBOARD    = YES

# Doxygen stores a couple of settings persistently in the browser (via e.g.
# cookies). By default these settings apply to all HTML pages generated by
# doxygen across all projects. The HTML_PROJECT_COOKIE tag can be used to store
# the settings under a project specific key, such that the user preferences will
# be stored separately.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_PROJECT_COOKIE    =

# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries
# shown in the various tree structured indices initially; the user can expand
# and collapse entries dynamically later on. Doxygen will expand the tree to
# such a level that at most the specified number of entries are visible (unless
# a fully collapsed tree already exceeds this amount). So setting the number of
# entries 1 will produce a full collapsed tree by default. 0 is a special value
# representing an infinite number of entries and will result in a full expanded
# tree by default.
# Minimum value: 0, maximum value: 9999, default value: 100.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_INDEX_NUM_ENTRIES = 100

# If the GENERATE_DOCSET tag is set to YES, additional index files will be
# generated that can be used as input for Apple's Xcode 3 integrated development
# environment (see:
# https://developer.apple.com/xcode/), introduced with OSX 10.5 (Leopard). To
# create a documentation set, doxygen will generate a Makefile in the HTML
# output directory. Running make will produce the docset in that directory and
# running make install will install the docset in
# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at
# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy
# genXcode/_index.html for more information.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

GENERATE_DOCSET        = NO

# This tag determines the name of the docset feed. A documentation feed provides
# an umbrella under which multiple documentation sets from a single provider
# (such as a company or product suite) can be grouped.
# The default value is: Doxygen generated docs.
# This tag requires that the tag GENERATE_DOCSET is set to YES.

DOCSET_FEEDNAME        = "Doxygen generated docs"

# This tag determines the URL of the docset feed. A documentation feed provides
# an umbrella under which multiple documentation sets from a single provider
# (such as a company or product suite) can be grouped.
# This tag requires that the tag GENERATE_DOCSET is set to YES.

DOCSET_FEEDURL         =

# This tag specifies a string that should uniquely identify the documentation
# set bundle. This should be a reverse domain-name style string, e.g.
# com.mycompany.MyDocSet. Doxygen will append .docset to the name.
# The default value is: org.doxygen.Project.
# This tag requires that the tag GENERATE_DOCSET is set to YES.

DOCSET_BUNDLE_ID       = org.doxygen.Project

# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify
# the documentation publisher. This should be a reverse domain-name style
# string, e.g. com.mycompany.MyDocSet.documentation.
# The default value is: org.doxygen.Publisher.
# This tag requires that the tag GENERATE_DOCSET is set to YES.

DOCSET_PUBLISHER_ID    = org.doxygen.Publisher

# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.
# The default value is: Publisher.
# This tag requires that the tag GENERATE_DOCSET is set to YES.

DOCSET_PUBLISHER_NAME  = Publisher

# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three
# additional HTML index files: index.hhp, index.hhc, and index.hhk. The
# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop
# on Windows. In the beginning of 2021 Microsoft took the original page, with
# a.o. the download links, offline the HTML help workshop was already many years
# in maintenance mode). You can download the HTML help workshop from the web
# archives at Installation executable (see:
# http://web.archive.org/web/20160201063255/http://download.microsoft.com/downlo
# ad/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe).
#
# The HTML Help Workshop contains a compiler that can convert all HTML output
# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML
# files are now used as the Windows 98 help format, and will replace the old
# Windows help format (.hlp) on all Windows platforms in the future. Compressed
# HTML files also contain an index, a table of contents, and you can search for
# words in the documentation. The HTML workshop also contains a viewer for
# compressed HTML files.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

GENERATE_HTMLHELP      = NO

# The CHM_FILE tag can be used to specify the file name of the resulting .chm
# file. You can add a path in front of the file if the result should not be
# written to the html output directory.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

CHM_FILE               =

# The HHC_LOCATION tag can be used to specify the location (absolute path
# including file name) of the HTML help compiler (hhc.exe). If non-empty,
# doxygen will try to run the HTML help compiler on the generated index.hhp.
# The file has to be specified with full path.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

HHC_LOCATION           =

# The GENERATE_CHI flag controls if a separate .chi index file is generated
# (YES) or that it should be included in the main .chm file (NO).
# The default value is: NO.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

GENERATE_CHI           = NO

# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)
# and project file content.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

CHM_INDEX_ENCODING     =

# The BINARY_TOC flag controls whether a binary table of contents is generated
# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it
# enables the Previous and Next buttons.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

BINARY_TOC             = NO

# The TOC_EXPAND flag can be set to YES to add extra items for group members to
# the table of contents of the HTML help documentation and to the tree view.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTMLHELP is set to YES.

TOC_EXPAND             = NO

# The SITEMAP_URL tag is used to specify the full URL of the place where the
# generated documentation will be placed on the server by the user during the
# deployment of the documentation. The generated sitemap is called sitemap.xml
# and placed on the directory specified by HTML_OUTPUT. In case no SITEMAP_URL
# is specified no sitemap is generated. For information about the sitemap
# protocol see https://www.sitemaps.org
# This tag requires that the tag GENERATE_HTML is set to YES.

SITEMAP_URL            =

# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that
# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help
# (.qch) of the generated HTML documentation.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

GENERATE_QHP           = NO

# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify
# the file name of the resulting .qch file. The path specified is relative to
# the HTML output folder.
# This tag requires that the tag GENERATE_QHP is set to YES.

QCH_FILE               =

# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help
# Project output. For more information please see Qt Help Project / Namespace
# (see:
# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).
# The default value is: org.doxygen.Project.
# This tag requires that the tag GENERATE_QHP is set to YES.

QHP_NAMESPACE          = org.doxygen.Project

# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt
# Help Project output. For more information please see Qt Help Project / Virtual
# Folders (see:
# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-folders).
# The default value is: doc.
# This tag requires that the tag GENERATE_QHP is set to YES.

QHP_VIRTUAL_FOLDER     = doc

# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom
# filter to add. For more information please see Qt Help Project / Custom
# Filters (see:
# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
# This tag requires that the tag GENERATE_QHP is set to YES.

QHP_CUST_FILTER_NAME   =

# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the
# custom filter to add. For more information please see Qt Help Project / Custom
# Filters (see:
# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).
# This tag requires that the tag GENERATE_QHP is set to YES.

QHP_CUST_FILTER_ATTRS  =

# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
# project's filter section matches. Qt Help Project / Filter Attributes (see:
# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).
# This tag requires that the tag GENERATE_QHP is set to YES.

QHP_SECT_FILTER_ATTRS  =

# The QHG_LOCATION tag can be used to specify the location (absolute path
# including file name) of Qt's qhelpgenerator. If non-empty doxygen will try to
# run qhelpgenerator on the generated .qhp file.
# This tag requires that the tag GENERATE_QHP is set to YES.

QHG_LOCATION           =

# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be
# generated, together with the HTML files, they form an Eclipse help plugin. To
# install this plugin and make it available under the help contents menu in
# Eclipse, the contents of the directory containing the HTML and XML files needs
# to be copied into the plugins directory of eclipse. The name of the directory
# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.
# After copying Eclipse needs to be restarted before the help appears.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

GENERATE_ECLIPSEHELP   = NO

# A unique identifier for the Eclipse help plugin. When installing the plugin
# the directory name containing the HTML and XML files should also have this
# name. Each documentation set should have its own identifier.
# The default value is: org.doxygen.Project.
# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.

ECLIPSE_DOC_ID         = org.doxygen.Project

# If you want full control over the layout of the generated HTML pages it might
# be necessary to disable the index and replace it with your own. The
# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top
# of each HTML page. A value of NO enables the index and the value YES disables
# it. Since the tabs in the index contain the same information as the navigation
# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

DISABLE_INDEX          = NO

# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
# structure should be generated to display hierarchical information. If the tag
# value is set to YES, a side panel will be generated containing a tree-like
# index structure (just like the one that is generated for HTML Help). For this
# to work a browser that supports JavaScript, DHTML, CSS and frames is required
# (i.e. any modern browser). Windows users are probably better off using the
# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can
# further fine tune the look of the index (see "Fine-tuning the output"). As an
# example, the default style sheet generated by doxygen has an example that
# shows how to put an image at the root of the tree instead of the PROJECT_NAME.
# Since the tree basically has the same information as the tab index, you could
# consider setting DISABLE_INDEX to YES when enabling this option.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

GENERATE_TREEVIEW      = YES

# When both GENERATE_TREEVIEW and DISABLE_INDEX are set to YES, then the
# FULL_SIDEBAR option determines if the side bar is limited to only the treeview
# area (value NO) or if it should extend to the full height of the window (value
# YES). Setting this to YES gives a layout similar to
# https://docs.readthedocs.io with more room for contents, but less room for the
# project logo, title, and description. If either GENERATE_TREEVIEW or
# DISABLE_INDEX is set to NO, this option has no effect.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

FULL_SIDEBAR           = NO

# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that
# doxygen will group on one line in the generated HTML documentation.
#
# Note that a value of 0 will completely suppress the enum values from appearing
# in the overview section.
# Minimum value: 0, maximum value: 20, default value: 4.
# This tag requires that the tag GENERATE_HTML is set to YES.

ENUM_VALUES_PER_LINE   = 4

# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used
# to set the initial width (in pixels) of the frame in which the tree is shown.
# Minimum value: 0, maximum value: 1500, default value: 250.
# This tag requires that the tag GENERATE_HTML is set to YES.

TREEVIEW_WIDTH         = 250

# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to
# external symbols imported via tag files in a separate window.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

EXT_LINKS_IN_WINDOW    = NO

# If the OBFUSCATE_EMAILS tag is set to YES, doxygen will obfuscate email
# addresses.
# The default value is: YES.
# This tag requires that the tag GENERATE_HTML is set to YES.

OBFUSCATE_EMAILS       = YES

# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg
# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see
# https://inkscape.org) to generate formulas as SVG images instead of PNGs for
# the HTML output. These images will generally look nicer at scaled resolutions.
# Possible values are: png (the default) and svg (looks nicer but requires the
# pdf2svg or inkscape tool).
# The default value is: png.
# This tag requires that the tag GENERATE_HTML is set to YES.

HTML_FORMULA_FORMAT    = png

# Use this tag to change the font size of LaTeX formulas included as images in
# the HTML documentation. When you change the font size after a successful
# doxygen run you need to manually remove any form_*.png images from the HTML
# output directory to force them to be regenerated.
# Minimum value: 8, maximum value: 50, default value: 10.
# This tag requires that the tag GENERATE_HTML is set to YES.

FORMULA_FONTSIZE       = 10

# The FORMULA_MACROFILE can contain LaTeX \newcommand and \renewcommand commands
# to create new LaTeX commands to be used in formulas as building blocks. See
# the section "Including formulas" for details.

FORMULA_MACROFILE      =

# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see
# https://www.mathjax.org) which uses client side JavaScript for the rendering
# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX
# installed or if you want to formulas look prettier in the HTML output. When
# enabled you may also need to install MathJax separately and configure the path
# to it using the MATHJAX_RELPATH option.
# The default value is: NO.
# This tag requires that the tag GENERATE_HTML is set to YES.

USE_MATHJAX            = NO

# With MATHJAX_VERSION it is possible to specify the MathJax version to be used.
# Note that the different versions of MathJax have different requirements with
# regards to the different settings, so it is possible that also other MathJax
# settings have to be changed when switching between the different MathJax
# versions.
# Possible values are: MathJax_2 and MathJax_3.
# The default value is: MathJax_2.
# This tag requires that the tag USE_MATHJAX is set to YES.

MATHJAX_VERSION        = MathJax_2

# When MathJax is enabled you can set the default output format to be used for
# the MathJax output. For more details about the output format see MathJax
# version 2 (see:
# http://docs.mathjax.org/en/v2.7-latest/output.html) and MathJax version 3
# (see:
# http://docs.mathjax.org/en/latest/web/components/output.html).
# Possible values are: HTML-CSS (which is slower, but has the best
# compatibility. This is the name for Mathjax version 2, for MathJax version 3
# this will be translated into chtml), NativeMML (i.e. MathML. Only supported
# for NathJax 2. For MathJax version 3 chtml will be used instead.), chtml (This
# is the name for Mathjax version 3, for MathJax version 2 this will be
# translated into HTML-CSS) and SVG.
# The default value is: HTML-CSS.
# This tag requires that the tag USE_MATHJAX is set to YES.

MATHJAX_FORMAT         = HTML-CSS

# When MathJax is enabled you need to specify the location relative to the HTML
# output directory using the MATHJAX_RELPATH option. The destination directory
# should contain the MathJax.js script. For instance, if the mathjax directory
# is located at the same level as the HTML output directory, then
# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax
# Content Delivery Network so you can quickly see the result without installing
# MathJax. However, it is strongly recommended to install a local copy of
# MathJax from https://www.mathjax.org before deployment. The default value is:
# - in case of MathJax version 2: https://cdn.jsdelivr.net/npm/mathjax@2
# - in case of MathJax version 3: https://cdn.jsdelivr.net/npm/mathjax@3
# This tag requires that the tag USE_MATHJAX is set to YES.

MATHJAX_RELPATH        =

# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax
# extension names that should be enabled during MathJax rendering. For example
# for MathJax version 2 (see
# https://docs.mathjax.org/en/v2.7-latest/tex.html#tex-and-latex-extensions):
# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols
# For example for MathJax version 3 (see
# http://docs.mathjax.org/en/latest/input/tex/extensions/index.html):
# MATHJAX_EXTENSIONS = ams
# This tag requires that the tag USE_MATHJAX is set to YES.

MATHJAX_EXTENSIONS     =

# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces
# of code that will be used on startup of the MathJax code. See the MathJax site
# (see:
# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details. For an
# example see the documentation.
# This tag requires that the tag USE_MATHJAX is set to YES.

MATHJAX_CODEFILE       =

# When the SEARCHENGINE tag is enabled doxygen will generate a search box for
# the HTML output. The underlying search engine uses javascript and DHTML and
# should work on any modern browser. Note that when using HTML help
# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)
# there is already a search function so this one should typically be disabled.
# For large projects the javascript based search engine can be slow, then
# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to
# search using the keyboard; to jump to the search box use <access key> + S
# (what the <access key> is depends on the OS and browser, but it is typically
# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down
# key> to jump into the search results window, the results can be navigated
# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel
# the search. The filter options can be selected when the cursor is inside the
# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>
# to select a filter and <Enter> or <escape> to activate or cancel the filter
# option.
# The default value is: YES.
# This tag requires that the tag GENERATE_HTML is set to YES.

SEARCHENGINE           = YES

# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
# implemented using a web server instead of a web client using JavaScript. There
# are two flavors of web server based searching depending on the EXTERNAL_SEARCH
# setting. When disabled, doxygen will generate a PHP script for searching and
# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing
# and searching needs to be provided by external tools. See the section
# "External Indexing and Searching" for details.
# The default value is: NO.
# This tag requires that the tag SEARCHENGINE is set to YES.

SERVER_BASED_SEARCH    = NO

# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP
# script for searching. Instead the search results are written to an XML file
# which needs to be processed by an external indexer. Doxygen will invoke an
# external search engine pointed to by the SEARCHENGINE_URL option to obtain the
# search results.
#
# Doxygen ships with an example indexer (doxyindexer) and search engine
# (doxysearch.cgi) which are based on the open source search engine library
# Xapian (see:
# https://xapian.org/).
#
# See the section "External Indexing and Searching" for details.
# The default value is: NO.
# This tag requires that the tag SEARCHENGINE is set to YES.

EXTERNAL_SEARCH        = NO

# The SEARCHENGINE_URL should point to a search engine hosted by a web server
# which will return the search results when EXTERNAL_SEARCH is enabled.
#
# Doxygen ships with an example indexer (doxyindexer) and search engine
# (doxysearch.cgi) which are based on the open source search engine library
# Xapian (see:
# https://xapian.org/). See the section "External Indexing and Searching" for
# details.
# This tag requires that the tag SEARCHENGINE is set to YES.

SEARCHENGINE_URL       =

# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed
# search data is written to a file for indexing by an external tool. With the
# SEARCHDATA_FILE tag the name of this file can be specified.
# The default file is: searchdata.xml.
# This tag requires that the tag SEARCHENGINE is set to YES.

SEARCHDATA_FILE        = searchdata.xml

# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the
# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is
# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple
# projects and redirect the results back to the right project.
# This tag requires that the tag SEARCHENGINE is set to YES.

EXTERNAL_SEARCH_ID     =

# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen
# projects other than the one defined by this configuration file, but that are
# all added to the same external search index. Each project needs to have a
# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of
# to a relative location where the documentation can be found. The format is:
# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...
# This tag requires that the tag SEARCHENGINE is set to YES.

EXTRA_SEARCH_MAPPINGS  =

#---------------------------------------------------------------------------
# Configuration options related to the LaTeX output
#---------------------------------------------------------------------------

# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.
# The default value is: YES.

GENERATE_LATEX         = YES

# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a
# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
# it.
# The default directory is: latex.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_OUTPUT           = latex

# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
# invoked.
#
# Note that when not enabling USE_PDFLATEX the default is latex when enabling
# USE_PDFLATEX the default is pdflatex and when in the later case latex is
# chosen this is overwritten by pdflatex. For specific output languages the
# default can have been set differently, this depends on the implementation of
# the output language.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_CMD_NAME         =

# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate
# index for LaTeX.
# Note: This tag is used in the Makefile / make.bat.
# See also: LATEX_MAKEINDEX_CMD for the part in the generated output file
# (.tex).
# The default file is: makeindex.
# This tag requires that the tag GENERATE_LATEX is set to YES.

MAKEINDEX_CMD_NAME     = makeindex

# The LATEX_MAKEINDEX_CMD tag can be used to specify the command name to
# generate index for LaTeX. In case there is no backslash (\) as first character
# it will be automatically added in the LaTeX code.
# Note: This tag is used in the generated output file (.tex).
# See also: MAKEINDEX_CMD_NAME for the part in the Makefile / make.bat.
# The default value is: makeindex.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_MAKEINDEX_CMD    = makeindex

# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX
# documents. This may be useful for small projects and may help to save some
# trees in general.
# The default value is: NO.
# This tag requires that the tag GENERATE_LATEX is set to YES.

COMPACT_LATEX          = NO

# The PAPER_TYPE tag can be used to set the paper type that is used by the
# printer.
# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x
# 14 inches) and executive (7.25 x 10.5 inches).
# The default value is: a4.
# This tag requires that the tag GENERATE_LATEX is set to YES.

PAPER_TYPE             = a4

# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names
# that should be included in the LaTeX output. The package can be specified just
# by its name or with the correct syntax as to be used with the LaTeX
# \usepackage command. To get the times font for instance you can specify :
# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}
# To use the option intlimits with the amsmath package you can specify:
# EXTRA_PACKAGES=[intlimits]{amsmath}
# If left blank no extra packages will be included.
# This tag requires that the tag GENERATE_LATEX is set to YES.

EXTRA_PACKAGES         =

# The LATEX_HEADER tag can be used to specify a user-defined LaTeX header for
# the generated LaTeX document. The header should contain everything until the
# first chapter. If it is left blank doxygen will generate a standard header. It
# is highly recommended to start with a default header using
# doxygen -w latex new_header.tex new_footer.tex new_stylesheet.sty
# and then modify the file new_header.tex. See also section "Doxygen usage" for
# information on how to generate the default header that doxygen normally uses.
#
# Note: Only use a user-defined header if you know what you are doing!
# Note: The header is subject to change so you typically have to regenerate the
# default header when upgrading to a newer version of doxygen. The following
# commands have a special meaning inside the header (and footer): For a
# description of the possible markers and block names see the documentation.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_HEADER           =

# The LATEX_FOOTER tag can be used to specify a user-defined LaTeX footer for
# the generated LaTeX document. The footer should contain everything after the
# last chapter. If it is left blank doxygen will generate a standard footer. See
# LATEX_HEADER for more information on how to generate a default footer and what
# special commands can be used inside the footer. See also section "Doxygen
# usage" for information on how to generate the default footer that doxygen
# normally uses. Note: Only use a user-defined footer if you know what you are
# doing!
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_FOOTER           =

# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined
# LaTeX style sheets that are included after the standard style sheets created
# by doxygen. Using this option one can overrule certain style aspects. Doxygen
# will copy the style sheet files to the output directory.
# Note: The order of the extra style sheet files is of importance (e.g. the last
# style sheet in the list overrules the setting of the previous ones in the
# list).
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_EXTRA_STYLESHEET =

# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or
# other source files which should be copied to the LATEX_OUTPUT output
# directory. Note that the files will be copied as-is; there are no commands or
# markers available.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_EXTRA_FILES      =

# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is
# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will
# contain links (just like the HTML output) instead of page references. This
# makes the output suitable for online browsing using a PDF viewer.
# The default value is: YES.
# This tag requires that the tag GENERATE_LATEX is set to YES.

PDF_HYPERLINKS         = YES

# If the USE_PDFLATEX tag is set to YES, doxygen will use the engine as
# specified with LATEX_CMD_NAME to generate the PDF file directly from the LaTeX
# files. Set this option to YES, to get a higher quality PDF documentation.
#
# See also section LATEX_CMD_NAME for selecting the engine.
# The default value is: YES.
# This tag requires that the tag GENERATE_LATEX is set to YES.

USE_PDFLATEX           = YES

# The LATEX_BATCHMODE tag signals the behavior of LaTeX in case of an error.
# Possible values are: NO same as ERROR_STOP, YES same as BATCH, BATCH In batch
# mode nothing is printed on the terminal, errors are scrolled as if <return> is
# hit at every error; missing files that TeX tries to input or request from
# keyboard input (\read on a not open input stream) cause the job to abort,
# NON_STOP In nonstop mode the diagnostic message will appear on the terminal,
# but there is no possibility of user interaction just like in batch mode,
# SCROLL In scroll mode, TeX will stop only for missing files to input or if
# keyboard input is necessary and ERROR_STOP In errorstop mode, TeX will stop at
# each error, asking for user intervention.
# The default value is: NO.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_BATCHMODE        = NO

# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the
# index chapters (such as File Index, Compound Index, etc.) in the output.
# The default value is: NO.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_HIDE_INDICES     = NO

# The LATEX_BIB_STYLE tag can be used to specify the style to use for the
# bibliography, e.g. plainnat, or ieeetr. See
# https://en.wikipedia.org/wiki/BibTeX and \cite for more info.
# The default value is: plain.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_BIB_STYLE        = plain

# The LATEX_EMOJI_DIRECTORY tag is used to specify the (relative or absolute)
# path from which the emoji images will be read. If a relative path is entered,
# it will be relative to the LATEX_OUTPUT directory. If left blank the
# LATEX_OUTPUT directory will be used.
# This tag requires that the tag GENERATE_LATEX is set to YES.

LATEX_EMOJI_DIRECTORY  =

#---------------------------------------------------------------------------
# Configuration options related to the RTF output
#---------------------------------------------------------------------------

# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The
# RTF output is optimized for Word 97 and may not look too pretty with other RTF
# readers/editors.
# The default value is: NO.

GENERATE_RTF           = YES

# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a
# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
# it.
# The default directory is: rtf.
# This tag requires that the tag GENERATE_RTF is set to YES.

RTF_OUTPUT             = rtf

# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF
# documents. This may be useful for small projects and may help to save some
# trees in general.
# The default value is: NO.
# This tag requires that the tag GENERATE_RTF is set to YES.

COMPACT_RTF            = NO

# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will
# contain hyperlink fields. The RTF file will contain links (just like the HTML
# output) instead of page references. This makes the output suitable for online
# browsing using Word or some other Word compatible readers that support those
# fields.
#
# Note: WordPad (write) and others do not support links.
# The default value is: NO.
# This tag requires that the tag GENERATE_RTF is set to YES.

RTF_HYPERLINKS         = NO

# Load stylesheet definitions from file. Syntax is similar to doxygen's
# configuration file, i.e. a series of assignments. You only have to provide
# replacements, missing definitions are set to their default value.
#
# See also section "Doxygen usage" for information on how to generate the
# default style sheet that doxygen normally uses.
# This tag requires that the tag GENERATE_RTF is set to YES.

RTF_STYLESHEET_FILE    =

# Set optional variables used in the generation of an RTF document. Syntax is
# similar to doxygen's configuration file. A template extensions file can be
# generated using doxygen -e rtf extensionFile.
# This tag requires that the tag GENERATE_RTF is set to YES.

RTF_EXTENSIONS_FILE    =

#---------------------------------------------------------------------------
# Configuration options related to the man page output
#---------------------------------------------------------------------------

# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for
# classes and files.
# The default value is: NO.

GENERATE_MAN           = YES

# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a
# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
# it. A directory man3 will be created inside the directory specified by
# MAN_OUTPUT.
# The default directory is: man.
# This tag requires that the tag GENERATE_MAN is set to YES.

MAN_OUTPUT             = man

# The MAN_EXTENSION tag determines the extension that is added to the generated
# man pages. In case the manual section does not start with a number, the number
# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is
# optional.
# The default value is: .3.
# This tag requires that the tag GENERATE_MAN is set to YES.

MAN_EXTENSION          = .3

# The MAN_SUBDIR tag determines the name of the directory created within
# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by
# MAN_EXTENSION with the initial . removed.
# This tag requires that the tag GENERATE_MAN is set to YES.

MAN_SUBDIR             =

# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it
# will generate one additional man file for each entity documented in the real
# man page(s). These additional files only source the real man page, but without
# them the man command would be unable to find the correct page.
# The default value is: NO.
# This tag requires that the tag GENERATE_MAN is set to YES.

MAN_LINKS              = NO

#---------------------------------------------------------------------------
# Configuration options related to the XML output
#---------------------------------------------------------------------------

# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that
# captures the structure of the code including all documentation.
# The default value is: NO.

GENERATE_XML           = NO

# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a
# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of
# it.
# The default directory is: xml.
# This tag requires that the tag GENERATE_XML is set to YES.

XML_OUTPUT             = xml

# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program
# listings (including syntax highlighting and cross-referencing information) to
# the XML output. Note that enabling this will significantly increase the size
# of the XML output.
# The default value is: YES.
# This tag requires that the tag GENERATE_XML is set to YES.

XML_PROGRAMLISTING     = YES

# If the XML_NS_MEMB_FILE_SCOPE tag is set to YES, doxygen will include
# namespace members in file scope as well, matching the HTML output.
# The default value is: NO.
# This tag requires that the tag GENERATE_XML is set to YES.

XML_NS_MEMB_FILE_SCOPE = NO

#---------------------------------------------------------------------------
# Configuration options related to the DOCBOOK output
#---------------------------------------------------------------------------

# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files
# that can be used to generate PDF.
# The default value is: NO.

GENERATE_DOCBOOK       = NO

# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.
# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in
# front of it.
# The default directory is: docbook.
# This tag requires that the tag GENERATE_DOCBOOK is set to YES.

DOCBOOK_OUTPUT         = docbook

#---------------------------------------------------------------------------
# Configuration options for the AutoGen Definitions output
#---------------------------------------------------------------------------

# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an
# AutoGen Definitions (see https://autogen.sourceforge.net/) file that captures
# the structure of the code including all documentation. Note that this feature
# is still experimental and incomplete at the moment.
# The default value is: NO.

GENERATE_AUTOGEN_DEF   = NO

#---------------------------------------------------------------------------
# Configuration options related to Sqlite3 output
#---------------------------------------------------------------------------

# If the GENERATE_SQLITE3 tag is set to YES doxygen will generate a Sqlite3
# database with symbols found by doxygen stored in tables.
# The default value is: NO.

GENERATE_SQLITE3       = NO

# The SQLITE3_OUTPUT tag is used to specify where the Sqlite3 database will be
# put. If a relative path is entered the value of OUTPUT_DIRECTORY will be put
# in front of it.
# The default directory is: sqlite3.
# This tag requires that the tag GENERATE_SQLITE3 is set to YES.

SQLITE3_OUTPUT         = sqlite3

# The SQLITE3_RECREATE_DB tag is set to YES, the existing doxygen_sqlite3.db
# database file will be recreated with each doxygen run. If set to NO, doxygen
# will warn if a database file is already found and not modify it.
# The default value is: YES.
# This tag requires that the tag GENERATE_SQLITE3 is set to YES.

SQLITE3_RECREATE_DB    = YES

#---------------------------------------------------------------------------
# Configuration options related to the Perl module output
#---------------------------------------------------------------------------

# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module
# file that captures the structure of the code including all documentation.
#
# Note that this feature is still experimental and incomplete at the moment.
# The default value is: NO.

GENERATE_PERLMOD       = NO

# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary
# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI
# output from the Perl module output.
# The default value is: NO.
# This tag requires that the tag GENERATE_PERLMOD is set to YES.

PERLMOD_LATEX          = NO

# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely
# formatted so it can be parsed by a human reader. This is useful if you want to
# understand what is going on. On the other hand, if this tag is set to NO, the
# size of the Perl module output will be much smaller and Perl will parse it
# just the same.
# The default value is: YES.
# This tag requires that the tag GENERATE_PERLMOD is set to YES.

PERLMOD_PRETTY         = YES

# The names of the make variables in the generated doxyrules.make file are
# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful
# so different doxyrules.make files included by the same Makefile don't
# overwrite each other's variables.
# This tag requires that the tag GENERATE_PERLMOD is set to YES.

PERLMOD_MAKEVAR_PREFIX =

#---------------------------------------------------------------------------
# Configuration options related to the preprocessor
#---------------------------------------------------------------------------

# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all
# C-preprocessor directives found in the sources and include files.
# The default value is: YES.

ENABLE_PREPROCESSING   = YES

# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names
# in the source code. If set to NO, only conditional compilation will be
# performed. Macro expansion can be done in a controlled way by setting
# EXPAND_ONLY_PREDEF to YES.
# The default value is: NO.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

MACRO_EXPANSION        = NO

# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then
# the macro expansion is limited to the macros specified with the PREDEFINED and
# EXPAND_AS_DEFINED tags.
# The default value is: NO.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

EXPAND_ONLY_PREDEF     = NO

# If the SEARCH_INCLUDES tag is set to YES, the include files in the
# INCLUDE_PATH will be searched if a #include is found.
# The default value is: YES.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

SEARCH_INCLUDES        = YES

# The INCLUDE_PATH tag can be used to specify one or more directories that
# contain include files that are not input files but should be processed by the
# preprocessor. Note that the INCLUDE_PATH is not recursive, so the setting of
# RECURSIVE has no effect here.
# This tag requires that the tag SEARCH_INCLUDES is set to YES.

INCLUDE_PATH           =

# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
# patterns (like *.h and *.hpp) to filter out the header-files in the
# directories. If left blank, the patterns specified with FILE_PATTERNS will be
# used.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

INCLUDE_FILE_PATTERNS  =

# The PREDEFINED tag can be used to specify one or more macro names that are
# defined before the preprocessor is started (similar to the -D option of e.g.
# gcc). The argument of the tag is a list of macros of the form: name or
# name=definition (no spaces). If the definition and the "=" are omitted, "=1"
# is assumed. To prevent a macro definition from being undefined via #undef or
# recursively expanded use the := operator instead of the = operator.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

PREDEFINED             =

# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this
# tag can be used to specify a list of macro names that should be expanded. The
# macro definition that is found in the sources will be used. Use the PREDEFINED
# tag if you want to use a different macro definition that overrules the
# definition found in the source code.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

EXPAND_AS_DEFINED      =

# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will
# remove all references to function-like macros that are alone on a line, have
# an all uppercase name, and do not end with a semicolon. Such function macros
# are typically used for boiler-plate code, and will confuse the parser if not
# removed.
# The default value is: YES.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

SKIP_FUNCTION_MACROS   = YES

#---------------------------------------------------------------------------
# Configuration options related to external references
#---------------------------------------------------------------------------

# The TAGFILES tag can be used to specify one or more tag files. For each tag
# file the location of the external documentation should be added. The format of
# a tag file without this location is as follows:
# TAGFILES = file1 file2 ...
# Adding location for the tag files is done as follows:
# TAGFILES = file1=loc1 "file2 = loc2" ...
# where loc1 and loc2 can be relative or absolute paths or URLs. See the
# section "Linking to external documentation" for more information about the use
# of tag files.
# Note: Each tag file must have a unique name (where the name does NOT include
# the path). If a tag file is not located in the directory in which doxygen is
# run, you must also specify the path to the tagfile here.

TAGFILES               =

# When a file name is specified after GENERATE_TAGFILE, doxygen will create a
# tag file that is based on the input files it reads. See section "Linking to
# external documentation" for more information about the usage of tag files.

GENERATE_TAGFILE       =

# If the ALLEXTERNALS tag is set to YES, all external classes and namespaces
# will be listed in the class and namespace index. If set to NO, only the
# inherited external classes will be listed.
# The default value is: NO.

ALLEXTERNALS           = NO

# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed
# in the topic index. If set to NO, only the current project's groups will be
# listed.
# The default value is: YES.

EXTERNAL_GROUPS        = YES

# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in
# the related pages index. If set to NO, only the current project's pages will
# be listed.
# The default value is: YES.

EXTERNAL_PAGES         = YES

#---------------------------------------------------------------------------
# Configuration options related to diagram generator tools
#---------------------------------------------------------------------------

# If set to YES the inheritance and collaboration graphs will hide inheritance
# and usage relations if the target is undocumented or is not a class.
# The default value is: YES.

HIDE_UNDOC_RELATIONS   = NO

# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
# available from the path. This tool is part of Graphviz (see:
# https://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent
# Bell Labs. The other options in this section have no effect if this option is
# set to NO
# The default value is: NO.

HAVE_DOT               = YES

# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed
# to run in parallel. When set to 0 doxygen will base this on the number of
# processors available in the system. You can set it explicitly to a value
# larger than 0 to get control over the balance between CPU load and processing
# speed.
# Minimum value: 0, maximum value: 32, default value: 0.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_NUM_THREADS        = 0

# DOT_COMMON_ATTR is common attributes for nodes, edges and labels of
# subgraphs. When you want a differently looking font in the dot files that
# doxygen generates you can specify fontname, fontcolor and fontsize attributes.
# For details please see <a href=https://graphviz.org/doc/info/attrs.html>Node,
# Edge and Graph Attributes specification</a> You need to make sure dot is able
# to find the font, which can be done by putting it in a standard location or by
# setting the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the
# directory containing the font. Default graphviz fontsize is 14.
# The default value is: fontname=Helvetica,fontsize=10.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_COMMON_ATTR        = "fontname=Helvetica,fontsize=10"

# DOT_EDGE_ATTR is concatenated with DOT_COMMON_ATTR. For elegant style you can
# add 'arrowhead=open, arrowtail=open, arrowsize=0.5'. <a
# href=https://graphviz.org/doc/info/arrows.html>Complete documentation about
# arrows shapes.</a>
# The default value is: labelfontname=Helvetica,labelfontsize=10.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_EDGE_ATTR          = "labelfontname=Helvetica,labelfontsize=10"

# DOT_NODE_ATTR is concatenated with DOT_COMMON_ATTR. For view without boxes
# around nodes set 'shape=plain' or 'shape=plaintext' <a
# href=https://www.graphviz.org/doc/info/shapes.html>Shapes specification</a>
# The default value is: shape=box,height=0.2,width=0.4.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_NODE_ATTR          = "shape=box,height=0.2,width=0.4"

# You can set the path where dot can find font specified with fontname in
# DOT_COMMON_ATTR and others dot attributes.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_FONTPATH           =

# If the CLASS_GRAPH tag is set to YES or GRAPH or BUILTIN then doxygen will
# generate a graph for each documented class showing the direct and indirect
# inheritance relations. In case the CLASS_GRAPH tag is set to YES or GRAPH and
# HAVE_DOT is enabled as well, then dot will be used to draw the graph. In case
# the CLASS_GRAPH tag is set to YES and HAVE_DOT is disabled or if the
# CLASS_GRAPH tag is set to BUILTIN, then the built-in generator will be used.
# If the CLASS_GRAPH tag is set to TEXT the direct and indirect inheritance
# relations will be shown as texts / links. Explicit enabling an inheritance
# graph or choosing a different representation for an inheritance graph of a
# specific class, can be accomplished by means of the command \inheritancegraph.
# Disabling an inheritance graph can be accomplished by means of the command
# \hideinheritancegraph.
# Possible values are: NO, YES, TEXT, GRAPH and BUILTIN.
# The default value is: YES.

CLASS_GRAPH            = YES

# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a
# graph for each documented class showing the direct and indirect implementation
# dependencies (inheritance, containment, and class references variables) of the
# class with other documented classes. Explicit enabling a collaboration graph,
# when COLLABORATION_GRAPH is set to NO, can be accomplished by means of the
# command \collaborationgraph. Disabling a collaboration graph can be
# accomplished by means of the command \hidecollaborationgraph.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

COLLABORATION_GRAPH    = YES

# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for
# groups, showing the direct groups dependencies. Explicit enabling a group
# dependency graph, when GROUP_GRAPHS is set to NO, can be accomplished by means
# of the command \groupgraph. Disabling a directory graph can be accomplished by
# means of the command \hidegroupgraph. See also the chapter Grouping in the
# manual.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

GROUP_GRAPHS           = YES

# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and
# collaboration diagrams in a style similar to the OMG's Unified Modeling
# Language.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

UML_LOOK               = NO

# If the UML_LOOK tag is enabled, the fields and methods are shown inside the
# class node. If there are many fields or methods and many nodes the graph may
# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the
# number of items for each type to make the size more manageable. Set this to 0
# for no limit. Note that the threshold may be exceeded by 50% before the limit
# is enforced. So when you set the threshold to 10, up to 15 fields may appear,
# but if the number exceeds 15, the total amount of fields shown is limited to
# 10.
# Minimum value: 0, maximum value: 100, default value: 10.
# This tag requires that the tag UML_LOOK is set to YES.

UML_LIMIT_NUM_FIELDS   = 10

# If the DOT_UML_DETAILS tag is set to NO, doxygen will show attributes and
# methods without types and arguments in the UML graphs. If the DOT_UML_DETAILS
# tag is set to YES, doxygen will add type and arguments for attributes and
# methods in the UML graphs. If the DOT_UML_DETAILS tag is set to NONE, doxygen
# will not generate fields with class member information in the UML graphs. The
# class diagrams will look similar to the default class diagrams but using UML
# notation for the relationships.
# Possible values are: NO, YES and NONE.
# The default value is: NO.
# This tag requires that the tag UML_LOOK is set to YES.

DOT_UML_DETAILS        = NO

# The DOT_WRAP_THRESHOLD tag can be used to set the maximum number of characters
# to display on a single line. If the actual line length exceeds this threshold
# significantly it will be wrapped across multiple lines. Some heuristics are
# applied to avoid ugly line breaks.
# Minimum value: 0, maximum value: 1000, default value: 17.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_WRAP_THRESHOLD     = 17

# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and
# collaboration graphs will show the relations between templates and their
# instances.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

TEMPLATE_RELATIONS     = NO

# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to
# YES then doxygen will generate a graph for each documented file showing the
# direct and indirect include dependencies of the file with other documented
# files. Explicit enabling an include graph, when INCLUDE_GRAPH is is set to NO,
# can be accomplished by means of the command \includegraph. Disabling an
# include graph can be accomplished by means of the command \hideincludegraph.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

INCLUDE_GRAPH          = YES

# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are
# set to YES then doxygen will generate a graph for each documented file showing
# the direct and indirect include dependencies of the file with other documented
# files. Explicit enabling an included by graph, when INCLUDED_BY_GRAPH is set
# to NO, can be accomplished by means of the command \includedbygraph. Disabling
# an included by graph can be accomplished by means of the command
# \hideincludedbygraph.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

INCLUDED_BY_GRAPH      = YES

# If the CALL_GRAPH tag is set to YES then doxygen will generate a call
# dependency graph for every global function or class method.
#
# Note that enabling this option will significantly increase the time of a run.
# So in most cases it will be better to enable call graphs for selected
# functions only using the \callgraph command. Disabling a call graph can be
# accomplished by means of the command \hidecallgraph.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

CALL_GRAPH             = YES

# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller
# dependency graph for every global function or class method.
#
# Note that enabling this option will significantly increase the time of a run.
# So in most cases it will be better to enable caller graphs for selected
# functions only using the \callergraph command. Disabling a caller graph can be
# accomplished by means of the command \hidecallergraph.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

CALLER_GRAPH           = YES

# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical
# hierarchy of all classes instead of a textual one.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

GRAPHICAL_HIERARCHY    = YES

# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the
# dependencies a directory has on other directories in a graphical way. The
# dependency relations are determined by the #include relations between the
# files in the directories. Explicit enabling a directory graph, when
# DIRECTORY_GRAPH is set to NO, can be accomplished by means of the command
# \directorygraph. Disabling a directory graph can be accomplished by means of
# the command \hidedirectorygraph.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

DIRECTORY_GRAPH        = YES

# The DIR_GRAPH_MAX_DEPTH tag can be used to limit the maximum number of levels
# of child directories generated in directory dependency graphs by dot.
# Minimum value: 1, maximum value: 25, default value: 1.
# This tag requires that the tag DIRECTORY_GRAPH is set to YES.

DIR_GRAPH_MAX_DEPTH    = 1

# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
# generated by dot. For an explanation of the image formats see the section
# output formats in the documentation of the dot tool (Graphviz (see:
# https://www.graphviz.org/)).
# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order
# to make the SVG files visible in IE 9+ (other browsers do not have this
# requirement).
# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,
# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and
# png:gdiplus:gdiplus.
# The default value is: png.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_IMAGE_FORMAT       = png

# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
# enable generation of interactive SVG images that allow zooming and panning.
#
# Note that this requires a modern browser other than Internet Explorer. Tested
# and working are Firefox, Chrome, Safari, and Opera.
# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make
# the SVG files visible. Older versions of IE do not have SVG support.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

INTERACTIVE_SVG        = NO

# The DOT_PATH tag can be used to specify the path where the dot tool can be
# found. If left blank, it is assumed the dot tool can be found in the path.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_PATH               =

# The DOTFILE_DIRS tag can be used to specify one or more directories that
# contain dot files that are included in the documentation (see the \dotfile
# command).
# This tag requires that the tag HAVE_DOT is set to YES.

DOTFILE_DIRS           =

# You can include diagrams made with dia in doxygen documentation. Doxygen will
# then run dia to produce the diagram and insert it in the documentation. The
# DIA_PATH tag allows you to specify the directory where the dia binary resides.
# If left empty dia is assumed to be found in the default search path.

DIA_PATH               =

# The DIAFILE_DIRS tag can be used to specify one or more directories that
# contain dia files that are included in the documentation (see the \diafile
# command).

DIAFILE_DIRS           =

# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the
# path where java can find the plantuml.jar file or to the filename of jar file
# to be used. If left blank, it is assumed PlantUML is not used or called during
# a preprocessing step. Doxygen will generate a warning when it encounters a
# \startuml command in this case and will not generate output for the diagram.

PLANTUML_JAR_PATH      =

# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a
# configuration file for plantuml.

PLANTUML_CFG_FILE      =

# When using plantuml, the specified paths are searched for files specified by
# the !include statement in a plantuml block.

PLANTUML_INCLUDE_PATH  =

# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes
# that will be shown in the graph. If the number of nodes in a graph becomes
# larger than this value, doxygen will truncate the graph, which is visualized
# by representing a node as a red box. Note that doxygen if the number of direct
# children of the root node in a graph is already larger than
# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that
# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
# Minimum value: 0, maximum value: 10000, default value: 50.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_GRAPH_MAX_NODES    = 200

# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs
# generated by dot. A depth value of 3 means that only nodes reachable from the
# root by following a path via at most 3 edges will be shown. Nodes that lay
# further from the root node will be omitted. Note that setting this option to 1
# or 2 may greatly reduce the computation time needed for large code bases. Also
# note that the size of a graph can be further restricted by
# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
# Minimum value: 0, maximum value: 1000, default value: 0.
# This tag requires that the tag HAVE_DOT is set to YES.

MAX_DOT_GRAPH_DEPTH    = 0

# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output
# files in one run (i.e. multiple -o and -T options on the command line). This
# makes dot run faster, but since only newer versions of dot (>1.8.10) support
# this, this feature is disabled by default.
# The default value is: NO.
# This tag requires that the tag HAVE_DOT is set to YES.

DOT_MULTI_TARGETS      = NO

# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page
# explaining the meaning of the various boxes and arrows in the dot generated
# graphs.
# Note: This tag requires that UML_LOOK isn't set, i.e. the doxygen internal
# graphical representation for inheritance and collaboration diagrams is used.
# The default value is: YES.
# This tag requires that the tag HAVE_DOT is set to YES.

GENERATE_LEGEND        = YES

# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate
# files that are used to generate the various graphs.
#
# Note: This setting is not only used for dot files but also for msc temporary
# files.
# The default value is: YES.

DOT_CLEANUP            = YES

# You can define message sequence charts within doxygen comments using the \msc
# command. If the MSCGEN_TOOL tag is left empty (the default), then doxygen will
# use a built-in version of mscgen tool to produce the charts. Alternatively,
# the MSCGEN_TOOL tag can also specify the name an external tool. For instance,
# specifying prog as the value, doxygen will call the tool as prog -T
# <outfile_format> -o <outputfile> <inputfile>. The external tool should support
# output file formats "png", "eps", "svg", and "ismap".

MSCGEN_TOOL            =

# The MSCFILE_DIRS tag can be used to specify one or more directories that
# contain msc files that are included in the documentation (see the \mscfile
# command).

MSCFILE_DIRS           =
</file>

<file path="README.md.backup">
# TicTacToe project

Fork of https://github.com/infohoschie/arm-cortex-m0-cmake-start

Students: Simon Blum, Max Rodler, Ben Oeckl, Paul Stöckle

## How to build/run the project
### Using CMake and qemu directly
To build the project using CMake and qemu some dependencies,
which can be found under [dependencies] are required.
#### Linux
```sh
# 1. Configure the cmake project
cmake --preset arm-cortex-m0-unix

# 2. Build the project
cmake --build --preset arm-cortex-m0-unix

# 3. Run the project
qemu-system-arm -M microbit -device loader,file=build-cortex-m0/game.elf -nographic -s -serial mon:stdio
```

#### Windows
!TODO!

### Using the provided Makefile
#### Linux
The provided [Makefile](Makefile) can be used to easily build and run
the project using a single command.
```sh
# Configure, build and run the project
make run

# Configure and build the project
make 

# Remove the build directory
make clean

# Generate doxygen documentation (requires doxygen installed)
make generate_documentation
```

#### Windows
!TODO!

### Using Docker
Docker can be used to build and run the application without the need
for external dependencies. For this you have to options:
#### Use the image from Dockerhub
```bash
# Using DockerHub
docker run -it definitelynotsimon13/tiktaktoe:latest
# Using GitHub Container Registry
docker run -it ghcr.io/softwareengineeringone/tiktaktoe:latest
```
#### Build the image locally
```bash
docker build -t [TAGNAME] .
docker run -it [TAGNAME]
```

> [!NOTE]
> In either case the `-it` flags are required to properly
> capture input from STDIN!
## Compile time configurations
The project has a few options that can be changed before compilation.
- Number of rows (default is 4)
- Number of columns (default is 4)
- Ticks per turn (default is 20)
- Tick speed (default is 12, lower is faster)
- Unicode support (default is "ON")
- ASCII Art (default is "ON", may look broken on small screens) 

These can be set by:
### Directly passing to CMake
When configuring the project the default command `cmake --preset arm-cortex-m0-{unix/mingw}` can be
appended by:
- for the number of rows: `[...] --DCELLS_PER_COL=$(NUMBER)`
- for the number of cols: `[...] --DCELLS_PER_ROW=$(NUMBER)`
- for ticks per turn: `[...] --DTICKS_PER_TURN=$(NUMBER)`
- for tick speed: `[...] --DTICK_SPEED=$(NUMBER)`
- for unicode: `[...] --DENABLE_UNICODE=$(ON/OFF)`
- for ascii art: `[...] --DENABLE_ASCII_ART=$(ON/OFF)`
_All options can be combined._


### Using the included Makefile
When using the Makefile to configure/build the project variables can be passed like this:
- for the number of rows: `make ROWS=$(NUMBER)`
- for the number of cols: `make COLS=$(NUMBER)`
- for ticks per turn: `make TICKS_PER_TURN=$(NUMBER)`
- for tick speed: `make TICK_SPEED=$(NUMBER)`
- for unicode: `make UNICODE=$(ON/OFF)`
- for ascii art: `make ASCII_ART=$(ON/OFF)`
_All options can be combined._

Due to the way the Makefile is structured, these may also be passed when using e.g. `make run`.
However please note, that in order for changes to take affect the build directory may have to be deleted.
This can be done using `make clean` or by manually deleting the directory.


## Architecture
See [Architecture.md](Architecture.md)

## Conventions
See [Conventions.md](Conventions.md)

## Dependencies (TODO: CHECK CORRECT)
### Ubuntu/Debian
```bash
sudo apt install gcc-arm-none-eabi cmake qemu-system-arm
```
### Arch
```bash
# Using yay
yay -S gcc-arm-none-eabi-bin cmake qemu-system-arm
# Using paru
paru -S gcc-arm-none-eabi-bin cmake qemu-system-arm
# Using pacman
sudo pacman -S ?GCC? cmake qemu-system-arm
```
!TODO - gcc for arm gotta be in the main repo?
### Nix / NixOS
You can either use the provided [Flake](flake.nix), or add the following
packages:
```
gcc-arm-embedded
cmake
qemu
```
### macOS
```bash
brew install gcc-arm-embedded cmake qemu
```
### Windows
TODO/CHECK
</file>

<file path="entry/linker_script.ld">
/**
 * @file 
 *
 * @author Thomas Vogt
 *
 * @date 
 *
 * @brief ARM Cortex-M4 Linker Script.
 *
 * @see 
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */

/* 
* Flash Configuration:
* - Start:        0x00000000
* - Size:         262KB
*/
__ROM_BASE = 0x00000000;
__ROM_SIZE = 0x00040000;

/* 
* RAM Configuration:
* - Start:        0x20000000 
* - Total Size:   16KB
* - Stack Size:   1024KB
* - Heap Size:    0B
*/
__RAM_BASE = 0x20000000;
__RAM_SIZE = 0x00004000;
__STACK_SIZE = 0x00000400;
__HEAP_SIZE  = 0x00000000;


ENTRY ( Reset_Handler )

MEMORY
{
    FLASH (rx)  : ORIGIN = __ROM_BASE, LENGTH = __ROM_SIZE
    RAM   (rwx) : ORIGIN = __RAM_BASE, LENGTH = __RAM_SIZE
}

SECTIONS
{
    /* Executable Code */
    .text :
    {
        KEEP(*(.isr_vectors))
        *(.text*)
    } > FLASH

    /* Read Only Data */
    .rodata :
    {
        . = ALIGN(4);
        *(.rodata*)
        . = ALIGN( 4 );
    } > FLASH

    /* Initialized Data */
    .data : 
    {
        . = ALIGN(4);
        __data_start__ = .;
        __data_load_addr__ = LOADADDR(.data);
        *(.data*)
        . = ALIGN( 4 );
        __data_end__ = .;
    } > RAM AT > FLASH

    /* Unitialized data */
    .bss :
    {
        . = ALIGN(4);
        __bss_start__ = .;
        *(.bss*)
        *(COMMON)
        . = ALIGN(4);
        __bss_end__ = .;
    } > RAM AT > RAM

    /* Heap, if it existed */

    /* Stack is located on top of RAM */
    .stack (ORIGIN(RAM) + LENGTH(RAM) - __STACK_SIZE) (NOLOAD) :
    {
        . = ALIGN(8);
        __StackLimit = .;
        . = . + __STACK_SIZE;
        . = ALIGN(8);
        __StackTop = .;
    } > RAM

    PROVIDE( __stack = __StackTop );
}
</file>

<file path=".gitignore">
build-cortex-m0
.cache
.direnv
flake.lock
</file>

<file path="toolchain.cmake">
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Sven Reis
# Thomas Vogt

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)

# Use the following Compiler:
set(CMAKE_C_COMPILER    "arm-none-eabi-gcc"    )
set(CMAKE_CXX_COMPILER  "arm-none-eabi-g++"    )
set(CMAKE_ASM_COMPILER  "arm-none-eabi-gcc"    )
set(OBJ_COPY_PATH       "arm-none-eabi-objcopy")

# Complete the output with .elf extension
set(CMAKE_EXECUTABLE_SUFFIX ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_C   ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_CXX ".elf")
set(CMAKE_EXECUTABLE_SUFFIX_ASM ".elf")

# Set the Flags for Cortex-M0
set(CMAKE_C_FLAGS       "-nostdlib -mcpu=cortex-m0 -Wall -Werror")
set(CMAKE_CXX_FLAGS     "-nostdlib -mcpu=cortex-m0 -Wall -Werror")
set(CMAKE_ASM_FLAGS     "-nostdlib -mcpu=cortex-m0 -Wall -Werror")

# With startup files (auto-init):
#set(CMAKE_EXE_LINKER_FLAGS "--specs=nosys.specs" CACHE INTERNAL "")

# WITHOUT startup files:
set(CMAKE_EXE_LINKER_FLAGS "--specs=nosys.specs -nostartfiles" CACHE INTERNAL "")

# Only use the Compiler in the given Path:
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

# Find ObjCopy (Specified in Toolchain):
find_program(OBJ_COPY "${OBJ_COPY_PATH}")
if(NOT OBJ_COPY)
  message(FATAL "objcopy not found")
endif()
</file>

<file path="include/hal/memset.h">
/**
 * @file memset.h
 *
 * @brief Contains a simple implementation of memset
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef MEMSET_H
#define MEMSET_H

#include <stddef.h>

/**
 * @brief Simple implementation of memset
 *
 * @details
 * Sets the first **n** bytes of the block of memory
 * pointed to by **ptr** to the specified value **x**
 *
 * @param [in] ptr Pointer to the block of memory to fill
 * @param [in] x Value to be set. The value is passed as an int, but the function fills the block of
 * memory using the unsigned char conversion of this value
 * @param [in] n Number of bytes to be set to the value
 *
 * @return A pointer to the memory area
 */
void *memset(void *ptr, int x, size_t n);

#endif// MEMSET_H
</file>

<file path="include/hal/system.h">
/**
 * @file system.h
 *
 * @brief Contains functions interacting with the microcontroller.
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef SYSTEM_H
#define SYSTEM_H

#define SYS_AIRCR 0xE000ED0C
#define SYS_VECTKEY (0x5FA << 16)
#define SYS_SYSRESETREQ (1 << 2)

#define SYS_POWER 0x40000000
#define SYS_SYSTEMOFF 0x500

/**
 * @brief Trigger a soft reset of the system
 *
 * @note **Never returns**
 **/
void system_softReset();

/**
 * @brief Triggers "off" mode of the system
 *
 * @note **Never returns**
 **/
void system_offMode();

#endif// SYSTEM_H
</file>

<file path="include/presentation/style.h">
/**
 * @file style.h
 *
 * @brief Contains several constants to simplify the styling of output
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef STYLE_H
#define STYLE_H

typedef struct
{
        char *fg_color;
        char *bg_color;
        char *font_style;
} Style;

#define CLEAR_SCREEN "\e[1;1H\e[2J"
#define DEFAULT ""
#define RESET "\e[0m"

#define FG_RED "\e[31m"
#define FG_GREEN "\e[32m"
#define FG_YELLOW "\e[33m"
#define FG_BLUE "\e[34m"
#define FG_MAGENTA "\e[35m"

#define BG_GREEN "\e[42m"
#define BG_YELLOW "\e[43m"

#define BOLD "\e[1m"
#define DIM "\e[2m"
#define ITALIC "\e[3m"
#define INVERSE "\e[7m"
#define HIDDEN "\e[8m"

#define HIDE_CURSOR "\e[?25l"
#define SHOW_CURSOR "\e[?25h"

#define ERASE_LINE_FROM_CURSOR "\e[0K"

extern const Style DEFAULT_BOLD;
extern const Style DEFAULT_ITALIC;
extern const Style DEFAULT_DIM;


extern const Style BOLD_DIM;
extern const Style ITALIC_DIM;

extern const Style DEFAULT_CIRCLE;
extern const Style BOLD_CIRCLE;

extern const Style DEFAULT_CROSS;
extern const Style BOLD_CROSS;

extern const Style HEADING_STYLE;

#endif// STYLE_H
</file>

<file path="include/util/input_buf.h">
/**
 * @file input_buf.h
 *
 * @brief Contains everything for the input buffer
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#ifndef INPUT_BUF_H
#define INPUT_BUF_H

#include "def.h"

#include <stdint.h>

#define INPUT_BUF_SIZE 128

/**
 * @brief RingBuffer for fixed memory footprint
 */
typedef struct
{
        uint8_t data[INPUT_BUF_SIZE];
        volatile uint16_t head;
        volatile uint16_t tail;
} InputBuffer;

extern volatile InputBuffer g_input_buf;

/**
 * @brief Function to call in case of UART input interrupt
 * @param[in] input
 * Pure input from UART
 */
void input_onInterrupt(uint8_t input);

/**
 * @brief Initialize the given InputBuffer
 * @param[inout] ib
 * InputBuffer
 */
void input_init(volatile InputBuffer *ib);

/**
 * @brief Check if the buffer is empty
 * @param[in] ib
 * InputBuffer
 * @return True if empty
 */
bool input_isEmpty(const volatile InputBuffer *ib);

/**
 * @brief Check if the buffer is full
 * @param[in] ib
 * InputBuffer
 * @return True if full
 */
bool input_isFull(const volatile InputBuffer *ib);

/**
 * @brief Get the next byte from the buffer
 * @param[inout] ib
 * InputBuffer
 * @param[out] byte
 * Next Byte
 * @return False if empty
 */
bool input_getNext(volatile InputBuffer *ib, uint8_t *byte);


#endif// INPUT_BUF_H
</file>

<file path="include/config.h.in">
/*! @GENERATED_WARNING@ !*/
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef CONFIG_H
#define CONFIG_H

// if UNICODE is not defined, ascii characters are used
#cmakedefine ENABLE_UNICODE

#cmakedefine ENABLE_ASCII_ART

// size of the field
#define CELLS_PER_ROW @CELLS_PER_ROW@
#define CELLS_PER_COL @CELLS_PER_COL@

// game speed
#define TICKS_PER_TURN @TICKS_PER_TURN@
#define TICK_SPEED @TICK_SPEED@

/**
 * @defgroup HAL Hardware Abstraction Layer
 * @{
 *
 * @}
 */

/**
 * @defgroup Logic Layer
 * @{
 *
 * @}
 */

/**
 * @defgroup Presentation
 * @{
 *
 * @}
 */

/**
 * @defgroup Utilities
 * @{
 *
 * @}
 */

#endif// CONFIG_H
</file>

<file path="src/hal/random.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "hal/random.h"

#include "hal/register_access.h"

#include <stdint.h>

/**
 * @brief Enables the generation of random numbers
 *
 * This is done by writing a `1` to the `START_TASK` of the RNG peripheral.
 */
void rng_init(void)
{
    // Write a '1' to the Start Task, to start the generation of random numbers
    register_write(RNG_BASE_ADDRESS | RNG_START, RNG_TASK_START);
}


/**
 * @brief Get the Random Value from the generator immediately.
 *
 * The function is **NOT** waiting until the next value is generated!
 *
 * @return uint8_t random byte
 */
uint8_t rng_getRandomValue_immediately(void)
{
    // Read 32-Bit Register containing the RNG Value
    const uint32_t randomValue = register_read(RNG_BASE_ADDRESS | RNG_VALUE);

    // its actual just 8-Bit, so cast it.
    return randomValue;
}

/**
 * @brief # THIS FUNCTION IS A STUB! #
 *
 * TODO: Implement it, if you need it
 *
 * Things it should do here:
 * - Get the Random Value from the generator by polling and waiting.
 * - The function should be **blocking** until the next value is generated
 * - it should return the random byte
 *
 * @return uint8_t (curently) always `0`
 **/
uint8_t rng_getRandomValue_waiting()
{
    while(register_read(RNG_BASE_ADDRESS | RNG_VALRDY) == 0)
    {
        // Wait until the Value is ready
    }
    register_write(RNG_BASE_ADDRESS | RNG_VALRDY, 0);

    return rng_getRandomValue_immediately();
}
</file>

<file path="src/hal/register_access.c">
/**
 * @file
 *
 * @author Thomas Vogt
 * @author Sven Reis
 *
 * @date
 *
 * @brief Generic Register-Access
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */

#include "hal/register_access.h"

void register_write(const uint32_t address, const uint32_t value)
{
    // Assign pointer to given address:
    uint32_t * const pointer_to_address = (uint32_t *)address;

    // Write to the End of the Pointer
    *pointer_to_address = value;
}

uint32_t register_read(const uint32_t address)
{
    // Assign pointer to given address:
    uint32_t const * const pointer_to_address = (uint32_t *)address;

    // Read from the End of the Pointer
    const uint32_t value = *pointer_to_address;

    // Return the read value
    return value;
}
</file>

<file path="src/logic/winning.c">
#include "logic/winning.h"

/**
 * @brief Checks if the given player has won
 *
 * @details
 * VICTORY ALGORITHM
 * Vertical / Horizontal:
 * The algorithm starts at the border and iterates to the other side. It goes in 2 different
 * directions and counts on 2 axes. It runs in one of the directions till a cell is reached that
 * is not marked by our player. Diagonal: The algorithm starts at the given cell coordinates. It
 * goes in 4 different direction and counts on 2 axes. Every step in one of the directions
 * increments the dedicated axis until a cell is reached that is not marked by our player.
 *
 * The return value is true when one axis or more axes has / have reached the win condition
 * (line to the other side).
 *  UP      UP     UP          | axis       | direction 1 | direction 2 |
 * LEFT           RIGHT        |------------+-------------+-------------|
 *        \ | /                | vertical   | down        |             |
 * LEFT  ---+---> RIGHT        | horizontal | right       |             |
 *        / | \                | diagonal_1 | up right    | down left   |
 * DOWN     v     DOWN         | diagonal_2 | up left     | down right  |
 * LEFT    DOWN   RIGHT
 *
 * @param [in] cell Last marked cell of the player
 * @param [in] player Player it is looking for
 * @param [in] cell_state
 * @param [out] winner_cells
 *
 * @return True if player won
 */
static bool checkIfPlayerWon(
    const Cell *cell,
    Player player,
    CellState *cell_state,
    Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]// NOLINT
);

Player winning_checkForWinner(
    CellState *cell_state,
    Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]// NOLINT
)
{
    if(checkIfPlayerWon(cell_state->last_circle, Circle, cell_state, winner_cells))
    {
        return Circle;
    }
    if(checkIfPlayerWon(cell_state->last_cross, Cross, cell_state, winner_cells))
    {
        return Cross;
    }
    return None;
}

static bool checkIfPlayerWon(
    const Cell *cell,
    const Player player,
    CellState *cell_state,
    Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])// NOLINT
{
    if(cell == NULL)
    {
        return false;
    }

    const uint8_t diagonal_win_condition = min(CELLS_PER_COL, CELLS_PER_ROW);// NOLINT
    const uint8_t max_cells = max(CELLS_PER_COL, CELLS_PER_ROW);             // NOLINT
    const uint8_t row = cell->row;
    const uint8_t col = cell->col;
    const uint8_t max_row = CELLS_PER_COL - 1;
    const uint8_t max_col = CELLS_PER_ROW - 1;
    uint8_t diagonal_1_sum = 1;
    uint8_t diagonal_2_sum = 1;
    bool vertical_match = true;
    bool horizontal_match = true;
    bool diagonal_1_up_right = true;
    bool diagonal_1_down_left = true;
    bool diagonal_2_up_left = true;
    bool diagonal_2_down_right = true;

    Cell *diagonal_1_cells[min(CELLS_PER_COL, CELLS_PER_ROW)] = {0};// NOLINT
    Cell *diagonal_2_cells[min(CELLS_PER_COL, CELLS_PER_ROW)] = {0};// NOLINT
    for(uint8_t i = 1, n = 0; n < max_cells; i++, n++)
    {
        // --- VERTICAL ---
        // downwards
        if(n <= max_row && cell_state->all[n][col].marked_by != player)
        {
            vertical_match = false;
        }

        // --- HORIZONTAL ---
        // to the right
        if(n <= max_col && cell_state->all[row][n].marked_by != player)
        {
            horizontal_match = false;
        }

        // --- 1st DIAGONAL ---
        // upwards to the right
        if(diagonal_1_up_right && row - i >= 0 && col + i <= max_col
           && cell_state->all[row - i][col + i].marked_by == player)
        {
            diagonal_1_cells[n] = &cell_state->all[row - i][col + i];
            diagonal_1_sum++;
        }
        else
        {
            diagonal_1_up_right = false;
        }
        // downwards to the left
        if(diagonal_1_down_left && row + i <= max_row && col - i >= 0
           && cell_state->all[row + i][col - i].marked_by == player)
        {
            diagonal_1_cells[n] = &cell_state->all[row + i][col - i];
            diagonal_1_sum++;
        }
        else
        {
            diagonal_1_down_left = false;
        }

        // --- 2nd DIAGONAL ---
        // upwards to the left
        if(diagonal_2_up_left && row - i >= 0 && col - i >= 0
           && cell_state->all[row - i][col - i].marked_by == player)
        {
            diagonal_2_cells[n] = &cell_state->all[row - i][col - i];
            diagonal_2_sum++;
        }
        else
        {
            diagonal_2_up_left = false;
        }
        // downwards to the right
        if(diagonal_2_down_right && row + i <= max_row && col + i <= max_col
           && cell_state->all[row + i][col + i].marked_by == player)
        {
            diagonal_2_cells[n] = &cell_state->all[row + i][col + i];
            diagonal_2_sum++;
        }
        else
        {
            diagonal_2_down_right = false;
        }
    }

    if(vertical_match)
    {
        for(uint8_t i = 0; i < CELLS_PER_COL; i++)
        {
            winner_cells[i] = &cell_state->all[i][col];
        }
        return true;
    }

    if(horizontal_match)
    {
        for(uint8_t i = 0; i < CELLS_PER_ROW; i++)
        {
            winner_cells[i] = &cell_state->all[row][i];
        }
        return true;
    }

    if(diagonal_1_sum >= diagonal_win_condition)
    {
        for(uint8_t i = 0; i < diagonal_win_condition; i++)
        {
            winner_cells[i] = diagonal_1_cells[i];
        }
        winner_cells[diagonal_win_condition - 1] = &cell_state->all[row][col];
        return true;
    }

    if(diagonal_2_sum >= diagonal_win_condition)
    {
        for(uint8_t i = 0; i < diagonal_win_condition; i++)
        {
            winner_cells[i] = diagonal_2_cells[i];
        }
        winner_cells[diagonal_win_condition - 1] = &cell_state->all[row][col];
        return true;
    }

    return false;
}
</file>

<file path="src/util/input_buf.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "util/input_buf.h"

#include "presentation/print.h"

volatile InputBuffer g_input_buf;

/**
 * @brief Put the next byte into the buffer
 * @param[inout] ib
 * InputBuffer
 * @param[out] byte
 * Next Byte
 * @return False if full
 */
static bool putIntoBuf(volatile InputBuffer *ib, uint8_t byte);

void input_onInterrupt(const uint8_t input)
{
    if(!putIntoBuf(&g_input_buf, input))
    {
        //! TODO Handle error better
        print("INPUT BUFFER OVERFLOW");
    }
}

void input_init(volatile InputBuffer *ib)
{
    ib->head = 0;
    ib->tail = 0;
}

bool input_isEmpty(const volatile InputBuffer *ib)
{
    return ib->head == ib->tail;
}

bool input_isFull(const volatile InputBuffer *ib)
{
    return (ib->head + 1) % INPUT_BUF_SIZE == ib->tail;
}

bool input_getNext(volatile InputBuffer *ib, uint8_t *byte)
{
    if(input_isEmpty(ib))
    {
        return false;
    }
    *byte = ib->data[ib->tail];
    ib->tail = (ib->tail + 1) % INPUT_BUF_SIZE;
    return true;
}

static bool putIntoBuf(volatile InputBuffer *ib, const uint8_t byte)
{
    if(input_isFull(ib))
    {
        return false;
    }

    ib->data[ib->head] = byte;
    ib->head = (ib->head + 1) % INPUT_BUF_SIZE;
    return true;
}
</file>

<file path=".dockerignore">
build-cortex-m0
assets
docs
Conventions.md
Architecture.md
Doxyfile
Justfile
Makefile
compile_commands.json
conert_to_array.sh
conert_to_string.sh
flake.nix
.cache
.clang-format
.direnv
.idea
.envrc
</file>

<file path="Justfile">
default:
	@just --list

c1:
	@make clean
	@make ROWS=3 COLS=3
	echo "make run" | wl-copy
	clear
	
c2:
	@make clean
	echo "make ROWS=4 COLS=4 run" | wl-copy
	clear

c3:
	@make clean
	echo "make ROWS=3 COLS=7 TICK_SPEED=11 TICKS_PER_TURN=30 UNICODE=OFF ASCII_ART=OFF run" | wl-copy
	clear

c4:
	@cd ~
	echo "docker run -it ghcr.io/softwareengineeringone/tiktaktoe:latest" | wl-copy
	clear
	@echo $PWD
</file>

<file path=".github/workflows/documentation.yml">
name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - '**.c'
      - '**.h'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Doxygen Action
      uses: mattnotmitt/doxygen-action@v1.12.0

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
</file>

<file path="include/hal/interrupts.h">
/**
 * @file interrupts.h
 *
 * @brief Contains interrupt handlers
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef INTERRUPTS_H
#define INTERRUPTS_H

/**
 * @brief UART interrupt handler
 *
 * @details
 * !TODO!
 */
void Interrupt2_Handler(void);

/**
 * @brief Timer interrupt handler
 *
 * @detail
 * !TODO!
 */
void Interrupt8_Handler(void);


#endif// INTERRUPTS_H
</file>

<file path="include/hal/register_access.h">
/**
 * @file register_access.h
 *
 * @author Thomas Vogt
 * @author Sven Reis
 *
 * @brief Contains abstraction functions of the register access
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef REGISTERACCESS_H
#define REGISTERACCESS_H

#include <stdint.h>

/**
 * @brief Write Value to Register
 *
 * @param[in] address Register Address
 * @param[in] value Register Value
 **/
void register_write(uint32_t address, uint32_t value);

/**
 * @brief Read from Register.
 *
 * @param[in] address Register Address
 *
 * @return Register Value
 **/
uint32_t register_read(uint32_t address);

#endif// REGISTERACCESS_H
</file>

<file path="include/logic/winning.h">
/**
 * @file winning.h
 *
 * @brief Contains the function for checking if someone has won
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef WINNING_H
#define WINNING_H

#include "logic/game.h"
#include "util/math.h"

/**
 * @brief Checks at the end of the round if someone has won
 *
 * @param [in] cell_state Current state of the cells
 * @param [out] winner_cells If a player won, the relevant cells will be written to this buffer
 *
 * @return The player who won
 */
Player winning_checkForWinner(
    CellState *cell_state,
    Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]);

#endif// WINNING_H
</file>

<file path="include/presentation/ascii_art.h">
/**
 * @file ascii_art.h
 *
 * @brief Contains several ascii art constants
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef ASCII_ART_H
#define ASCII_ART_H

#ifdef ENABLE_ASCII_ART
#define HEADING_LINES 9

#ifdef ENABLE_UNICODE
#define HEADING \
    "\
.___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______  \n\
|           ||  | |  |/  / |           |   /   \\     |  |/  / |           | /  __  \\  |   ____| \n\
`---|  |----`|  | |  '  /  `---|  |----`  /  ^  \\    |  '  /  `---|  |----`|  |  |  | |  |__    \n\
    |  |     |  | |    <       |  |      /  /_\\  \\   |    <       |  |     |  |  |  | |   __|   \n\
    |  |     |  | |  .  \\      |  |     /  _____  \\  |  .  \\      |  |     |  `--'  | |  |____  \n\
    |__|     |__| |__|\\__\\     |__|    /__/     \\__\\ |__|\\__\\     |__|      \\______/  |_______| \n\
───────────────────────────────────────────────────────────────────────────────────────────────\n\
"
#else
#define HEADING \
    "\
.___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______  \n\
|           ||  | |  |/  / |           |   /   \\     |  |/  / |           | /  __  \\  |   ____| \n\
`---|  |----`|  | |  '  /  `---|  |----`  /  ^  \\    |  '  /  `---|  |----`|  |  |  | |  |__    \n\
    |  |     |  | |    <       |  |      /  /_\\  \\   |    <       |  |     |  |  |  | |   __|   \n\
    |  |     |  | |  .  \\      |  |     /  _____  \\  |  .  \\      |  |     |  `--'  | |  |____  \n\
    |__|     |__| |__|\\__\\     |__|    /__/     \\__\\ |__|\\__\\     |__|      \\______/  |_______| \n\
_______________________________________________________________________________________________\n\
"
#endif

#define CROSS_WINS \
    "\
  ____                    __        ___           _ \n\
 / ___|_ __ ___  ___ ___  \\ \\      / (_)_ __  ___| |\n\
| |   | '__/ _ \\/ __/ __|  \\ \\ /\\ / /| | '_ \\/ __| |\n\
| |___| | | (_) \\__ \\__ \\   \\ V  V / | | | | \\__ \\_|\n\
 \\____|_|  \\___/|___/___/    \\_/\\_/  |_|_| |_|___(_)\n\
"

#define CIRCLE_WINS \
    "\
  ____ _          _       __        ___           _ \n\
 / ___(_)_ __ ___| | ___  \\ \\      / (_)_ __  ___| |\n\
| |   | | '__/ __| |/ _ \\  \\ \\ /\\ / /| | '_ \\/ __| |\n\
| |___| | | | (__| |  __/   \\ V  V / | | | | \\__ \\_|\n\
 \\____|_|_|  \\___|_|\\___|    \\_/\\_/  |_|_| |_|___(_)\n\
"

#define ITS_A_TIE \
    "\
 ___ _   _               _____ _      _ \n\
|_ _| |_( )___    __ _  |_   _(_) ___| |\n\
 | || __|// __|  / _` |   | | | |/ _ \\ |\n\
 | || |_  \\__ \\ | (_| |   | | | |  __/_|\n\
|___|\\__| |___/  \\__,_|   |_| |_|\\___(_)\n\
"

#define PLAYER_STARTS \
    "\
 ____  _                             _             _       _ \n\
|  _ \\| | __ _ _   _  ___ _ __   ___| |_ __ _ _ __| |_ ___| |\n\
| |_) | |/ _` | | | |/ _ \\ '__| / __| __/ _` | '__| __/ __| |\n\
|  __/| | (_| | |_| |  __/ |    \\__ \\ || (_| | |  | |_\\__ \\_|\n\
|_|   |_|\\__,_|\\__, |\\___|_|    |___/\\__\\__,_|_|   \\__|___(_)\n\
               |___/                                         \n\
"

#define COMPUTER_STARTS \
    "\
  ____                            _                  _             _       _ \n\
 / ___|___  _ __ ___  _ __  _   _| |_ ___ _ __   ___| |_ __ _ _ __| |_ ___| |\n\
| |   / _ \\| '_ ` _ \\| '_ \\| | | | __/ _ \\ '__| / __| __/ _` | '__| __/ __| |\n\
| |__| (_) | | | | | | |_) | |_| | ||  __/ |    \\__ \\ || (_| | |  | |_\\__ \\_|\n\
 \\____\\___/|_| |_| |_| .__/ \\__,_|\\__\\___|_|    |___/\\__\\__,_|_|   \\__|___(_)\n\
                     |_|                                                     \n\
"

#define CIRCLE_STARTS \
    "\
  ____ _          _            _             _       _ \n\
 / ___(_)_ __ ___| | ___   ___| |_ __ _ _ __| |_ ___| |\n\
| |   | | '__/ __| |/ _ \\ / __| __/ _` | '__| __/ __| |\n\
| |___| | | | (__| |  __/ \\__ \\ || (_| | |  | |_\\__ \\_|\n\
 \\____|_|_|  \\___|_|\\___| |___/\\__\\__,_|_|   \\__|___(_)\n\
"

#define CROSS_STARTS \
    "\
  ____                         _             _       _ \n\
 / ___|_ __ ___  ___ ___   ___| |_ __ _ _ __| |_ ___| |\n\
| |   | '__/ _ \\/ __/ __| / __| __/ _` | '__| __/ __| |\n\
| |___| | | (_) \\__ \\__ \\ \\__ \\ || (_| | |  | |_\\__ \\_|\n\
 \\____|_|  \\___/|___/___/ |___/\\__\\__,_|_|   \\__|___(_)\n\
"

#else

#define HEADING_LINES 3

#define HEADING "\n TikTakToe \n"

#define CROSS_WINS "\n Cross Wins! \n"

#define CIRCLE_WINS "\n Circle Wins! \n"

#define ITS_A_TIE "\n It's a Tie! \n"

#define PLAYER_STARTS "\n Player starts! \n"

#define COMPUTER_STARTS "\n Computer starts! \n"

#define CIRCLE_STARTS "\n Circle starts! \n"

#define CROSS_STARTS "\n Cross starts! \n"

#endif

#endif// !ASCII_ART_H
</file>

<file path="include/presentation/menu.h">
/**
 * @file menu.h
 *
 * @brief Contains functions for presentation of the menu
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef MENU_H
#define MENU_H

#include "logic/game.h"

#define RETURN_MENU_HINT "\nPress any key to return to the menu..."

#ifdef ENABLE_UNICODE
#define ARROW_LEFT "←"
#define ARROW_UP "↑"
#define ARROW_RIGHT "→"
#define ARROW_DOWN "↓"
#else
#define ARROW_LEFT "<LEFT>"
#define ARROW_UP "<UP>"
#define ARROW_RIGHT "<RIGHT>"
#define ARROW_DOWN "<DOWN>"
#endif

bool menu_showMainMenu();

void menu_showControls(const char *continue_hint);

void menu_showCredits();

void menu_showGameOver(const GameState *game_info);

void menu_anyKeyToContinue(const char *continue_hint);

#endif// MENU_H
</file>

<file path="include/util/error_handling.h">
/**
 * @file error_handling.h
 *
 * @brief Contains functions to react on inevitable errors
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef HARD_FAULT_H
#define HARD_FAULT_H


void HardFault_Handler() __attribute__((interrupt));

void Default_Handler() __attribute__((interrupt));

#endif// HARD_FAULT_H
</file>

<file path="include/util/math.h">
/**
 * @file math.h
 *
 * @brief Contains several different simple and independent math functions
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef MATH_H
#define MATH_H

/**
 * Get the minimum out of two values
 * @param [in] a
 * Some number
 * @param [in] b
 * Some number
 * @return The minimum
 */
#define min(a, b) a < b ? a : b

/**
 * Get the maximum out of two values
 * @param [in] a
 * Some number
 * @param [in] b
 * Some number
 * @return The maximum
 */
#define max(a, b) a > b ? a : b

#endif// MATH_H
</file>

<file path="src/hal/uart.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "hal/uart.h"

#include "hal/nvic.h"
#include "hal/register_access.h"

#include <stdint.h>

void uart_init(const bool with_interrupts)
{
    // set Flow-Controll and/or Parity (see Table 288, page 156) --------------
    // Hardware flow control: Disabled = 0 (default)
    // Parity: Exclude parity bit = 0x0    (default)
    // register_write((UART_BASE_ADDRESS + UART_CONFIG), 0); // Optional

    // set PSELRXD, PSELRTS, PSELTRTS and PSELTXD -----------------------------

    // PSELRTS - disconnected (default)
    // register_write((UART_BASE_ADDRESS + UART_PSELRTS), 0xFFFFFFFF); // Optional

    // configure GPIO Pins to RXD, TXD ----------------------------------------

    // Set Interrupts on RX ---------------------------------------------------
    // RXDRDY = enabled (..000100)
    // register_write((UART_BASE_ADDRESS + UART_INTEN), 4);

    // set baudrate (see Table 287 on page 156) -------------------------------
    // Baud9600   = 0x00275000
    // Baud19200  = 0x004EA000
    // Baud115200 = 0x01D7E000
    // Baud250000 = 0x04000000 (default)

    // register_write((UART_BASE_ADDRESS + UART_BAUDRATE), 0x01D7E000);

    // Enable UART ------------------------------------------------------------
    register_write(UART_BASE_ADDRESS + UART_ENABLE, 4);

    // Fire the START event for the Transmitter: ------------------------------
    register_write(UART_BASE_ADDRESS + UART_STARTTX, UART_TASK_START);

    // Fire the START event for the Receiver: ---------------------------------
    register_write(UART_BASE_ADDRESS + UART_STARTRX, UART_TASK_START);

    if(with_interrupts)
    {
        // Enable Interrupt
        register_write(
            UART_BASE_ADDRESS | UART_INTENSET,
            UART_INT_RXDRDY);// Interrupt on Compare[0]

        // Enable User-Interrupt from Cortex-M0
        // ID2 ist der UART
        register_write(Interrupt_Set_Enable, Interrupt_ID2);
    }
}

void uart_writeByte(const uint8_t data)
{
    // write the data to the TXD register
    register_write(UART_BASE_ADDRESS + UART_TXD, data);

    // need to "wait" until its transmitted
}

uint8_t uart_readByte()
{
    // if not ready, return 0
    const uint32_t receiveIsReady = register_read(UART_BASE_ADDRESS + UART_RXDRDY);

    if(!receiveIsReady)
    {
        // FIFO is not ready to read,
        // so return 0 instead
        return 0;
    }

    // we have to CLEAR the event before reading out from RXD
    register_write(UART_BASE_ADDRESS + UART_RXDRDY, UART_EVENT_CLEAR);

    // FIFO is ready to read something out of it
    return register_read(UART_BASE_ADDRESS + UART_RXD);
}

uint8_t uart_readByteBlocking()
{
    // TODO: Maybe this is a good idea ?
    // OR
    // You can use Interrupts to receive an EVENT, if some RX data is pending
    // but don't forget to clear it.
    // Feel free ;-)

    return 0;
}
</file>

<file path="src/util/conversion.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "util/conversion.h"

#include <stddef.h>
#include <stdint.h>

int8_t int_to_str(uint32_t num, char *buf, const size_t buf_size)
{
    if(buf == NULL || buf_size == 0)
    {
        return -1;
    }

    if(num < 10)
    {
        buf[0] = num + ASCII_NUM_OFFSET;
        buf[1] = '\0';
        return 0;
    }

    size_t i = 0;
    do
    {
        if(i > buf_size)
        {
            return -1;
        }
        buf[i++] = num % 10 + '0';
        num /= 10;
    } while(num);

    for(size_t j = 0, k = i - 1; j < k; j++, k--)
    {
        const char temp = buf[j];
        buf[j] = buf[k];
        buf[k] = temp;
    }

    return 0;
}

char int_to_char(uint8_t num)
{
    while(num >= 10)
    {
        num -= 10;
    }

    return num + ASCII_NUM_OFFSET;
}
</file>

<file path="flake.nix">
{
  description = "A basic flake with a shell";
  inputs.nixpkgs.url = "github:nixos/nixpkgs/nixos-24.11";
  inputs.systems.url = "github:nix-systems/default";
  inputs.flake-utils = {
    url = "github:numtide/flake-utils";
    inputs.systems.follows = "systems";
  };

  outputs =
    { nixpkgs, flake-utils, ... }:
    flake-utils.lib.eachDefaultSystem (
      system:
      let
        pkgs = nixpkgs.legacyPackages.${system};
      in
      {
        devShell = pkgs.mkShell {
          packages = with pkgs; [
            entr
            doxygen
            graphviz
          ];
          nativeBuildInputs = with pkgs; [
            gcc-arm-embedded
            gdb
            clang-tools_19
            cmake
          ];

          buildInputs = with pkgs; [
          ];

        };
      }
    );
}
</file>

<file path="entry/entry.S">
/**
 * @file 
 *
 * @author Thomas Vogt
 * @author Sven Reis
 *
 * @date 
 *
 * @brief 
 *
 * @see 
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
    .syntax unified
    .cpu cortex-m0
    .thumb

    /* External Symbols */
    /* From linker_script.ld */
    .extern __StackTop
    .extern __data_start__
    .extern __data_end__
    .extern __data_load_addr__
    .extern __bss_start__
    .extern __bss_end__
    /* From c code */
    .extern main
    .extern HardFault_Handler
    .extern Default_Handler

/* ==== Interrupt Vector Table ==== */
    .section .isr_vectors, "a", %progbits
    .align 2
    .type g_pfnVectors, %object
g_pfnVectors:
    .long __StackTop          /*      Top of Stack  */
    .long Reset_Handler       /*      Reset Handler  */
    .long NMI_Handler         /* -14  NMI Handler  */
    .long HardFault_Handler   /* -13  Hard Fault Handler  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long 0                   /*      Reserved  */
    .long SVC_Handler         /*  -5  SVC Handler  */
    .long DebugMon_Handler    /*  -4  Debug Monitor Handler  */
    .long 0                   /*      Reserved  */
    .long PendSV_Handler      /*  -2  PendSV Handler  */
    .long SysTick_Handler     /*  -1  SysTick Handler  */

    /*  Interrupts  */
    .long Interrupt0_Handler  /*   0  Interrupt 0  */
    .long Interrupt1_Handler  /*   1  Interrupt 1  */
    .long Interrupt2_Handler  /*   2  Interrupt 2  */
    .long Interrupt3_Handler  /*   3  Interrupt 3  */
    .long Interrupt4_Handler  /*   4  Interrupt 4  */
    .long Interrupt5_Handler  /*   5  Interrupt 5  */
    .long Interrupt6_Handler  /*   6  Interrupt 6  */
    .long Interrupt7_Handler  /*   7  Interrupt 7  */
    .long Interrupt8_Handler  /*   8  Interrupt 8  */
    .long Interrupt9_Handler  /*   9  Interrupt 9  */

    .space   (22 * 4)         /* Interrupts 10 to 31 are left out  */
    .size g_pfnVectors, . - g_pfnVectors


    .section .text, "ax", %progbits

/* ==== Entry Point ==== */
    .global Reset_Handler
    .type Reset_Handler, %function
Reset_Handler:
    bl zeroBss
    bl copyData
    bl main
1:
    bkpt
    b 1b

/* ==== Initialising functions ==== */
    .global zeroBss
    .type zeroBss, %function
zeroBss:
    ldr r0, =__bss_start__
    ldr r1, =__bss_end__
    movs r2, #0
    b 2f
1:  
    str r2, [r0]
    adds r0, #4
2:  
    cmp r0, r1
    blo 1b
    bx lr

    .global copyData
    .type copyData, %function
copyData:
    ldr r0, =__data_start__
    ldr r1, =__data_end__
    ldr r2, =__data_load_addr__
    cmp r0, r1
    bhs 2f
1:
    ldr r3, [r2]
    str r3, [r0]
    adds r0, #4
    adds r2, #4
    cmp r0, r1
    blo 1b
2:
    bx lr


/* ==== Fallbacks and Defaults ==== */

    /* Fallback incase C implementation does not exist */
    .type    HardFault_Handler, %function
    .weak    HardFault_Handler
HardFault_Handler:
    bkpt
    b HardFault_Handler

    .size    HardFault_Handler, . - HardFault_Handler

    /* Fallback incase C implementation does not exist */
    .type    Default_Handler, %function
    .weak    Default_Handler
Default_Handler:
    bkpt
    b Default_Handler

    .size    Default_Handler, . - Default_Handler

    /* Macro to define default exception/interrupt handlers.
     * Default handler are weak symbols with an endless loop.
     * They can be overwritten by real handlers.
     */
    .macro   Set_Default_Handler  Handler_Name
    .weak    \Handler_Name
    .set     \Handler_Name, Default_Handler
    .endm

    Set_Default_Handler  NMI_Handler
    Set_Default_Handler  SVC_Handler
    Set_Default_Handler  DebugMon_Handler
    Set_Default_Handler  PendSV_Handler
    Set_Default_Handler  SysTick_Handler

    Set_Default_Handler  Interrupt0_Handler
    Set_Default_Handler  Interrupt1_Handler
    Set_Default_Handler  Interrupt2_Handler
    Set_Default_Handler  Interrupt3_Handler
    Set_Default_Handler  Interrupt4_Handler
    Set_Default_Handler  Interrupt5_Handler
    Set_Default_Handler  Interrupt6_Handler
    Set_Default_Handler  Interrupt7_Handler
    Set_Default_Handler  Interrupt8_Handler
    Set_Default_Handler  Interrupt9_Handler

    .end
</file>

<file path="include/hal/random.h">
/**
 * @file random.h
 *
 * @brief Contains constants and abstraction functions for the RNG device
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef RANDOM_H
#define RANDOM_H

#include <stdint.h>

// Base Address (Instance)
#define RNG_BASE_ADDRESS 0x4000D000

// Register Offsets (from Table 174, page 115)
// Tasks:
#define RNG_START 0x000// Task starting the random number generator
#define RNG_STOP 0x004 // Task stopping the random number generator

// Events:
#define RNG_VALRDY \
    0x100// Event being generated for every new random number written to the VALUE register

// Registers:
#define RNG_SHORTS 0x200  // Shortcut register
#define RNG_INTEN 0x300   // Enable or disable interrupt
#define RNG_INTENSET 0x304// Enable interrupt
#define RNG_INTENCLR 0x308// Disable interrupt
#define RNG_CONFIG 0x504  // Configuration register
#define RNG_VALUE 0x508   // Output random number

// Other:
#define RNG_TASK_START 1   // Value for starting a Task
#define RNG_EVENT_TRIGGER 1// Value for setting/starting an Event
#define RNG_EVENT_CLEAR 0  // Value for clearing/stopping an Event

/**
 * @brief Enables the generation of random numbers
 */
void rng_init(void);

/**
 * @brief Get the Random Value from the generator immediately.
 *
 * The function will **NOT** wait until the next value is generated!
 *
 * @return uint8_t A random byte
 */
uint8_t rng_getRandomValue_immediately(void);

/**
 * @brief This is a function stub. Implement it, if needed.
 *
 * @return uint8_t A random byte
 */
uint8_t rng_getRandomValue_waiting(void);

#endif// RANDOM_H
</file>

<file path="include/util/conversion.h">
/**
 * @file conversion.h
 *
 * @brief Contains several different simple and independent conversion functions
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef CONVERSION_H
#define CONVERSION_H

#include <stddef.h>
#include <stdint.h>

#define ASCII_NUM_OFFSET 48

/**
 * Converts an integer to a string
 * @param [in] num
 * Integer to convert
 * @param [out] buf
 * String
 * @param [in] buf_size
 * Size of the string
 * @return TODO ??False??? when no error occurred
 */
int8_t int_to_str(uint32_t num, char *buf, const size_t buf_size);

/**
 * Converts an integer to a character
 * @param num
 * Integer to convert
 * @return Suitable character
 */
char int_to_char(uint8_t num);

#endif// CONVERSION_H
</file>

<file path="src/hal/interrupts.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "hal/interrupts.h"

#include "hal/nvic.h"
#include "hal/register_access.h"
#include "hal/timer.h"
#include "hal/uart.h"
#include "logic/time.h"
#include "util/input_buf.h"

void Interrupt2_Handler(void)
{
    input_onInterrupt(uart_readByte());
    register_write(Interrupt_ICPR, Interrupt_ID2);
}

void Interrupt8_Handler(void)
{
    register_write(TIMER0_BASE_ADDRESS | TIMER_COMPARE_0, 0);
    register_write(Interrupt_ICPR, Interrupt_ID8);
    time_onInterrupt();
}
</file>

<file path="src/hal/timer.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "hal/timer.h"

#include "hal/nvic.h"
#include "hal/register_access.h"

#include <stdint.h>

static const uint32_t TimerBase[3] = {
    TIMER0_BASE_ADDRESS,
    TIMER1_BASE_ADDRESS,
    TIMER2_BASE_ADDRESS};

static const uint32_t TimerCCOffset[4] = {
    TIMER_CC_0,
    TIMER_CC_1,
    TIMER_CC_2,
    TIMER_CC_3,
};

static const uint32_t TimerCaptureTaskOffset[4] =
    {TIMER_CAPTURE_0, TIMER_CAPTURE_1, TIMER_CAPTURE_2, TIMER_CAPTURE_3};

void timer_init(Timer const timer)
{
    // Init Timer with an interval of ~4sek
    timer_init_detailed(timer, 15, TIMER_BIT_MODE_32);
    timer_captureCompareSet(timer, CC0, 1953, true);
    timer_start(timer);
}

void timer_init_detailed(Timer const timer, uint8_t const prescaler, TimerBitMode const bitMode)
{
    const uint32_t timerBase = TimerBase[timer];
    // Instance[0] of the Timer uses Peripheral ID: 8

    // Prescaler
    register_write(timerBase | TIMER_PRESCALER, prescaler);

    // BitMode
    register_write(timerBase | TIMER_BITMODE, bitMode);

    // Enable Interrupt
    register_write(TIMER0_BASE_ADDRESS | TIMER_INTENSET, INT_COMPARE0);// Interrupt on Compare[0]

    // Enable User-Interrupt from Cortex-M0
    // ID8 ist der Timer0
    register_write(Interrupt_Set_Enable, Interrupt_ID8);
}

void timer_captureCompareSet(
    const Timer timer,
    const TimerCaptureCompare captureCompare,
    const uint32_t value,
    const bool shortcutClear)
{
    const uint32_t timerBase = TimerBase[timer];
    const uint32_t ccAddress = timerBase | TimerCCOffset[captureCompare];

    register_write(ccAddress, value);

    // Enable Shortcut between CC[0] and CLEAR
    uint32_t oldValue = register_read(timerBase | TIMER_SHORTS);
    oldValue &= ~(1 << captureCompare);
    register_write(timerBase | TIMER_SHORTS, oldValue | (shortcutClear ? 1 : 0) << captureCompare);
}

uint32_t timer_captureCompareGet(const Timer timer, const TimerCaptureCompare captureCompare)
{
    const uint32_t timerBase = TimerBase[timer];
    const uint32_t ccAddress = timerBase | TimerCCOffset[captureCompare];

    return register_read(ccAddress);
}

void timer_start(const Timer timer)
{
    const uint32_t timerBase = TimerBase[timer];

    register_write(timerBase | TIMER_START, TIMER_TASK_START);
}

void timer_stop(const Timer timer)
{
    const uint32_t timerBase = TimerBase[timer];

    register_write(timerBase | TIMER_STOP, TIMER_TASK_START);
}

void timer_count(const Timer timer)
{
    const uint32_t timerBase = TimerBase[timer];

    register_write(timerBase | TIMER_COUNT, TIMER_TASK_START);
}

void timer_clear(const Timer timer)
{
    const uint32_t timerBase = TimerBase[timer];

    register_write(timerBase | TIMER_CLEAR, TIMER_TASK_START);
}

void timer_capture(const Timer timer, const TimerCaptureCompare capture)
{
    const uint32_t timerBase = TimerBase[timer];
    const uint32_t timerCaptureTaskOffset = timerBase | TimerCaptureTaskOffset[capture];

    register_write(timerCaptureTaskOffset, TIMER_TASK_START);
}

void timer_clearCompareEvent(const Timer timer)
{
    const uint32_t timerBase = TimerBase[timer];

    register_write(timerBase | TIMER_COMPARE_0, TIMER_EVENT_CLEAR);
}
</file>

<file path="include/hal/nvic.h">
/**
 * @file nvic.h
 *
 * @brief Contains interrupt constants
 *
 * @details
 * Registers from NVIC - Cortex-M0 peripheral
 * These are to activate and debug Interrupts
 * Details on Chapter 4.2 Nested Vectored Interrupt Controller (Page 109)
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

#ifndef NVIC_H
#define NVIC_H

#define Interrupt_Set_Enable_00 0xE000E100//  1 - Reset
#define Interrupt_Set_Enable_01 0xE000E104//  2 - NMI
#define Interrupt_Set_Enable_02 0xE000E108//  3 - Hard-Fault
#define Interrupt_Set_Enable_03 0xE000E10C//  4 - MPU / MEM-Manage

#define Interrupt_Set_Enable_04 0xE000E110//  5 - BUS-Fault
#define Interrupt_Set_Enable_05 0xE000E114//  6 - Usage-Fault
#define Interrupt_Set_Enable_06 0xE000E118//  7 - Reserved
#define Interrupt_Set_Enable_07 0xE000E11C//  8 - Reserved

#define Interrupt_Set_Enable_08 0xE000E120//  9 - Reserved
#define Interrupt_Set_Enable_09 0xE000E124// 10 - Reserved
#define Interrupt_Set_Enable_10 0xE000E128// 11 - SVCall
#define Interrupt_Set_Enable_11 0xE000E12C// 12 - Debug Monitor

#define Interrupt_Set_Enable_12 0xE000E130// 13 - Reserved
#define Interrupt_Set_Enable_13 0xE000E134// 14 - PendSV
#define Interrupt_Set_Enable_14 0xE000E138// 15 - SysTick
#define Interrupt_Set_Enable_15 0xE000E13C// 16 - External 0

#define Interrupt_Set_Enable 0xE000E100// [32...0] Interrupt

#define Interrupt_ICPR 0xE000E280// Interrupt Clear-pending Register (on page 4-6)

#define Interrupt_ID1 (1 << 1)  // Bit for User Interrupt ID: 1
#define Interrupt_ID2 (1 << 2)  // Bit for User Interrupt ID: 2
#define Interrupt_ID8 (1 << 8)  // Bit for User Interrupt ID: 8
#define Interrupt_ID9 (1 << 9)  // Bit for User Interrupt ID: 9
#define Interrupt_ID10 (1 << 10)// Bit for User Interrupt ID:10

#define ICSR 0xE000ED04// Interrupt Control and State Register

/**
 * @brief Wait for an interrupt
 *
 * The processor enters low power mode until
 * the next interrupt occurs
 */
#define __WFI() __asm volatile("wfi" ::: "memory")


#endif// NVIC_H
</file>

<file path="include/hal/timer.h">
/**
 * @file
 *
 * @ingroup HAL
 *
 * @brief Contains constants and abstraction functions for the COUNTER device
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef TIMER_H
#define TIMER_H

#include "def.h"

#include <stdint.h>

// Base Address (Instance)
#define TIMER0_BASE_ADDRESS 0x40008000
#define TIMER1_BASE_ADDRESS 0x40009000
#define TIMER2_BASE_ADDRESS 0x4000A000

// Register Offsets (from Table 141, page 100)
// Tasks:
#define TIMER_START 0x000   // Start Timer
#define TIMER_STOP 0x004    // Stop Timer
#define TIMER_COUNT 0x008   // Increment Timer (Counter mode only)
#define TIMER_CLEAR 0x00C   // Clear time
#define TIMER_SHUTDOWN 0x010// Shut down timer

#define TIMER_CAPTURE_0 0x040// Capture Timer value to CC[0] register
#define TIMER_CAPTURE_1 0x044// Capture Timer value to CC[1] register
#define TIMER_CAPTURE_2 0x048// Capture Timer value to CC[2] register
#define TIMER_CAPTURE_3 0x04C// Capture Timer value to CC[3] register

// Events:
#define TIMER_COMPARE_0 0x140// Compare event on CC[0] match
#define TIMER_COMPARE_1 0x144// Compare event on CC[1] match
#define TIMER_COMPARE_2 0x148// Compare event on CC[2] match
#define TIMER_COMPARE_3 0x14C// Compare event on CC[3] match

// Registers:
#define TIMER_SHORTS 0x200   // Shortcut register
#define TIMER_INTENSET 0x304 // Enable interrupt
#define TIMER_INTENCLR 0x308 // Disable interrupt
#define TIMER_MODE 0x504     // Timer mode selection
#define TIMER_BITMODE 0x508  // Configure the number of bits used by the TIMER
#define TIMER_PRESCALER 0x510// Timer prescaler register
#define TIMER_CC_0 0x540     // Capture/Compare register 0
#define TIMER_CC_1 0x544     // Capture/Compare register 1
#define TIMER_CC_2 0x548     // Capture/Compare register 2
#define TIMER_CC_3 0x54C     // Capture/Compare register 3

// Other:
#define TIMER_TASK_START 1   // Value for starting a Task
#define TIMER_EVENT_TRIGGER 1// Value for setting/starting an Event
#define TIMER_EVENT_CLEAR 0  // Value for clearing/stopping an Event

#define SHORTS_COMPARE0_CLEAR_ENABLE (1 << 0) // Shortcut between COMPARE[0] event and CLEAR task
#define SHORTS_COMPARE0_CLEAR_DISABLE (0 << 0)// Shortcut between COMPARE[0] event and CLEAR task
#define SHORTS_COMPARE1_CLEAR_ENABLE (1 << 1) // Shortcut between COMPARE[1] event and CLEAR task
#define SHORTS_COMPARE1_CLEAR_DISABLE (0 << 1)// Shortcut between COMPARE[1] event and CLEAR task

#define SHORTS_COMPARE0_STOP_ENABLE (1 << 8) // Shortcut between COMPARE[0] event and STOP task
#define SHORTS_COMPARE0_STOP_DISABLE (0 << 8)// Shortcut between COMPARE[0] event and STOP task
#define SHORTS_COMPARE1_STOP_ENABLE (1 << 9) // Shortcut between COMPARE[1] event and STOP task
#define SHORTS_COMPARE1_STOP_DISABLE (0 << 9)// Shortcut between COMPARE[1] event and STOP task

#define INT_COMPARE0 (1 << 16)// Enable/Disable Interrupt on COMPARE[0] event
#define INT_COMPARE1 (1 << 17)// Enable/Disable Interrupt on COMPARE[1] event
#define INT_COMPARE2 (1 << 18)// Enable/Disable Interrupt on COMPARE[2] event
#define INT_COMPARE3 (1 << 19)// Enable/Disable Interrupt on COMPARE[3] event

typedef enum Timer
{
    TIMER0,
    TIMER1,// unused
    TIMER2 // unused
} Timer;

typedef enum TimerBitMode
{
    TIMER_BIT_MODE_16 = 0,
    TIMER_BIT_MODE_8 = 1,
    TIMER_BIT_MODE_24 = 2,
    TIMER_BIT_MODE_32 = 3,
} TimerBitMode;

typedef enum TimerCaptureCompare
{
    CC0,
    CC1,
    CC2,
    CC3
} TimerCaptureCompare;

/**
 * @brief Default Initialisation of Timer.
 *
 * Initializes the Timer Peripheral to a value ~4sek.
 * This is just for demonstration and could be changed to your needs
 **/
void timer_init(Timer timer);

/**
 * @brief Initialises the Timer.
 *
 * Compare Value set is for CC[0]
 *
 * @param[in] prescaler
 *   Register value according to `Table 147: PRESCALER`.
 *   value 0..9 is valid ==> 2^0 .. 2^9
 * @param[in] bitmode Bit Mode.
 **/
void timer_init_detailed(Timer timer, uint8_t prescaler, TimerBitMode bitMode);

/**
 * @brief Set the Capture/ Compare Register of the Timer.
 *
 * It also enables the shortcut between CC[0] and CLEAR, so that the timer is cleared, when the
 *compared value is reached.
 *
 * @param[in] timer Timer
 * @param[in] captureCompare Capture Compare Register
 * @param[in] value New Value
 * @param[in] shortcutClear
 **/
void timer_captureCompareSet(
    Timer timer,
    TimerCaptureCompare captureCompare,
    uint32_t value,
    bool shortcutClear);

/**
 * @brief Gets the Capture Compare Register of Timer.
 *
 * @param timer Timer
 * @param captureCompare
 *
 * @return
 **/
uint32_t timer_captureCompareGet(Timer timer, TimerCaptureCompare captureCompare);

/**
 * @brief Starts the given timer
 * @param [in] timer Timer
 */
void timer_start(Timer timer);

/**
 * @brief Stops the given timer
 * @param [in] timer
 * Number of the timer
 */
void timer_stop(Timer timer);

/**
 * @brief Activate counting on the given timer
 * @param [in] timer
 * Number of the timer
 */
void timer_count(Timer timer);

/**
 * @brief Clear the time of the given timer
 * @param [in] timer Number of the timer
 */
void timer_clear(Timer timer);

/**
 * @brief Capture the time of the given timer
 * @param [in] timer Number of the timer
 * @param [in] capture Number of the Capture Compare
 */
void timer_capture(Timer timer, TimerCaptureCompare capture);

/**
 * @brief Clears the Compare Event for CC[0]
 *
 * This could be useful for stopping the
 * timer from pulling the interrupt-line.
 */
void timer_clearCompareEvent(Timer timer);

#endif// TIMER_H
</file>

<file path="include/hal/uart.h">
/**
 * @file uart.h
 *
 * @brief Contains constants and abstraction functions for the UART device
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef UART_H
#define UART_H

#include "def.h"
#include <stdint.h>

// Base Address (Instance)
#define UART_BASE_ADDRESS 0x40002000

// Register Offsets (from Table 275, page 154)
// Tasks:
#define UART_STARTRX 0x000// Start UART receiver
#define UART_STOPRX 0x004 // Stop UART receiver
#define UART_STARTTX 0x008// Start UART transmitter
#define UART_STOPTX 0x00C // Stop UART transmitter
#define UART_SUSPEND 0x01C// Suspend UART

// Events:
#define UART_CTS 0x100   // CTS is activated (set low). Clear To Send.
#define UART_NCTS 0x104  // CTS is deactivated (set high). Not Clear To Send.
#define UART_RXDRDY 0x108// Data received in RXD
#define UART_TXDRDY 0x11C// Data sent from TXD
#define UART_ERROR 0x124 // Error detected
#define UART_RXTO 0x144  // Receiver timeout

// Registers:
#define UART_INTEN 0x300   // Enable or disable interrupt
#define UART_INTENSET 0x304// Enable interrupt
#define UART_INTENCLR 0x308// Disable interrupt
#define UART_ERRORSRC 0x480// Error source
#define UART_ENABLE 0x500  // Enable UART
#define UART_PSELRTS 0x508 // Pin select for RTS
#define UART_PSELTXD 0x50C // Pin select for TXD
#define UART_PSELCTS 0x510 // Pin select for CTS
#define UART_PSELRXD 0x514 // Pin select for RXD
#define UART_RXD 0x518     // RXD register
#define UART_TXD 0x51C     // TXD register
#define UART_BAUDRATE 0x524// Baud rate
#define UART_CONFIG 0x56C  // Configuration of parity and hardware flow control

// Other:
#define UART_TASK_START 1   // Value for starting a Task
#define UART_EVENT_TRIGGER 1// Value for setting/starting an Event
#define UART_EVENT_CLEAR 0  // Value for clearing/stopping an Event

#define UART_INT_RXDRDY (1 << 2)

/**
 * @brief Initializing the UART with the following Settings:
 * 115200-8-N-1
 *
 * @param[in] with_interrupts Wether or not interrupts should be triggered
 */
void uart_init(bool with_interrupts);

/**
 * @brief Writes/Sends a byte over the serial Port
 *
 * @param[in] data byte to send
 */
void uart_writeByte(uint8_t data);

/**
 * @brief Read/Receive a byte from the serial Port
 *
 * @return uint8_t received Byte or 0 (zero) if nothing was received
 */
uint8_t uart_readByte();

#endif// UART_H
</file>

<file path="CMakeLists.txt">
# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
# If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.

#!TODO! Document properly

cmake_minimum_required(VERSION 3.22)

project(TikTakToe LANGUAGES ASM C)

set(GENERATED_WARNING "!! This file has been generated automatically, any changes may be overridden !!")

set(CELLS_PER_ROW 4 CACHE STRING "Number of cells in each row")
set(CELLS_PER_COL 4 CACHE STRING "Number of cells in each column")

set(TICKS_PER_TURN 20 CACHE STRING "Number of ticks per round")
set(TICK_SPEED 12 CACHE STRING "Speed of each tick in milliseconds")

option(ENABLE_UNICODE "Enable Unicode support" ON)
option(ENABLE_ASCII_ART "Enable ASCII Art" ON)

configure_file(
        ${CMAKE_SOURCE_DIR}/include/config.h.in
        ${CMAKE_SOURCE_DIR}/include/config.h @ONLY
)

# Define all Files:
FILE(GLOB_RECURSE SOURCES "src/*.c")
add_executable(TikTakToe ${SOURCES})

target_sources(
        TikTakToe
        PRIVATE
        ${CMAKE_SOURCE_DIR}/entry/entry.S
)

target_include_directories(
        TikTakToe
        PRIVATE
        include
)

target_link_libraries(TikTakToe PRIVATE gcc)

target_link_options(
        TikTakToe
        PRIVATE
        -Wl,-Map=TikTakToe.map
        -T ${CMAKE_SOURCE_DIR}/entry/linker_script.ld)
set_target_properties(
        TikTakToe
        PROPERTIES LINK_DEPENDS ${CMAKE_SOURCE_DIR}/entry/linker_script.ld)


#####################################################################
# Post Build Commands:
# - extract binary


# To copy out the binary:
#arm-none-eabi-objcopy -O binary base.elf output.bin

add_custom_command(
        TARGET TikTakToe
        POST_BUILD
        COMMAND "${OBJ_COPY}"
        ARGS -O binary $<TARGET_FILE:TikTakToe> $<TARGET_FILE_BASE_NAME:TikTakToe>.bin)

set_target_properties(
        TikTakToe
        PROPERTIES ADDITIONAL_CLEAN_FILES $<TARGET_FILE_BASE_NAME:TikTakToe>.bin)

add_custom_target(
        copy-compile-commands ALL
        ${CMAKE_COMMAND} -E copy_if_different
                ${CMAKE_BINARY_DIR}/compile_commands.json
                ${CMAKE_CURRENT_LIST_DIR}
)


find_program(CLANG_FORMAT NAMES clang-format)
if(CLANG_FORMAT)
        FILE(GLOB_RECURSE SOURCES "src/*.c")
        FILE(GLOB_RECURSE HEADERS "include/*.h")
        add_custom_target(
                format
                COMMAND ${CLANG_FORMAT} -i ${HEADERS} ${SOURCES}
                VERBATIM
        )
        set_target_properties(format PROPERTIES EXCLUDE_FROM_ALL FALSE)
else()
        message(STATUS "Clang-format executable not found")
endif()


find_package(Doxygen)
if(DOXYGEN_FOUND)
        set(DOXYFILE ${PROJECT_SOURCE_DIR}/Doxyfile)
        add_custom_target(
                documentation
                COMMENT "Generating documentation with Doxygen..."
                COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYFILE}
                WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
                VERBATIM
        )
else()
        message(STATUS "Doxygen not found, unable to build documentation")
endif()
</file>

<file path="Presentation.md">
# Präsentation 04.03.2025
1 und 2 ist Ben oder Max - wer was macht ist ja egal, ging mir nur Zeit mäßig

## Einleitung > Ben oder Max

- TikTakToe Projekt

### Übersicht Aufbau
1. Einleitung
2. Grobe Überlick Architektur
2. Überlick Spiel
4. Nennenswerte Aspekte in Code
5. Compile time Optionen
6. Building/Running
7. Ausblick

## Einleitung > 2

- TikTakToe Projekt

## Architektur > Paul
![Ansicht](https://github.com/user-attachments/assets/ac9f3c44-f19c-4fc7-9869-ddfb3f9d6aef)
> __ANSICHT 1: Dateisystem (Yazi?) 
### Schichten
- Schichten Architektur zur entkoppelung von Komponenten
- (Anmerken, dass wir nicht 100% streng hier sind?)
#### Hardware Abstraction Layer
- Direkte Kommunikation mit Hardware Componenten
- Insb. Module aus Vorlesung, aber auch bspw. memset oder __WFI() implementation

#### Logic
- Spiele Logik
- Input Verarbeitung, Zeitmanagement, "bot", ...

#### Presentation
- Im Prinzip alles was der Nutzer zu Gesicht bekommt
- Menüs, Spiel UI, SpielFeld/Zellen, ASCII Art, Styles...

#### Sonstiges
##### utils
- Hilfsfunktionen die nirgends zu 100% gepasst haben

##### entry
- Einstieg aus der Vorlesung, aktuell (fast) unverändert, nur Verhalten von Default_Handler und HardFault_Handler angepasst

### Basic Flow
1. entry
2. hardware init
3. game menu
4. (on game start) game init

## Überblick Spiel > 1
![Ansicht 2 (nach Command)](https://github.com/user-attachments/assets/d39ecbd4-a50f-4ada-a90f-785c7575cd6c)
> __ANSICHT 2: Terminal into Spiel
1. Spiel starten (3x3 Modus) 
> __COMMAND 1: `make run` | vorher bauen mit `make ROWS=3 COLS=3` 
2. Hauptmenü zeigen
3. Kurz auf Punkte eingehen
4. Spiel starten
5. 1/2 Züge spielen
6. Funktionen während Spiel zeigen
    - Vergrößern/Verkleinern (+/-)
    - Controlview anzeigen (?)
    - Pausieren
7. Zu Ende Spielen
9. Statistiken

8. ! Aber wir sollten ja 4x4 machen :O **> 2** 
> __COMMAND 2: `make ROWS=4 COLS=4 run`

9. Compile-Option für FeldGröße zeigen und anwenden
10. Spiel neu starte und 4x4 kurz zeigen
    - Anmerken, dass das der Standard ist

## Nennenswerte Aspekte in Code > Simon
### Input Buffer
![Ansicht 3](https://github.com/user-attachments/assets/81c768e4-9a55-4dc6-b9ba-6c49737d4c8e)
> __ANSICHT 3: input_buf.h SPLIT input_buf.c
- Keine dynamische Memory allocation
- Verwendung von RingBuffer
- Head/Tail Pointer

### Zellen Neumalen ohne alles zu refreshen
![Ansicht 4](https://github.com/user-attachments/assets/b5082a71-1cc1-4ac8-9c3d-c77e437d55df)
> __ANSICHT 4: cell.c -> cell_select(), redrawCell() - alles andere folden
- Nur Inhalt der aktuellen und letzten Zellen werden bei Bedarf neugemalt
- erst cell_select zeigen, dann redrawCell (am besten anmerkden, dass bisschen tief genestet ist...)

### Vergrößern/Verkleinern > Paul
![Ansicht 5](https://github.com/user-attachments/assets/955efb78-c715-4db2-a573-dfee62834321)
> __ANSICHT 5: cell.h -> Size + CellSize, cell.c -> ARRAYS
- 3 Größen verfügbar
- Möglich durch entkoppelung von Logik (welche Zellen sind markiert) und Präsentation
- 2D Arrays erlauben malen nur in Zelle, so dass wie bereits angemerkt nicht alles neu

### Winning Algoritmus
__ANSICHT 6: winner.c

### __WFI()
![Ansicht 6](https://github.com/user-attachments/assets/8eefa502-3e72-44d7-bc14-799ebcd7061d)
> _\_ANSICHT 6: menu.c -> menu_showMainMenu() waiting loop, nvic.h -> definition von __WFI()
- Hohe CPU Nutzung während Warteschleifen für Input aufgefallen
    - Permanentes checken ob input verfügbar
- Implementation von `wfi` Befehl um Prozessor in LowPowerMode bis nächsten Interrupt zu setzen

## Compile Time Optionen > Simon
![Ansicht 7](https://github.com/user-attachments/assets/1c1423d9-410f-4132-9b4c-136bc33f1651)
> __ANSICHT 7: Makefile
- Größe bereits gezeigt (theoretisch beliebig möglich, aber Memory Limitationen)
> __COMMAND 3: `make ROWS=3 COLS=7 TICK_SPEED=11 TICKS_PER_TURN=30 UNICODE=OFF ASCII_ART=OFF run`
- Außerdem zeit anpassen, unicode deaktivieren, und ascii art deaktieren
    - Recompile mit schnellen Ticks, vielen Ticks per Turn, ohne unicode, ohne ascii art

## Running und Building 
![Ansicht 8](https://github.com/user-attachments/assets/565c9722-1b3d-41c6-8d23-6d90bee9638a)
> __ANSICHT 8: CMakeLists.txt, Dockerfile
- Standartmäßig bauen über CMake
> __COMMAND 4: `docker run -it ghcr.io/softwareengineeringone/tiktaktoe:latest`
- direktes laufen ohne dependencies über docker image möglich
    - ganz kurz zeigen

## Ausblick (TODO) > 1 oder 2 (unsicher wer bis dahin mehr/weniger hat)
![Ansicht 9](https://github.com/user-attachments/assets/16375cd7-6677-4ad8-8105-bad665308c07)
> __ANSICHT 9: Main Menu
- Bereits feature complete
- Optimierung von entry code und modulen aus Vorlesung für unseren Anwendungszweck
- Dokumentation
</file>

<file path="src/presentation/menu.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#include "presentation/menu.h"
#include "config.h"
#include "hal/nvic.h"
#include "logic/game.h"
#include "presentation/ascii_art.h"
#include "presentation/cell.h"
#include "presentation/cursor.h"
#include "presentation/print.h"
#include "presentation/style.h"
#include "presentation/ui.h"
#include "util/input_buf.h"


static void printWinnerBanner(const GameState *game_info);

static void printMainMenu();

bool menu_showMainMenu()
{
    print(HIDE_CURSOR);
    printMainMenu();
    uint8_t input;
    while(true)
    {
        while(!input_getNext(&g_input_buf, &input))
        {
            __WFI();
        }

        switch(input)
        {
            case '1':
                game_run(PVP);
                printMainMenu();
                break;
            case '2':
                game_run(PVE);
                printMainMenu();
                break;
            case '3':
                menu_showControls(RETURN_MENU_HINT);
                printMainMenu();
                break;
            case '4':
                menu_showCredits();
                printMainMenu();
                break;
            case '5':
                return false;
            case '6':
                return true;
            case '7':
                // this exists to test the HardFault_Handler
                // if the application was actually "deployed" in any way
                // it should be removed
                __asm volatile("udf #0");
            default:;
        }
    }
}

void menu_showGameOver(const GameState *game_info)
{
    ui_gameOver();

    // avoid artifact when ascii art is disabled
    cursor_moveTo(1, (CELLS_PER_COL * g_cell_size.height + HEADING_LINES) + 1);
    print(ERASE_LINE_FROM_CURSOR);

    cursor_moveTo(1, CELLS_PER_COL * g_cell_size.height + HEADING_LINES);
    printWinnerBanner(game_info);

    menu_anyKeyToContinue("\nPress any key to see the summary...");

    print_clearConsole();
    ui_printHeading();
    printWinnerBanner(game_info);

    println_styled("\nGame Summary:\n", &DEFAULT_BOLD);


    print_styled("\tRounds needed:\t", &DEFAULT_ITALIC);
    println_int(game_info->round);

    print_styled("\tFields marked:\t", &DEFAULT_ITALIC);
    println_int(game_info->fields_marked);

    print_styled("\tTotal ticks:\t", &DEFAULT_ITALIC);
    println_int(game_info->total_ticks);

    print_styled("\tØ ticks/turn:\t", &DEFAULT_ITALIC);
    println_int(game_info->average_ticks);


    print_styled("\n\tTotal ticks by ", &DEFAULT_ITALIC);
    print_styled("cross", &BOLD_CROSS);
    print(":\t");
    println_int(game_info->cross_total_ticks);

    print_styled("\tØ ticks/turn by ", &DEFAULT_ITALIC);
    print_styled("cross", &BOLD_CROSS);
    print(":\t");
    println_int(game_info->cross_average_ticks);

    print_styled("\n\tTotal ticks by ", &DEFAULT_ITALIC);
    print_styled("circle", &BOLD_CIRCLE);
    print(":\t");
    println_int(game_info->circle_total_ticks);

    print_styled("\tØ ticks/turn by ", &DEFAULT_ITALIC);
    print_styled("circle", &BOLD_CIRCLE);
    print(":\t");
    println_int(game_info->circle_average_ticks);
    print(RESET);

    menu_anyKeyToContinue(RETURN_MENU_HINT);
}

void menu_showCredits()
{
    print_clearConsole();
    ui_printHeading();
    println_styled("Credits", &DEFAULT_BOLD);
    println("");

    println_styled("Developed by", &BOLD_CROSS);
    println("\tSimon Blum");
    println("\tBen Oeckl");
    println("\tPaul Stöckle");
    println("\tMaximilian Rodler");
    println("");

    println_styled("Based on initial work by", &DEFAULT_BOLD);
    println("\tThomas Vogt");
    println("\tSven Reis");
    println("");

    print_styled("Licensed under ", &ITALIC_DIM);
    println_styled("Mozilla Public License 2.0.", &ITALIC_DIM);
    println("");
    println_styled(
        "If a copy of the MPL was not distributed with this project,\n\
you can obtain one at http://mozilla.org/MPL/2.0/.",
        &ITALIC_DIM);


    menu_anyKeyToContinue(RETURN_MENU_HINT);
}

void menu_showControls(const char *continue_hint)
{
    print_clearConsole();
    ui_printHeading();
    println_styled("Controls:\n", &DEFAULT_BOLD);

    print("\t");
    print_styled(ARROW_RIGHT, &BOLD_CROSS);
    println("\t Move selection right");

    print("\t");
    print_styled(ARROW_UP, &BOLD_CROSS);
    println("\t Move selection up");

    print("\t");
    print_styled(ARROW_LEFT, &BOLD_CROSS);
    println("\t Move selection left");

    print("\t");
    print_styled(ARROW_DOWN, &BOLD_CROSS);
    println("\t Move selection down\n");

    print_styled("\t<SPACE>", &BOLD_CROSS);
    println("\t Mark the selected field");

    print_styled("\t<ENTER>", &BOLD_CROSS);
    println("\t Mark the selected field\n");


    print_styled("\tp / P", &BOLD_CROSS);
    println("\t Pause the game");
    println_styled("\t\t You won't be able to see the field while paused!\n", &ITALIC_DIM);
    print_styled("\tq / Q", &BOLD_CROSS);
    println("\t Quit the running game\n");


    print_styled("\t+", &BOLD_CROSS);
    println("\t Increase cell size");

    print_styled("\t-", &BOLD_CROSS);
    println("\t Decrease cell size\n");

    print_styled("\t?", &BOLD_CROSS);
    println("\t Open this overview");

    menu_anyKeyToContinue(continue_hint);
}

void menu_anyKeyToContinue(const char *continue_hint)
{
    println_styled(continue_hint, &ITALIC_DIM);
    uint8_t input;
    while(!input_getNext(&g_input_buf, &input))
    {
        __WFI();
    }
    while(input_getNext(&g_input_buf, &input))
        ;
}

static void printMainMenu()
{
    print_clearConsole();
    ui_printHeading();
    println_styled("Choose your option:\n", &DEFAULT_BOLD);
    println("\t(1) Player vs Player");
    println("\t(2) Player vs Computer");
    println("\t(3) Controls");
    println("\t(4) Credits");
    println("\t(5) Quit\n");

    println(DIM);
    println("\t(6) Reset\n");
    println("\tResetting the game may help if an unexpected error occurs.");
    println("\tIf the error persists, please contact the developer.\n");
    print(RESET);
    println_styled("Hint: Press the number corresponding to your desired option", &ITALIC_DIM);
}

static void printWinnerBanner(const GameState *game_info)
{
    switch(game_info->winner)
    {
        case Circle:
            print_styled(CIRCLE_WINS, &BOLD_CIRCLE);
            break;
        case Cross:
            print_styled(CROSS_WINS, &BOLD_CROSS);
            break;
        case None:
            print_styled(ITS_A_TIE, &BOLD_DIM);
            break;
        default:;
    }
}
</file>

<file path="src/util/error_handling.c">
#include "util/error_handling.h"
#include "presentation/ui.h"

#include "hal/system.h"
#include "hal/uart.h"
#include "presentation/print.h"
#include "presentation/style.h"

static void handleError(const char *hint);

void HardFault_Handler()
{
    handleError(
        "You have encountered a hard fault. If this error persists please contact the developer!");
}

void Default_Handler()
{
    handleError(
        "An unexpected interrupt occurred. If this error persists please contact the developer!");
}

static void handleError(const char *hint)
{
    print_clearConsole();
    ui_printHeading();
    print(FG_RED);
    print(BOLD);
    print("Ooops, something went very wrong!\n");
    print(RESET);
    println(hint);
    print("\nPress any key to try to reset the game... ");
    print(DIM);
    println("(This is not guaranteed to fix the error)");
    print(RESET);

    while(uart_readByte() == 0)
        ;

    system_softReset();
}
</file>

<file path="Architecture.md">
# Architecture

This project is an embedded application, designed to run on an `nRF51` microcontroller with an
`arm-cortex-m0` CPU. The architecture is seperated into three main layers; the hardware abstraction layer,
the logic layer and the presentation layer. Additionally modules for the entry process and utility functions
exist. This encapsulation allows for a flexible design.

## Entry Module
_files: entry/entry.S, entry/linker_script.ls_

This module is responsible for the startup process of the microcontroller. Here important
elements, such as the entry point, interrupt vector table and memory regions are defined
and actions such as copying data from ROM to RAM are performed.


## Hardware Abstraction Layer 
_files: include/hal/\*.h, src/hal/\*.c_

The hardware abstraction layer, short hal, abstracts low level operations such as register access and encapsulates
these operations, allowing the layers above to refrain from interacting with any of the peripherals directly. 

## Logic Layer
_files: include/logic/\*.h, src/logic/\*.c_

Within this layer, the game itself resides. The whole logic is based here.

!TODO!


## Presentation Layer 
_files: include/presentation/\*.h, src/presentation/\*.c_

!TODO!


## Utility Layer
_files: include/util/\*.h, src/util/\*.c_

!TODO!

## Other relevant files

- config.h.in / config.h
    - !TODO!
- !TODO!
</file>

<file path="include/def.h">
/**
 * @file def.h
 *
 * @brief Contains very basic and general definitions
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef DEF_H
#define DEF_H

typedef char bool;

#define false 0
#define true 1

#endif// DEF_H
</file>

<file path="Makefile">
CMAKE_PRESET := arm-cortex-m0-unix
BUILD_DIR := build-cortex-m0
EXECUTABLE := TikTakToe.elf

# Game configs
ROWS ?= 4
COLS ?= 4

PORT ?= 1234

TICKS_PER_TURN ?= 20
TICK_SPEED ?= 12

UNICODE ?= ON
ASCII_ART ?= ON

# Default target
all: build

$(BUILD_DIR):
	cmake --preset $(CMAKE_PRESET) \
		-DCELLS_PER_COL=$(ROWS) \
		-DCELLS_PER_ROW=$(COLS) \
		-DTICKS_PER_TURN=$(TICKS_PER_TURN) \
		-DTICK_SPEED=$(TICK_SPEED) \
		-DENABLE_UNICODE=$(UNICODE) \
		-DENABLE_ASCII_ART=$(ASCII_ART)


configure: $(BUILD_DIR)

build: $(BUILD_DIR)
	cmake --build --preset $(CMAKE_PRESET)

run: build
	qemu-system-arm -M microbit -device loader,file=$(BUILD_DIR)/$(EXECUTABLE) -nographic -gdb tcp::$(PORT) -serial mon:stdio
	@printf "\e[?25h"

clean:
	rm -rf $(BUILD_DIR)

generate_documentation:
	doxygen Doxyfile 1>/dev/null

clean_documentation:
	rm docs/html docs/rtf docs/man docs/latex -r

cursor:
	@printf "\e[?25h"
	@echo "Cursor should be visible again"

.PHONY: all configure build run clean cursor clean_documentation generate_documentation
</file>

<file path="include/config.h">
/*! !! This file has been generated automatically, any changes may be overridden !! !*/
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef CONFIG_H
#define CONFIG_H

// if UNICODE is not defined, ascii characters are used
#define ENABLE_UNICODE

#define ENABLE_ASCII_ART

// size of the field
#define CELLS_PER_ROW 4
#define CELLS_PER_COL 4

// game speed
#define TICKS_PER_TURN 20
#define TICK_SPEED 12

/**
 * @defgroup HAL Hardware Abstraction Layer
 * @{
 *
 * @}
 */

/**
 * @defgroup Logic Layer
 * @{
 *
 * @}
 */

/**
 * @defgroup Presentation
 * @{
 *
 * @}
 */

/**
 * @defgroup Utilities
 * @{
 *
 * @}
 */

#endif// CONFIG_H
</file>

<file path="Dockerfile">
# Stage 1: Build stage
FROM ubuntu:24.04 AS builder

RUN apt-get update && apt-get install -y \
    build-essential \
    gcc-arm-none-eabi \
    gdb-multiarch \
    cmake \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY . /app

RUN cmake --preset arm-cortex-m0-unix && \
    cmake --build --preset arm-cortex-m0-unix

# Stage 2: Runtime stage
FROM alpine:3.21.3 AS runner

RUN apk add --no-cache qemu-system-arm

WORKDIR /app

COPY --from=builder /app/build-cortex-m0/TikTakToe.elf /app/TikTakToe.elf

ENTRYPOINT ["qemu-system-arm", "-machine", "microbit", "-device", "loader,file=/app/TikTakToe.elf", "-s", "-nographic", "-serial", "mon:stdio"]

LABEL org.opencontainers.image.source=https://github.com/SoftwareEngineeringOne/tiktaktoe
LABEL org.opencontainers.image.licenses=MPL-2.0
</file>

<file path="include/presentation/cursor.h">
/**
 * @file cursor.h
 *
 * @brief Contains function for moving the presentation of the cursor
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef CURSOR_H
#define CURSOR_H

#include <stdint.h>

/**
 * @brief Move cursor to the given coordinates
 * @param [in] x
 * X-Position
 * @param [in] y
 * Y-Position
 */
void cursor_moveTo(uint8_t x, uint8_t y);


#endif// CURSOR_H
</file>

<file path=".github/workflows/docker.yml">
name: Build and Push Dockerimage

on:
  push:
    branches: ['main']
    paths:
      - '**.c'
      - '**.h'
      - Dockerfile
      - '.github/workflows/docker.yml'
    tags:
  workflow_dispatch:

env:
    GHCR: ghcr.io
    DR: index.docker.io
    DR_IMAGE_NAME: tiktaktoe
    GHCR_IMAGE_NAME: ${{ github.repository }}

jobs:
    dockerhub:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ vars.DOCKERHUB_USERNAME}}/${{ env.DR_IMAGE_NAME }}
                tags:
                  type=raw,value=latest,enable={{is_default_branch}}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                annotations: ${{ steps.meta.outputs.annotations }}
                provenance: true
                sbom: true

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                subject-name: ${{ env.DR }}/${{ vars.DOCKERHUB_USERNAME }}/${{ env.DR_IMAGE_NAME }}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true

    ghcr:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4


            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.GHCR }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}
                tags:
                  type=raw,value=latest,enable={{is_default_branch}}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                annotations: ${{ steps.meta.outputs.annotations }}
                provenance: true
                sbom: true

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                subject-name: ${{ env.GHCR }}/${{ env.GHCR_IMAGE_NAME }}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true
</file>

<file path="src/presentation/cursor.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "presentation/cursor.h"

#include "presentation/print.h"
#include "util/conversion.h"

/**
 * @brief TODO: ?????
 * @param num
 * @param num_buf
 * @param buf
 * @param buf_pos
 */
static void writeNumToBuf(uint8_t num, const char *num_buf, char *buf, uint8_t *buf_pos);

void cursor_moveTo(const uint8_t x, const uint8_t y)
{
    // uint8_t has max 3 digits + null terminator
    static char conversion_buf[4];
    const uint8_t size = sizeof(conversion_buf);

    // \e (1) + [ (1) + 000 (3) + ; (1) + 000 (3) + H (1) + '\0' => 11
    static char escape_seq[11];
    uint8_t pos = 0;
    escape_seq[pos++] = '\e';
    escape_seq[pos++] = '[';

    int_to_str(y, conversion_buf, size);
    writeNumToBuf(y, conversion_buf, escape_seq, &pos);

    escape_seq[pos++] = ';';

    int_to_str(x, conversion_buf, size);
    writeNumToBuf(x, conversion_buf, escape_seq, &pos);

    escape_seq[pos++] = 'H';
    escape_seq[pos] = '\0';

    print(escape_seq);
}

static void writeNumToBuf(const uint8_t num, const char *num_buf, char *buf, uint8_t *buf_pos)
{
    buf[(*buf_pos)++] = num_buf[0];
    if(num > 9)
    {
        buf[(*buf_pos)++] = num_buf[1];
    }
    if(num > 99)
    {
        buf[(*buf_pos)++] = num_buf[2];
    }
}
</file>

<file path="README.md">
[![MPL-2.0 License](https://img.shields.io/github/license/SoftwareEngineeringOne/tiktaktoe
)](https://choosealicense.com/licenses/mpl-2.0/)


# TikTakToe

A TikTakToe game written for the `arm-cortex-m0` microcontroller.

Authors: Simon Blum, Max Rodler, Ben Oeckl, Paul Stöckle



## Acknowledgements

 - [arm-cortex-m0-cmake-start ](https://github.com/infohoschie/arm-cortex-m0-cmake-start)
## Architecture
See [Architecture.md](Architecture.md)
## Documentation

[Documentation](TODO)


## Build and run the project
### Using CMake and qemu directly
To build the project using CMake and qemu some dependencies,
which can be found under [dependencies] are required.
#### Linux
```sh
# 1. Configure the cmake project
cmake --preset arm-cortex-m0-unix

# 2. Build the project
cmake --build --preset arm-cortex-m0-unix

# 3. Run the project
qemu-system-arm -M microbit -device loader,file=build-cortex-m0/TikTakToe.elf -nographic -s -serial mon:stdio
```

#### Windows
!TODO!

### Using the provided Makefile
#### Linux
The provided [Makefile](Makefile) can be used to easily build and run
the project using a single command.
```sh
# Configure, build and run the project
make run

# Configure and build the project
make 

# Remove the build directory
make clean

# Generate doxygen documentation (requires doxygen installed)
make generate_documentation
```

#### Windows
!TODO!

### Using Docker
Docker can be used to build and run the application without the need
for external dependencies. For this you have to options:
#### Use the image from Dockerhub
```bash
# Using DockerHub
docker run -it definitelynotsimon13/tiktaktoe:latest
# Using GitHub Container Registry
docker run -it ghcr.io/softwareengineeringone/tiktaktoe:latest
```
#### Build the image locally
```bash
docker build -t [TAGNAME] .
docker run -it [TAGNAME]
```

> [!NOTE]
> In either case the `-it` flags are required to properly
> capture input from STDIN!
## Compile time configurations
The project has a few options that can be changed before compilation.
- Number of rows (default is 4)
- Number of columns (default is 4)
- Ticks per turn (default is 20)
- Tick speed (default is 12, lower is faster)
- Unicode support (default is "ON")
- ASCII Art (default is "ON", may look broken on small screens) 

These can be set by:
### Directly passing to CMake
When configuring the project the default command `cmake --preset arm-cortex-m0-{unix/mingw}` can be
appended by:
- for the number of rows: `[...] --DCELLS_PER_COL=$(NUMBER)`
- for the number of cols: `[...] --DCELLS_PER_ROW=$(NUMBER)`
- for ticks per turn: `[...] --DTICKS_PER_TURN=$(NUMBER)`
- for tick speed: `[...] --DTICK_SPEED=$(NUMBER)`
- for unicode: `[...] --DENABLE_UNICODE=$(ON/OFF)`
- for ascii art: `[...] --DENABLE_ASCII_ART=$(ON/OFF)`
_All options can be combined._


### Using the included Makefile
When using the Makefile to configure/build the project variables can be passed like this:
- for the number of rows: `make ROWS=$(NUMBER)`
- for the number of cols: `make COLS=$(NUMBER)`
- for ticks per turn: `make TICKS_PER_TURN=$(NUMBER)`
- for tick speed: `make TICK_SPEED=$(NUMBER)`
- for unicode: `make UNICODE=$(ON/OFF)`
- for ascii art: `make ASCII_ART=$(ON/OFF)`
_All options can be combined._

Due to the way the Makefile is structured, these may also be passed when using e.g. `make run`.
However please note, that in order for changes to take affect the build directory may have to be deleted.
This can be done using `make clean` or by manually deleting the directory.

    
## Features

- Light/dark mode toggle
- Live previews
- Fullscreen mode
- Cross platform


## Dependencies (TODO: CHECK CORRECT)
### Ubuntu/Debian
```bash
sudo apt install gcc-arm-none-eabi cmake qemu-system-arm
```
### Arch
```bash
# Using yay
yay -S gcc-arm-none-eabi-bin cmake qemu-system-arm
# Using paru
paru -S gcc-arm-none-eabi-bin cmake qemu-system-arm
# Using pacman
sudo pacman -S ?GCC? cmake qemu-system-arm
```
!TODO - gcc for arm gotta be in the main repo?
### Nix / NixOS
You can either use the provided [Flake](flake.nix), or add the following
packages:
```
gcc-arm-embedded
cmake
qemu
```
### macOS
```bash
brew install gcc-arm-embedded cmake qemu
```
### Windows
TODO/CHECK

## Authors

- [Simon Blum](https://www.github.com/DefinitelyNotSimon13)
- [Ben Oeckl](https://github.com/benoeckl)
- [Paul Stöckle](https://github.com/DosKobold)
- [Max Rodler](https://github.com/MaxRodler)

## Conventions
See [Conventions.md](Conventions.md)
</file>

<file path="src/presentation/print.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "presentation/print.h"

#include "hal/uart.h"
#include "presentation/style.h"
#include "util/conversion.h"


void print_clearConsole()
{
    print(CLEAR_SCREEN);
}

void print(const char *string)
{
    while(*string != '\0')
    {
        uart_writeByte(*string);
        string++;
    }
}

void print_int(const uint32_t number)
{
    char buf[11] = {0};
    int_to_str(number, buf, 11);
    print(buf);
}

void println(const char *string)
{
    print(string);
    uart_writeByte(LINE_SEPERATOR);
}

void println_int(const uint32_t number)
{
    print_int(number);
    uart_writeByte(LINE_SEPERATOR);
}

void print_styled(const char *string, const Style *style)
{
    printStyle(style);
    print(string);
    print(RESET);
}

void println_styled(const char *string, const Style *style)
{
    print_styled(string, style);
    uart_writeByte(LINE_SEPERATOR);
}

void printStyle(const Style *style)
{
    // assuming the if checks are cheaper then printing if NULL
    if(style->fg_color != NULL)
    {
        print(style->fg_color);
    }
    if(style->bg_color != NULL)
    {
        print(style->bg_color);
    }
    if(style->font_style != NULL)
    {
        print(style->font_style);
    }
}
</file>

<file path="include/logic/bot.h">
/**
 * @file bot.h
 *
 * @brief Contains function for random cell marking
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef BOT_H
#define BOT_H

#include "logic/game.h"
#include "presentation/field.h"

/**
 * @brief Mark some random cell
 *
 * @param [inout] cells 2D field of cells
 * @param [in] marked_by Which player should mark the cell
 *
 * @return Marked cell
 */
Cell *bot_markRandomCell(Cell cells[CELLS_PER_COL][CELLS_PER_ROW], Player marked_by);

#endif// BOT_H
</file>

<file path="include/logic/input.h">
/**
 * @file input.h
 *
 * @brief Contains the input handling of the game
 *
 * @see SRC
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef INPUT_H
#define INPUT_H

#include "def.h"
#include "logic/game.h"

/**
 * @brief Handle a input byte with current states
 *
 * @param[in] byte
 * @param[inout] game_state
 * @param[inout] cell_state
 *
 * @return True in case a field redraw is needed
 *
 */
bool input_handleByte(const uint8_t *byte, GameState *game_state, CellState *cell_state);

#endif// INPUT_H
</file>

<file path="include/presentation/ui.h">
/**
 * @file ui.h
 *
 * @brief Contains different functions for the presentation of the in-game
 *        user interface (everything besides the actual game field)
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef UI_H
#define UI_H

#include "logic/game.h"
#include "presentation/ascii_art.h"
#include "presentation/cell.h"
#include <stdint.h>

#define TURN_ROW 1 + HEADING_LINES
#define TIMER_ROW FIELD_HEIGHT + (FIELD_HEIGHT % 2) - 1 + HEADING_LINES

#ifdef ENABLE_UNICODE
#define FULL_PROGRESS_ELEMENT "█"
#define HALF_PROGRESS_ELEMENT "▆"
#define EMPTY_PROGRESS_ELEMENT "▁"

#else
#define FULL_PROGRESS_ELEMENT "-"
#define HALF_PROGRESS_ELEMENT "_"
#define EMPTY_PROGRESS_ELEMENT ""

#endif


/**
 * @brief Writes the timer text to the screen
 * @param [in] remaining_time
 */
void ui_displayTimer(uint16_t remaining_time, uint16_t total_time);

/**
 * @brief Updates the time on the screen
 * @param [in] remaining_time
 */
void ui_updateTimer(uint16_t remaining_time, uint16_t total_time);

/**
 * @brief Writes the turn text to the screen
 * @param [in] current_turn
 * @param [in] playerName
 */
void ui_displayTurn(uint8_t current_turn, Player player);

/**
 * @brief Updates the turn number on the screen
 * @param [in] current_turn
 * @param [in] playerName
 */
void ui_updateTurn(uint8_t current_turn, Player player);

void ui_printStartingPlayer(Player starting_player, Mode mode);

void ui_printHeading();

void ui_gameOver();

#endif// UI_H
</file>

<file path="src/logic/bot.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "logic/bot.h"

#include "hal/random.h"
#include "logic/game.h"

Cell *bot_markRandomCell(Cell cells[CELLS_PER_COL][CELLS_PER_ROW], const Player marked_by)
{
    for(;;)
    {
        const uint8_t col = rng_getRandomValue_waiting() % CELLS_PER_ROW;
        const uint8_t row = rng_getRandomValue_waiting() % CELLS_PER_COL;

        if(cells[row][col].marked_by == None)
        {
            cells[row][col].marked_by = marked_by;
            Cell *cell = &cells[row][col];
            /* cell_redraw(cell); */
            return cell;
        }
    }
}
</file>

<file path="include/logic/time.h">
/**
 * @file time.h
 *
 * @brief Contains time functions needed for the game
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef TIME_H
#define TIME_H

#include "logic/game.h"
#include <stdint.h>

/**
 * @brief Time information of the current game
 */
typedef struct
{
        bool is_running;
        volatile uint32_t ticks_total;
        volatile uint32_t ticks_turn;
} GameTimer;

extern GameTimer g_timer;//!< Global instance of the GameTimer

/**
 * @brief Initializes the timer
 */
void time_init();

/**
 * @brief Increments the ticks and can finish the round
 */
void time_onInterrupt();

/**
 * @brief Resets the ticks
 *
 * @param[inout] game_state Current state of the game
 */
void time_finishTurn(GameState *game_state);

/**
 * @brief Pause the timer
 */
void time_pause();

/**
 * @brief Resume the timer when paused
 */
void time_resume();

#endif// TIME_H
</file>

<file path="src/presentation/ui.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "presentation/ui.h"

#include "hal/uart.h"
#include "logic/time.h"
#include "presentation/ascii_art.h"
#include "presentation/cursor.h"
#include "presentation/menu.h"
#include "presentation/print.h"
#include "presentation/style.h"

void ui_displayTimer(const uint16_t remaining_time, const uint16_t total_time)
{
    cursor_moveTo(2, TIMER_ROW);
    print("");
    ui_updateTimer(remaining_time, total_time);

    cursor_moveTo(2, TIMER_ROW + 2);
    print_styled("Hint: Press \"?\" to see all controls!", &ITALIC_DIM);
}

void ui_updateTimer(const uint16_t remaining_time, const uint16_t total_time)
{
    cursor_moveTo(2, TIMER_ROW);
    print(ERASE_LINE_FROM_CURSOR);
    print(BOLD);


    static Style style;
    const uint8_t percent = ((float)remaining_time / (float)total_time) * 100;// NOLINT
    if(!g_timer.is_running)
    {
        style = (Style){.font_style = DIM};
    }
    else if(percent > 66)
    {
        style = (Style){.fg_color = FG_GREEN};
    }
    else if(percent > 33)
    {
        style = (Style){.fg_color = FG_YELLOW};
    }
    else
    {
        style = (Style){.fg_color = FG_RED};
    }

    for(uint16_t i = 0; i < total_time; i++)
    {
        if(i < remaining_time)
        {
            print_styled(FULL_PROGRESS_ELEMENT, &style);
        }
        else if(i == remaining_time)
        {
            print_styled(HALF_PROGRESS_ELEMENT, &style);
        }
        else
        {
            print_styled(EMPTY_PROGRESS_ELEMENT, &style);
        }
    }

    cursor_moveTo(2, TIMER_ROW + 1);
    if(!g_timer.is_running)
    {
        println_styled("Paused...", &ITALIC_DIM);
        return;
    }
    print(ERASE_LINE_FROM_CURSOR);
    uart_writeByte('\n');
}
void ui_displayTurn(const uint8_t current_turn, const Player player)
{
    cursor_moveTo(1, TURN_ROW);

    print_styled("Round", &DEFAULT_BOLD);
    cursor_moveTo(1 + 6 + 3, TURN_ROW);
    print_styled(" Waiting for ", &DEFAULT_ITALIC);
    ui_updateTurn(current_turn, player);
}

void ui_updateTurn(const uint8_t current_turn, const Player player)
{
    cursor_moveTo(1 + 6, TURN_ROW);
    print_int(current_turn);

    cursor_moveTo(1 + 6 + 3 + 13, TURN_ROW);
    if(player == Circle)
    {
        print(FG_MAGENTA);
        print_styled("Circle... ", &BOLD_CIRCLE);
    }
    else if(player == Cross)
    {
        print(FG_GREEN);
        print_styled("Cross...", &BOLD_CROSS);
    }
}

void ui_gameOver()
{
    cursor_moveTo(1, TURN_ROW);
    print(ERASE_LINE_FROM_CURSOR);
    print_styled("Game Over!", &DEFAULT_BOLD);

    cursor_moveTo(0, TIMER_ROW);
    print(ERASE_LINE_FROM_CURSOR);
}

void ui_printHeading()
{
    cursor_moveTo(0, 0);
    print_styled(HEADING, &HEADING_STYLE);
}

void ui_printStartingPlayer(Player starting_player, Mode mode)
{
    print_clearConsole();
    ui_printHeading();
    switch(starting_player)
    {
        case Cross:
            if(mode == PVE)
            {
                print_styled(PLAYER_STARTS, &DEFAULT_CROSS);
            }
            else
            {
                print_styled(CROSS_STARTS, &DEFAULT_CROSS);
            }
            break;
        case Circle:
            if(mode == PVE)
            {
                print_styled(COMPUTER_STARTS, &DEFAULT_CIRCLE);
            }
            else
            {
                print_styled(CIRCLE_STARTS, &DEFAULT_CIRCLE);
            }
            break;
        case None:
            print_styled(
                "Something went very wrong...",
                &(Style){.font_style = BOLD, .fg_color = FG_RED});
    }
    menu_anyKeyToContinue("Press any key to start the game...");
}
</file>

<file path="src/logic/time.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "logic/time.h"

#include "hal/timer.h"
#include "logic/game.h"
#include <stdint.h>

GameTimer g_timer = (GameTimer){
    .ticks_total = 0,
    .ticks_turn = 0,
    .is_running = true,
};

void time_init()
{
    timer_init_detailed(TIMER0, TICK_SPEED, TIMER_BIT_MODE_32);
    timer_captureCompareSet(TIMER0, CC0, 2000, true);
    timer_start(TIMER0);
}

void time_onInterrupt()
{
    g_timer.ticks_total++;
    g_timer.ticks_turn = (g_timer.ticks_turn + 1) % TICKS_PER_TURN;
    if(g_timer.ticks_turn == TICKS_PER_TURN - 1)
    {
        game_onTimeOut();
    }
}

void time_finishTurn(GameState *game_state)
{
    const uint32_t ticks = g_timer.ticks_turn;

    if(game_state->current_player == Cross)
    {
        game_state->cross_total_ticks += ticks;
    }
    else
    {
        game_state->circle_total_ticks += ticks;
    }

    g_timer.ticks_turn = 0;
}

void time_pause()
{
    timer_stop(TIMER0);
    g_timer.is_running = false;
}

void time_resume()
{
    timer_start(TIMER0);
    g_timer.is_running = true;
}
</file>

<file path="src/presentation/field.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "presentation/field.h"

#include "presentation/cell.h"
#include "presentation/cursor.h"
#include "presentation/print.h"

#include "config.h"

#include <stddef.h>
#include <stdint.h>

/**
 * @brief Print one row
 * @param [in] row String to print
 * @param [in] row_length Length of string
 *
 */
static void printRow(char **row, size_t row_length);

void field_redraw()
{
    const uint8_t row_length = CELLS_PER_ROW * g_cell_size.width + 1;
    char *divider[row_length];
    char *top_divider[row_length];
    char *bot_divider[row_length];
    char *non_divider[row_length];

    for(uint8_t i = 0; i < row_length; i++)
    {
        if(i == 0)
        {
            divider[i] = T_LEFT;
            top_divider[i] = CORNER_TOP_LEFT;
            bot_divider[i] = CORNER_BOT_LEFT;
            non_divider[i] = SIDE;
        }
        else if(i == row_length - 1)
        {
            divider[i] = T_RIGHT;
            top_divider[i] = CORNER_TOP_RIGHT;
            bot_divider[i] = CORNER_BOT_RIGHT;
            non_divider[i] = SIDE;
        }
        else if(i % g_cell_size.width == 0)
        {
            divider[i] = CROSS;
            top_divider[i] = T_TOP;
            bot_divider[i] = T_BOT;
            non_divider[i] = SIDE;
        }
        else
        {
            divider[i] = TOP_BOTTOM;
            top_divider[i] = TOP_BOTTOM;
            bot_divider[i] = TOP_BOTTOM;
            non_divider[i] = EMPTY;
        }
    }

    cursor_moveTo(FIELD_X_OFFSET, FIELD_Y_OFFSET);
    printRow(top_divider, row_length);

    uint8_t first = 0;
    for(uint8_t i = 0; i < CELLS_PER_COL; i++)
    {
        if(first == 0)
        {
            first = 1;
        }
        else
        {
            printRow(divider, row_length);
        }
        for(uint8_t j = 0; j < g_cell_size.height - 2; j++)
        {
            printRow(non_divider, row_length);
        }
    }
    printRow(bot_divider, row_length);
}


static void printRow(char **row, const size_t row_length)
{
    for(size_t i = 0; i < row_length; i++)
    {
        print(row[i]);
    }
    print("\n");
}
</file>

<file path="include/presentation/print.h">
/**
 * @file print.h
 *
 * @brief Contains several different high level functions for printing to UART
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef PRINT_H
#define PRINT_H

#include "presentation/style.h"
#include <stdint.h>

#define LINE_SEPERATOR '\n'

/**
 * @brief Clear the whole terminal
 */
void print_clearConsole();

/**
 * @brief Prints the given string
 * @param [in] string
 */
void print(const char *string);

/**
 * @brief Prints the given integer
 * @param [in] number
 */
void print_int(const uint32_t number);

/**
 * @brief Prints the given string with a new line character
 * @param [in] string
 */
void println(const char *string);

/**
 * @brief Prints the given integer with a new line character
 * @param [in] number
 */
void println_int(const uint32_t number);

/**
 * @brief Prints the given string with a predefined style
 * @param [in] string
 * @param [in] style
 */
void print_styled(const char *string, const Style *style);

/**
 * @brief Prints the given string with a predefined style and a new line character
 * @param [in] string
 * @param [in] style
 */
void println_styled(const char *string, const Style *style);

void printStyle(const Style *style);

void print_hardFault();

#endif// PRINT_H
</file>

<file path="src/logic/input.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "logic/input.h"

#include "config.h"
#include "logic/bot.h"
#include "logic/game.h"
#include "logic/time.h"
#include "logic/winning.h"
#include "presentation/cell.h"
#include "presentation/menu.h"
#include "presentation/style.h"
#include "presentation/ui.h"
#include "util/input_buf.h"

static void handleEscapeSequence(CellState *cell_state);

static void handleSetMark(GameState *game_state, CellState *cell_state);
static void openControls();
static bool handlePauseResume(CellState *cell_state);


bool input_handleByte(const uint8_t *byte, GameState *game_state, CellState *cell_state)
{
    switch(*byte)
    {
        case '\e':
            if(!g_timer.is_running)
                break;
            handleEscapeSequence(cell_state);
            break;
        case '\r':
        case ' ':
            handleSetMark(game_state, cell_state);
            break;
        case '?':
            openControls();
            return true;
        case 'p':
        case 'P':
            return handlePauseResume(cell_state);
        case '+':
            cell_increaseSize();
            return true;
        case '-':
            cell_decreaseSize();
            return true;
        default:;
    }
    return false;
}

static void handleEscapeSequence(CellState *cell_state)
{
    uint8_t input = '\0';
    if(!input_getNext(&g_input_buf, &input) || input != '[')
    {
        return;
    }

    if(!input_getNext(&g_input_buf, &input))
    {
        return;
    }

    const int col = cell_state->selected->col;
    const int row = cell_state->selected->row;

    switch(input)
    {
        case 'A':
            if(row - 1 >= 0)
            {
                cell_state->selected = &cell_state->all[row - 1][col];
            }
            break;
        case 'B':
            if(row + 1 < CELLS_PER_COL)
            {
                cell_state->selected = &cell_state->all[row + 1][col];
            }
            break;
        case 'C':
            if(col + 1 < CELLS_PER_ROW)
            {
                cell_state->selected = &cell_state->all[row][col + 1];
            }
            break;
        case 'D':
            if(col - 1 >= 0)
            {
                cell_state->selected = &cell_state->all[row][col - 1];
            }
            break;
        default:;
    }
}

static void handleSetMark(GameState *game_state, CellState *cell_state)
{
    if(cell_state->selected->marked_by != None || !g_timer.is_running)
    {
        return;
    }

    if(game_state->mode == PVE)
    {
        cell_state->selected->marked_by = Cross;
        cell_state->last_cross = cell_state->selected;


        // Avoid a bug where the bot unfairly wins, if the player started
        // and both the player and the bot could win in the same round
        bool hasWinner = false;
        if(game_state->fields_marked >= (min(CELLS_PER_COL, CELLS_PER_ROW)))
        {
            static Cell winningCells[max(CELLS_PER_COL, CELLS_PER_ROW)];
            if(winning_checkForWinner(cell_state, (Cell **)&winningCells) != None)
            {
                hasWinner = true;
            }
        }

        if(!hasWinner)
        {
            if(game_state->fields_marked + 1 < CELLS_PER_ROW * CELLS_PER_COL)
            {
                cell_state->last_circle = bot_markRandomCell(cell_state->all, Circle);
            }
            else
            {
                game_state->fields_marked--;
            }
        }

        cell_redraw(cell_state->last_circle);
    }
    else
    {
        cell_state->selected->marked_by = game_state->current_player;
        if(game_state->current_player == Circle)
        {
            cell_state->last_circle = cell_state->selected;
            cell_select(cell_state->last_circle);
        }
        else
        {
            cell_state->last_cross = cell_state->selected;
            cell_select(cell_state->last_cross);
        }
    }

    game_endTurn();
    ui_updateTurn(game_state->round, game_state->current_player);
}

static void openControls()
{
    if(g_timer.is_running)
    {
        time_pause();
        menu_showControls("\nPress any key to return to the match...");
        time_resume();
    }
    else
    {
        menu_showControls("\nPress any key to return to the match...");
    }
}

static bool handlePauseResume(CellState *cell_state)
{
    if(g_timer.is_running)
    {
        time_pause();
        cell_redrawAll(cell_state->all, HIDDEN);
        return false;
    }
    time_resume();
    return true;
}
</file>

<file path="src/main.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "def.h"
#include "hal/nvic.h"
#include "hal/random.h"
#include "hal/uart.h"
#include "presentation/print.h"
#include "presentation/style.h"
#include "presentation/ui.h"
#include "util/input_buf.h"

#include "hal/system.h"
#include "presentation/menu.h"

int main(void)
{
    uart_init(true);
    input_init(&g_input_buf);

    if(menu_showMainMenu())
    {
        print_clearConsole();
        ui_printHeading();
        println_styled("The game will be reset...", &DEFAULT_BOLD);
        println_styled("Press any key to continue...", &ITALIC_DIM);

        static uint8_t input;
        while(!input_getNext(&g_input_buf, &input))
        {
            __WFI();
        }
        system_softReset();
    }
    else
    {
        print_clearConsole();
        ui_printHeading();
        println_styled("Thanks for playing!", &DEFAULT_BOLD);
        println_styled(
            "Hint: If you are using the qemu emulator, you can exit using \"<CTR> + a,  x\".\n",
            &ITALIC_DIM);
        print(SHOW_CURSOR);
        system_offMode();
    }
}
</file>

<file path="include/presentation/cell.h">
/**
 * @file cell.h
 *
 * @brief Contains functions for changing the presentation of cells
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef CELL_H
#define CELL_H

#include "logic/game.h"
#include "presentation/field.h"

#include <stdint.h>

#define NUM_OF_SIZES 3
#define INITIAL_INDEX 1
#define INITIAL_WIDTH 8
#define INITIAL_HEIGHT 5
#define INITIAL_SIZE Medium
#define FIELD_HEIGHT (CELLS_PER_COL * g_cell_size.height)

typedef enum
{
    Small = 0,
    Medium = 1,
    Large = 2,
} Size;


typedef struct
{
        Size size;
        uint8_t width;
        uint8_t height;
} CellSize;

extern CellSize g_cell_size;


/**
 * @brief Redraws the given cell
 * @param [in] cell
 * Cell to redraw
 */
void cell_redraw(const Cell *cell);

void cell_redraw_withModifier(const Cell *cell, const char *modifier);

/**
 * @brief Redraws the whole field
 * @param [in] all_cells
 * 2D field of cells
 */
void cell_redrawAll(Cell all_cells[][CELLS_PER_ROW], const char *modifier);

/**
 * @brief Selects the given cell
 * @param [in] cell
 * Cell to select
 */
void cell_select(const Cell *cell);

/**
 * @brief Increases the field size
 */
void cell_increaseSize();

/**
 * @brief Decreases the field size
 */
void cell_decreaseSize();


#endif// CELL_H
</file>

<file path="src/presentation/cell.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "presentation/cell.h"

#include "logic/game.h"
#include "presentation/cursor.h"
#include "presentation/field.h"
#include "presentation/print.h"
#include "presentation/style.h"

CellSize g_cell_size = (CellSize){
    .size = INITIAL_SIZE,
    .height = INITIAL_HEIGHT,
    .width = INITIAL_WIDTH,
};

/**
 * @brief Redraw one cell
 * @param [in] row
 * Y-Position
 * @param [in] col
 * X-Position
 * @param [in] modifier
 * @param [in] marked_by
 * Player to mark by
 */
static void redrawCell(uint8_t row, uint8_t col, const char *modifier, Player marked_by);

static char *SMALL_X[1][3] = {{" ", "X", " "}};

static char *SMALL_O[1][3] = {{" ", "O", " "}};

static char *MEDIUM_X[3][7] = {
    {" ", " ", DIAGONAL_BW, " ", DIAGONAL_FW, " ", " "},
    {" ", " ", " ", DIAGONAL_MID, " ", " ", " "},
    {" ", " ", DIAGONAL_FW, " ", DIAGONAL_BW, " ", " "},
};

static char *MEDIUM_O[3][7] = {
    {" ", CORNER_TOP_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_TOP_RIGHT, " "},
    {" ", SIDE, " ", " ", " ", SIDE, " "},
    {" ", CORNER_BOT_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_BOT_RIGHT, " "},
};

static char *LARGE_X[5][9] = {
    {" ", " ", DIAGONAL_BW, " ", " ", " ", DIAGONAL_FW, " ", " "},
    {" ", " ", " ", DIAGONAL_BW, " ", DIAGONAL_FW, " ", " ", " "},
    {" ", " ", " ", " ", DIAGONAL_MID, " ", " ", " ", " "},
    {" ", " ", " ", DIAGONAL_FW, " ", DIAGONAL_BW, " ", " ", " "},
    {" ", " ", DIAGONAL_FW, " ", " ", " ", DIAGONAL_BW, " ", " "},
};

static char *LARGE_O[5][9] = {
    {" ",
     CORNER_TOP_LEFT,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     CORNER_TOP_RIGHT,
     " "},
    {" ", SIDE, " ", " ", " ", " ", " ", SIDE, " "},
    {" ", SIDE, " ", " ", " ", " ", " ", SIDE, " "},
    {" ", SIDE, " ", " ", " ", " ", " ", SIDE, " "},
    {" ",
     CORNER_BOT_LEFT,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     TOP_BOTTOM,
     CORNER_BOT_RIGHT,
     " "},
};

static CellSize VALID_SIZES[] = {
    {.width = 4, .height = 3},
    {.width = 8, .height = 5},
    {.width = 10, .height = 7},
};

void cell_redraw(const Cell *cell)
{
    redrawCell(cell->row, cell->col, "", cell->marked_by);
}

void cell_redraw_withModifier(const Cell *cell, const char *modifier)
{
    redrawCell(cell->row, cell->col, modifier, cell->marked_by);
}

void cell_select(const Cell *cell)
{
    static uint16_t prev_top = 0;
    static uint16_t prev_left = 0;
    static Player prev_mark;
    static bool has_prev = false;

    // with +1 to account for top/left divider
    // with -2 account for dividers
    if(has_prev)
    {
        redrawCell(prev_top, prev_left, 0, prev_mark);
    }
    else
    {
        has_prev = true;
    }

    redrawCell(cell->row, cell->col, INVERSE, cell->marked_by);

    prev_top = cell->row;
    prev_left = cell->col;
    prev_mark = cell->marked_by;
}

void cell_redrawAll(Cell all_cells[][CELLS_PER_ROW], const char *modifier)
{
    const Cell *cell = NULL;
    for(uint8_t row = 0; row < CELLS_PER_COL; row++)
    {
        for(uint8_t col = 0; col < CELLS_PER_ROW; col++)
        {
            cell = &all_cells[row][col];
            redrawCell(cell->row, cell->col, modifier, cell->marked_by);
        }
    }
}

void cell_increaseSize()
{
    if(g_cell_size.size + 1 >= Large + 1)
    {
        return;
    }
    g_cell_size.size++;
    g_cell_size.width = VALID_SIZES[g_cell_size.size].width;
    g_cell_size.height = VALID_SIZES[g_cell_size.size].height;
}
void cell_decreaseSize()
{
    if(g_cell_size.size - 1 < Small)
    {
        return;
    }
    g_cell_size.size--;
    g_cell_size.width = VALID_SIZES[g_cell_size.size].width;
    g_cell_size.height = VALID_SIZES[g_cell_size.size].height;
}

static void
redrawCell(const uint8_t row, const uint8_t col, const char *modifier, const Player marked_by)
{
    const uint8_t top = row * (g_cell_size.height - 1) + 1;
    const uint8_t left = col * g_cell_size.width + 1;
    const uint8_t bot = top + (g_cell_size.height - 2);
    const uint8_t right = left + (g_cell_size.width - 2);

    for(uint8_t i = top; i < bot; i++)
    {
        cursor_moveTo(left + FIELD_X_OFFSET, i + FIELD_Y_OFFSET);

        print(modifier);
        for(uint8_t j = 0; j < g_cell_size.width - 1; j++)
        {
            switch(marked_by)
            {
                case Cross:
                    printStyle(&DEFAULT_CROSS);
                    print(modifier);
                    switch(g_cell_size.size)
                    {
                        case Small:
                            print(SMALL_X[i - top][j]);
                            break;
                        case Medium:
                            print(MEDIUM_X[i - top][j]);
                            break;
                        case Large:
                            print(LARGE_X[i - top][j]);
                            break;
                    }
                    break;
                case Circle:
                    printStyle(&DEFAULT_CIRCLE);
                    print(modifier);
                    switch(g_cell_size.size)
                    {
                        case Small:
                            print(SMALL_O[i - top][j]);
                            break;
                        case Medium:
                            print(MEDIUM_O[i - top][j]);
                            break;
                        case Large:
                            print(LARGE_O[i - top][j]);
                            break;
                    }
                    break;
                case None:
                    print(modifier);
                    print(" ");
                    break;
            }
        }


        cursor_moveTo(right + FIELD_X_OFFSET, i + FIELD_Y_OFFSET);
        print(RESET);
    }
}
</file>

<file path="include/presentation/field.h">
/**
 * @file field.h
 *
 * @brief Contains constants and one function to draw the whole field
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef FIELD_H
#define FIELD_H

#include "config.h"
#include "presentation/ascii_art.h"
#include <stddef.h>

#define FIELD_X_OFFSET 1
#define FIELD_Y_OFFSET 2 + HEADING_LINES


#ifdef ENABLE_UNICODE
#define CORNER_TOP_LEFT "╭"
#define CORNER_BOT_LEFT "╰"
#define CORNER_TOP_RIGHT "╮"
#define CORNER_BOT_RIGHT "╯"

#define T_LEFT "├"
#define T_RIGHT "┤"
#define T_TOP "┬"
#define T_BOT "┴"

#define CROSS "┼"

#define SIDE "│"
#define TOP_BOTTOM "─"
#define EMPTY " "

#define DIAGONAL_FW "╱"
#define DIAGONAL_BW "╲"
#define DIAGONAL_MID "╳"
#else
#define CORNER_TOP_LEFT "+"
#define CORNER_BOT_LEFT "+"
#define CORNER_TOP_RIGHT "+"
#define CORNER_BOT_RIGHT "+"

#define T_LEFT "+"
#define T_RIGHT "+"
#define T_TOP "+"
#define T_BOT "+"

#define CROSS "+"

#define SIDE "|"
#define TOP_BOTTOM "-"
#define EMPTY " "

#define DIAGONAL_FW "/"
#define DIAGONAL_BW "\\"
#define DIAGONAL_MID "X"
#endif

/**
 * @brief Redraw the whole 2D field
 **/
void field_redraw();


#endif// FIELD_H
</file>

<file path="include/logic/game.h">
/**
 * @file game.h
 *
 * @brief Contains the game logic
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
#ifndef GAME_H
#define GAME_H

#include "presentation/field.h"
#include "util/input_buf.h"

#include <stdint.h>

#define REMAINING_TIME (TICKS_PER_TURN - g_timer.ticks_turn)
#define FIRST_ROUND 1

/**
 * @brief Possible game modes
 *
 * The game can be played in PVE or  PVP mode
 **/
typedef enum
{
    PVE,//!< Player vs Computer
    PVP,//!< Player vs Player
} Mode;

/**
 * @brief Enum describing a player
 */
typedef enum
{
    Circle = 0,
    Cross = 1,
    None = 2,
} Player;

/**
 * @brief One cell on the field
 *
 * Contains coordinates and information by whom it is marked
 */
typedef struct
{
        uint16_t col;
        uint16_t row;
        Player marked_by;
} Cell;

/**
 * @brief The current game state
 *
 * Contains important game information and several metrics
 */
typedef struct
{
        Player winner;//!< None if tie or game not over
        Mode mode;
        volatile uint8_t round;
        volatile uint8_t fields_marked;
        Player current_player;

        // Relevant for summary
        uint32_t total_ticks;
        uint32_t average_ticks;

        uint32_t cross_total_ticks;
        uint32_t cross_average_ticks;

        uint32_t circle_total_ticks;
        uint32_t circle_average_ticks;
} GameState;

/**
 * @brief The current state of the cells
 */
typedef struct
{
        Cell all[CELLS_PER_COL][CELLS_PER_ROW];//!< All cells of the match
        Cell *selected;                        //!< Pointer to the currently selected cell
        Cell *last_cross;                      //!< Pointer to the cell last marked by cross
        Cell *last_circle;                     //!< Pointer to the last cell marked by circle
} CellState;


/**
 * @brief Start the main game
 *
 * @param[in] mode Which mode the game should be played in.
 */
void game_run(const Mode mode);

/**
 * @brief Automaticly end a turn in case the turn time is over
 */
void game_onTimeOut();

/**
 * @brief Finish the current turn
 */
void game_endTurn();


#endif// GAME_H
</file>

<file path="src/logic/game.c">
/**
 * @file
 *
 * @author
 *
 * @date
 *
 * @brief
 *
 * @see
 *
 * @copyright
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 */
#include "logic/game.h"

#include "config.h"
#include "hal/nvic.h"
#include "hal/random.h"
#include "hal/timer.h"
#include "logic/bot.h"
#include "logic/input.h"
#include "logic/time.h"
#include "logic/winning.h"
#include "presentation/cell.h"
#include "presentation/field.h"
#include "presentation/menu.h"
#include "presentation/print.h"
#include "presentation/style.h"
#include "presentation/ui.h"
#include "util/input_buf.h"
#include "util/math.h"
#include <stdint.h>


volatile bool force_ui_update = false;
static GameState game_state;
static CellState cell_state;

/**
 * @brief Initializes several things at the game start
 */
static void init(Mode mode);

/**
 * @brief Handles the presentation update in case of a automatic round
 */
static void handleForcedMoveUpdate();

/**
 * @brief Refreshes the whole UI
 */
static void redrawField();


static void calculateSummary();

static Player startingPlayer();


void game_run(const Mode mode)
{
    init(mode);

    Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)] = {0};// NOLINT
    uint8_t input;

    if(game_state.mode == PVE && game_state.current_player == Circle)
    {
        cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);
        game_state.current_player = Cross;
        game_state.fields_marked++;

        cell_select(cell_state.last_circle);
        cell_select(&cell_state.all[0][0]);
        ui_updateTurn(game_state.round, game_state.current_player);
    }

    while(true)
    {
        while(!input_getNext(&g_input_buf, &input))
        {
            // If true, Move was forced due to inactivity
            if(force_ui_update)
            {
                handleForcedMoveUpdate();
                force_ui_update = false;
                input = 0;
                break;
            }
            ui_updateTimer(REMAINING_TIME, TICKS_PER_TURN);
            __WFI();
        }

        const bool should_redraw_field = input_handleByte(&input, &game_state, &cell_state);

        game_state.winner = winning_checkForWinner(&cell_state, winner_cells);

        if(g_timer.is_running)
        {
            cell_select(cell_state.selected);
        }

        if(game_state.winner != None || input == 'q' || input == 'Q'
           || game_state.fields_marked >= CELLS_PER_COL * CELLS_PER_ROW)
        {
            timer_stop(TIMER0);
            break;
        }

        if(should_redraw_field)
        {
            redrawField();
        }
    }

    cell_redrawAll(cell_state.all, "\e[0;2m");
    for(uint8_t i = 0; i < (max(CELLS_PER_COL, CELLS_PER_ROW)) && winner_cells[i] != NULL;
        i++)// NOLINT
    {
        cell_redraw_withModifier(winner_cells[i], BOLD);
    }

    calculateSummary();
    menu_showGameOver(&game_state);
}

void game_onTimeOut()
{
    force_ui_update = true;
    if(game_state.mode == PVE)
    {
        cell_state.last_cross = bot_markRandomCell(cell_state.all, Cross);
        cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);
    }
    else if(game_state.current_player == Cross)
    {
        cell_state.last_cross = bot_markRandomCell(cell_state.all, Cross);
    }
    else if(game_state.current_player == Circle)
    {
        cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);
    }

    game_endTurn();
}

void game_endTurn()
{
    if(game_state.mode == PVE)
    {
        time_finishTurn(&game_state);
        game_state.round++;
        game_state.fields_marked += 2;
    }
    else
    {
        time_finishTurn(&game_state);
        if(game_state.current_player == Cross)
        {
            game_state.current_player = Circle;
            cell_state.selected =
                cell_state.last_circle != NULL ? cell_state.last_circle : cell_state.selected;
            game_state.fields_marked++;
        }
        else
        {
            game_state.current_player = Cross;
            cell_state.selected =
                cell_state.last_cross != NULL ? cell_state.last_cross : cell_state.selected;
            game_state.round++;
            game_state.fields_marked++;
        }
    }
}

static void init(const Mode mode)
{
    // When starting a second game in a session an artifact bug occurred,
    // reelecting here fixes this.
    if(cell_state.selected != NULL)
    {
        cell_state.selected->marked_by = None;
        cell_select(cell_state.selected);
    }

    input_init(&g_input_buf);
    rng_init();

    game_state = (GameState){
        .winner = None,
        .mode = mode,
        .round = FIRST_ROUND,
        .current_player = startingPlayer(),
    };


    cell_state = (CellState){};

    print(HIDE_CURSOR);


    for(int y = 0; y < CELLS_PER_COL; y++)
    {
        for(int x = 0; x < CELLS_PER_ROW; x++)
        {
            cell_state.all[y][x] = (Cell){
                .col = x,
                .row = y,
                .marked_by = None,
            };
        }
    }

    cell_state.selected = &cell_state.all[0][0];

    ui_printStartingPlayer(game_state.current_player, mode);

    print_clearConsole();
    time_init();
    redrawField();
}


static void calculateSummary()
{
    game_state.total_ticks = g_timer.ticks_total;

    if(game_state.mode == PVE)
    {
        game_state.average_ticks = g_timer.ticks_total / 2 / game_state.round;
    }
    else
    {
        game_state.average_ticks = g_timer.ticks_total / game_state.round;
    }

    // the loser made one turn less
    uint8_t cross_rounds = game_state.round;
    uint8_t circle_rounds = game_state.round;
    if(game_state.winner == Cross)
    {
        circle_rounds--;
    }
    else if(game_state.winner == Circle)
    {
        cross_rounds--;
    }

    game_state.cross_average_ticks = game_state.cross_total_ticks / cross_rounds;
    game_state.circle_average_ticks = game_state.circle_total_ticks / circle_rounds;
}

static void redrawField()
{
    print_clearConsole();
    ui_printHeading();
    ui_displayTurn(game_state.round, game_state.current_player);
    ui_displayTimer(REMAINING_TIME, TICKS_PER_TURN);
    field_redraw();
    cell_redrawAll(cell_state.all, "");
    cell_select(cell_state.selected);
}

static void handleForcedMoveUpdate()
{
    cell_select(cell_state.last_cross);
    cell_select(cell_state.last_circle);
    ui_updateTurn(game_state.round, game_state.current_player);

    if(game_state.mode == PVE)
    {
        cell_state.selected = cell_state.last_circle;
    }
    else
    {
        // inverted to select from previous turn
        cell_state.selected =
            game_state.current_player == Circle ? cell_state.last_circle : cell_state.last_cross;
        if(cell_state.selected == NULL)
        {
            cell_state.selected = &cell_state.all[0][0];
        }
    }
}

static Player startingPlayer()
{
    uint8_t rand = rng_getRandomValue_waiting();

    // 0 is Cross, 1 is Circle - mod 2 returns 0 or 1
    return (Player)(rand % 2);
}
</file>

</files>
