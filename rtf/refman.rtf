{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment TikTakToe }TikTakToe}
{\comment Generated by doxygen 1.12.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TikTakToe}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'F0\'9F\'8E\'AE TikTakToe\par \pard\plain 
{\tc\tcl1 \v \'F0\'9F\'8E\'AE TikTakToe}
{\xe \v \'F0\'9F\'8E\'AE TikTakToe}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\par
{\f2 }    \par
A TikTakToe game written for the {\f2 nRF-51}  microcontroller with an {\f2 arm-cortex-m0}  CPU.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Remarks\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
We recommend viewing this and any other markdown file using our {\f2 documentation page} which provides improved formatting!\par
}}\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'E2\'9C\'A8 Features
\par}
{\tc\tcl2 \v \'E2\'9C\'A8 Features}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
\'F0\'9F\'8E\'AE {\b PVP and PVE modes} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
\'F0\'9F\'96\'A5\'EF\'B8\'8F {\b Cross-Platform Compatibility} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
\'E2\'9A\'99\'EF\'B8\'8F {\b Highly Customizable} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
\'F0\'9F\'90\'B3 {\b Docker Support for 0 dependency execution} \par}
\par
\par}
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'9A Documentation
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'9A Documentation}
Check out our {\f2 documentation} to learn more about the code and for an improved version of this file!\par}
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'9B\'A0\'EF\'B8\'8F Build and Run
\par}
{\tc\tcl2 \v \'F0\'9F\'9B\'A0\'EF\'B8\'8F Build and Run}
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'96\'A5\'EF\'B8\'8F Using CMake and qemu
\par}
{\tc\tcl3 \v \'F0\'9F\'96\'A5\'EF\'B8\'8F Using CMake and qemu}
To build the project using CMake and qemu some dependencies, which can be found under dependencies are required.\par
\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  \'F0\'9F\'90\'A7 Linux } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid # 1. Configure the cmake project\par
cmake --preset arm-cortex-m0-unix\par
\par
# 2. Build the project\par
cmake --build --preset arm-cortex-m0-unix\par
\par
# 3. Run the project\par
qemu-system-arm -M microbit -device loader,file=build-cortex-m0/TikTakToe.elf -nographic -s -serial mon:stdio\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  \'F0\'9F\'AA\'9F Windows } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid # 1. Configure the cmake project\par
cmake --preset arm-cortex-m0-mingw\par
\par
# 2. Build the project\par
cmake --build --preset arm-cortex-m0-mingw\par
\par
# 3. Run the project\par
qemu-system-arm -M microbit -device loader,file=build-cortex-m0/TikTakToe.elf -nographic -s -serial mon:stdio\par
}
\par
{\b Due to a problem with the {\f2 TIMER}  device on Windows, functionality regarding turn time limits are disabled when building with the MinGW generator!} \par}
\par
\par
\par}
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'9B\'A0\'EF\'B8\'8F Using the provided Makefile
\par}
{\tc\tcl3 \v \'F0\'9F\'9B\'A0\'EF\'B8\'8F Using the provided Makefile}
\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  \'F0\'9F\'90\'A7 Linux } \par
The provided Makefile can be used to easily build and run the project using a single command.\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid # Configure, build and run the project\par
make run\par
\par
# Configure and build the project\par
make \par
\par
# Remove the build directory\par
make clean\par
\par
# Generate doxygen documentation (requires doxygen installed)\par
make generate_documentation\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  \'F0\'9F\'AA\'9F Windows } \par
The provided Makefile was created with Linux in mind, while it may be possible to use it on Windows with small modifications, we recomend using CMake directly!\par}
\par
\par
\par}
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'90\'B3 Using Docker
\par}
{\tc\tcl3 \v \'F0\'9F\'90\'B3 Using Docker}
Docker can be used to build and run the application without the need for external dependencies. For this you have to options:\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'E2\'98\'81\'EF\'B8\'8F Use Dockerhub
\par}
{\tc\tcl4 \v \'E2\'98\'81\'EF\'B8\'8F Use Dockerhub}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid # Using DockerHub\par
docker run -it definitelynotsimon13/tiktaktoe:latest\par
# Using GitHub Container Registry\par
docker run -it ghcr.io/softwareengineeringone/tiktaktoe:latest\par
}
\par}
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'F0\'9F\'8F\'97\'EF\'B8\'8F Build locally
\par}
{\tc\tcl4 \v \'F0\'9F\'8F\'97\'EF\'B8\'8F Build locally}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid docker build -t [TAGNAME] .\par
docker run -it [TAGNAME]\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Important\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
In either case the {\f2 -it}  flags are required to properly capture input from stdin!\par
}}\par}
\par}
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'F0\'9F\'8D\'8E MacOS
\par}
{\tc\tcl3 \v \'F0\'9F\'8D\'8E MacOS}
We are currently unable to test the game under MacOS. Since it's unix based, it's assumed that, provided all dependencies are available, you can proceed as described in the Linux sections.\par
However no guarantees regarding functionality or possible bugs can be made.\par}
\par}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'E2\'9A\'99\'EF\'B8\'8F Configuration
\par}
{\tc\tcl2 \v \'E2\'9A\'99\'EF\'B8\'8F Configuration}
The project has a few options that can be changed before compilation.\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Number of rows (default is 4)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Number of columns (default is 4)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Ticks per turn (default is 20)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Tick speed (default is 12, lower is faster)\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Unicode support (default is "ON")\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
ASCII Art (default is "ON", may look broken on small screens)\par}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Attention\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
No restrictions have been set on any of the configurations. Beware that extrem deviation from the default values, may result in a degraded playing experience\par
}}These can be set by:\par
\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Using CMake } \par
When configuring the project the default command {\f2 cmake --preset arm-cortex-m0-\{unix/mingw\}}  can be appended by:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for the number of rows: {\f2 [...] -DCELLS_PER_COL=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for the number of cols: {\f2 [...] -DCELLS_PER_ROW=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for ticks per turn: {\f2 [...] -DTICKS_PER_TURN=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for tick speed: {\f2 [...] -DTICK_SPEED=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for unicode: {\f2 [...] -DENABLE_UNICODE=$(ON/OFF)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for ascii art: {\f2 [...] -DENABLE_ASCII_ART=$(ON/OFF)} \par}
{\i All options can be combined.} \pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Using the Makefile } \par
When using the Makefile to configure/build the project variables can be passed like this:{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for the number of rows: {\f2 make ROWS=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for the number of cols: {\f2 make COLS=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for ticks per turn: {\f2 make TICKS_PER_TURN=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for tick speed: {\f2 make TICK_SPEED=$(NUMBER)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for unicode: {\f2 make UNICODE=$(ON/OFF)} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
for ascii art: {\f2 make ASCII_ART=$(ON/OFF)} \par}
{\i All options can be combined.} \par
Due to the way the Makefile is structured, these may also be passed when using e.g. {\f2 make run} . However please note, that in order for changes to take affect the build directory may have to be deleted. This can be done using {\f2 make clean}  or by manually deleting the directory.\par}
\par
\par
\par}
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'A6 Dependencies
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'A6 Dependencies}
\par
{
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Ubuntu/Debian } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid sudo apt install gcc-arm-none-eabi cmake qemu-system-arm\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Nix / NixOS } \par
You can either use the provided Flake, or add the following packages:\par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid gcc-arm-embedded\par
cmake\par
qemu\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Arch } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid sudo pacman -S arm-none-eabi-gcc cmake qemu-system-arm\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  MacOS } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid brew install gcc-arm-embedded cmake qemu\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Windows } {
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 CMake} {
\par
\pard\plain \s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid # Using Winget\par
winget install CMake.CMake\par
\par
# Using Chocolatey\par
choco install cmake --pre \par
\par
# Or manually using the link above\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
MinGW Makefiles (we recommend using MSYS2, but other prebuilt options are available){
\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab Install {\f2 MSYS2}\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
2.\tab Open {\f2 MSYS2 UCRT64}  shell\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
3.\tab Install Make {\f2 pacman -S mingw-w64-ucrt-x86_64-make} \par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
4.\tab Ensure {\f2 C:\\msys64\\ucrt64\\bin}  is added to {\f2 PATH} {
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl3\ls1 \li0\ri0\lin0\rin0\fi-360\tx1440\li1440\ri0\lin1440\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\i Directory may differ based on your choice during installation} \par}
}
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Qemu}{
\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab Install {\f2 MSYS2}\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
2.\tab Open {\f2 MSYS2 UCRT64}  shell\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
3.\tab Install Make {\f2 pacman -S mingw-w64-ucrt-x86_64-qemu} \par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
4.\tab Ensure {\f2 C:\\msys64\\ucrt64\\bin}  is added to {\f2 PATH} {
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl3\ls1 \li0\ri0\lin0\rin0\fi-360\tx1440\li1440\ri0\lin1440\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\i Directory may differ based on your choice during installation} \par}
}
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 GNU Toolchain for arm-eabi}{
\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
1.\tab Install from link above\par
\pard\plain \s142\fi-360\li1080\widctlpar\fs20\cgrid 
2.\tab Ensure installation location is added to {\f2 PATH} \par}
}
}
\par
\par
\par}
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'8F\'97\'EF\'B8\'8F Architecture
\par}
{\tc\tcl2 \v \'F0\'9F\'8F\'97\'EF\'B8\'8F Architecture}
To learn more about the the architecture we used to create this game check out {\b Architecture.md}!\par}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'9C Conventions
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'9C Conventions}
If you want to know about the coding convection we used when creating code check out {\b Conventions.md}!\par}
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'91\'A5 Authors
\par}
{\tc\tcl2 \v \'F0\'9F\'91\'A5 Authors}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Simon Blum}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Ben Oeckl}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Paul St\'F6ckle}\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Max Rodler}\par}
\par
\par}
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'99\'8F Acknowledgements
\par}
{\tc\tcl2 \v \'F0\'9F\'99\'8F Acknowledgements}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 arm-cortex-m0-cmake-start} - Base template used for the project \par}
\par
\par}
}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'F0\'9F\'8F\'97\'EF\'B8\'8F Architecture\par \pard\plain 
{\tc\tcl1 \v \'F0\'9F\'8F\'97\'EF\'B8\'8F Architecture}
{\xe \v \'F0\'9F\'8F\'97\'EF\'B8\'8F Architecture}
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
\par
\par
This project is an embedded application, designed to run on an {\f2 nRF51}  microcontroller with an {\f2 arm-cortex-m0}  CPU. The architecture is seperated into three main layers; the hardware abstraction layer, the logic layer and the presentation layer. Additionally modules for the entry process and utility functions exist. This encapsulation allows for a flexible design.\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'9A\'AA Entry Module
\par}
{\tc\tcl2 \v \'F0\'9F\'9A\'AA Entry Module}
{\i files: {\b entry/entry.S}, entry/linker_script.ls} \par
This module is responsible for the startup process of the microcontroller. Here important elements, such as the entry point, interrupt vector table and memory regions are defined and actions such as copying data from ROM to RAM are performed.\par}
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'9F Hardware Abstraction Layer
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'9F Hardware Abstraction Layer}
{\i files: include/hal/*.h, src/hal/*.c} \par
The hardware abstraction layer, short hal, abstracts low level operations such as register access and encapsulates these operations, allowing the layers above to refrain from interacting with any of the peripherals directly.\par}
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'A7\'A9 Logic Layer
\par}
{\tc\tcl2 \v \'F0\'9F\'A7\'A9 Logic Layer}
{\i files: include/logic/*.h, src/logic/*.c} \par
Within this layer, the game logic itself resides. Here you can find the main game loop, the timer and the game state.\par}
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'96\'A5\'EF\'B8\'8F Presentation Layer
\par}
{\tc\tcl2 \v \'F0\'9F\'96\'A5\'EF\'B8\'8F Presentation Layer}
{\i files: include/presentation/*.h, src/presentation/*.c} \par
This layer contains everything used to display a pretty output to the user. Menus, ui and styling can all be found here.\par
The seperation from the logic layer allows for flexible configuration, such as changing field sizes during the game.\par}
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'9B\'A0\'EF\'B8\'8F Utility Layer
\par}
{\tc\tcl2 \v \'F0\'9F\'9B\'A0\'EF\'B8\'8F Utility Layer}
{\i files: include/util/*.h, src/util/*.c} \par
Modules used throughout the layer, or which can't be directly assigned to one certain layer can be found here.\par}
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'E2\'9E\'95 Other relevant files
\par}
{\tc\tcl2 \v \'E2\'9E\'95 Other relevant files}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
config.h.in / {\b config.h}{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The {\f2 config.h.in}  file is used for the compile time configurations and is processed into {\f2 {\b config.h}}  by CMake\par}
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b entry-S.c}{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Since Doxygen can't parse assembly files, the {\f2 {\b entry.S}}  file is converted to stubbed C file by a helper script, which can then be parsed.\par}
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b main.c}{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u9702\tab}\ilvl1\ls1 \li0\ri0\lin0\rin0\fi-360\tx720\li720\ri0\lin720\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The main file for the game itself, containing the {\f2 {\b main()}}  function which is invoked by the {\f2 Reset_Handler}  \par}
}
\par
\par}
}}
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'F0\'9F\'A4\'9D Coding Conventions\par \pard\plain 
{\tc\tcl1 \v \'F0\'9F\'A4\'9D Coding Conventions}
{\xe \v \'F0\'9F\'A4\'9D Coding Conventions}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
\par
\par
{
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\f2 Conventional Commits}\par}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'84 File structure
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'84 File structure}
All files should follow a common structure as defined below. Exceptions may be made, however these should be explicitely explained.\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Header file structure
\par}
{\tc\tcl3 \v Header file structure}
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Module comment\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Defines\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Global constants\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Global variables\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Structs\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
6.\tab Public function prototypes\par}
\par
\par}
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Source file structure
\par}
{\tc\tcl3 \v Source file structure}
{
\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Module comment (may reference header comment and add information if needed)\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Module constants\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Module variables\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Private function prototypes\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Public function implementations\par
\pard\plain \s140\fi-360\li360\widctlpar\fs20\cgrid 
6.\tab Private function implementations\par}
\par
\par}
\par}
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'92\'AC Naming
\par}
{\tc\tcl2 \v \'F0\'9F\'92\'AC Naming}
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files
\par}
{\tc\tcl3 \v Files}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Files should use {\f2 snake_case}  naming\par}
\par
\par}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions
\par}
{\tc\tcl3 \v Functions}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Public functions should be prefixed with "`module_[...]`"\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Private functions should be marked as {\f2 static}  and prefixed with "`_[...]`"\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
The function name itself should be written in {\f2 camelCase} \par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
A specialization may follow as a suffix, such as "`[...]_waiting`"\par}
\par
\par}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables
\par}
{\tc\tcl3 \v Variables}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All variables should use {\f2 snake_case}  naming\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Global variables should be prefixed with {\f2 g_[...]} \par}
\par
\par}
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros
\par}
{\tc\tcl3 \v Macros}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Function macros should use the same naming as functions\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
Other macros should use {\f2 SCREAMING_CASE}  naming\par}
\par
\par}
\par}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'F0\'9F\'93\'9D Documentation
\par}
{\tc\tcl2 \v \'F0\'9F\'93\'9D Documentation}
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All files should contain a top level comment.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All public functions should be documented in the header file.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All private functions should be documented at the definition in the source files.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All structs and enums should be documented.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All global variables should be documented.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All "complicated" macros should be documented.\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
All typedefs should be documented.\par}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation templates
\par}
{\tc\tcl3 \v Documentation templates}
To ensure a uniform documentation all doc comments, should be loosely based on the following templates. Irrelevant fields can and should be ommited to avoid bloat.\par
\par
{
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Files } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @file  [File name]}\par
{\cf20  *}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details}\par
{\cf20  * This file contains [...].}\par
{\cf20  *}\par
{\cf20  * @ingroup [HAL/Logic/Presentation/Utility]}\par
{\cf20  *}\par
{\cf20  * @see }\par
{\cf20  *  [Header/Source]}\par
{\cf20  *  [Any other relevant]}\par
{\cf20  *}\par
{\cf20  * @note}\par
{\cf20  *  [Additional notes, if relevant...]}\par
{\cf20  *}\par
{\cf20  * @copyright}\par
{\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
{\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
{\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
{\cf20  */}\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Functions } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details }\par
{\cf20  * [Detailed description, only if relevant]}\par
{\cf20  * }\par
{\cf20  * @param[in/out/inout] param1 Description of paramater}\par
{\cf20  * ...}\par
{\cf20  *}\par
{\cf20  * @return [Description of return value, or "void"]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  */}\par
{\cf18 void} example_function(uint8_t param1);\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Structs } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details }\par
{\cf20  * [Detailed description, only if relevant]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  */}\par
{\cf17 typedef} {\cf17 struct }\{\par
    {\cf18 int} member1; {\cf20 /**< [Description of member1] */}\par
    {\cf18 float} member2; {\cf20 /**< [Description of member2] */}\par
    {\cf20 // ...}\par
\} ExampleStruct;\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Enums } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details }\par
{\cf20  * [Detailed description, only if relevant]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  */}\par
{\cf17 typedef} {\cf17 enum} \{\par
    ENUM_VALUE1; {\cf20 /**< [Description of ENUM_VALUE1] */}\par
    ENUM_VALUE2; {\cf20 /**< [Description of ENUM_VALUE2] */}\par
    ENUM_VALUE3; {\cf20 /**< [Description of ENUM_VALUE3] */}\par
    {\cf20 // ...}\par
\} ExampleEnum;\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Typedefs } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details }\par
{\cf20  * [Detailed description, only if relevant]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  */}\par
{\cf17 typedef} {\cf18 unsigned} {\cf18 long} ExampleType;\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Macros } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @def EXAMPLE_MACRO}\par
{\cf20  * @brief [Short description of what the macro does or represents.]}\par
{\cf20  *}\par
{\cf20  * @details}\par
{\cf20  * [If neccessary, explain the purpose of the macro, }\par
{\cf20  *  parameters (if function-like macro),...]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  *}\par
{\cf20  * Example: [if relevant]}\par
{\cf20  * @code}\par
{\cf20  *   int value = MY_MACRO;}\par
{\cf20  * @endcode}\par
{\cf20  */}\par
{\cf21 #define EXAMPLE_MACRO 42}\par
}
\par
\pard\plain {\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\hich\af0\langfe2052\dbch\af0\afs24\lang1081\loch\f0\fs24\lang1033{\listtext\pard\plain \hich\af3\dbch\af3\loch\f8 \'01\u8226\tab}\ilvl0\ls1 \li0\ri0\lin0\rin0\fi-360\tx360\li360\ri0\lin360\rin0\fi-360\kerning1\hich\af4\dbch\af5\rtlch \ltrch\loch\fs20
{\b  Global Variables } \par
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf20 /**}\par
{\cf20  * @brief [Brief description]}\par
{\cf20  *}\par
{\cf20  * @details }\par
{\cf20  * [What global variable is used for, scope, and initialization details.]}\par
{\cf20  *}\par
{\cf20  * @note [Any additional notes or constraints, if relevant.]}\par
{\cf20  */}\par
{\cf17 extern} {\cf18 int} g_exampleGlobal;\par
}
 \par}
\par
 \par}
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Index\par \pard\plain 
{\tc \v Topic Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Topics\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all topics with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Hardware Abstraction Layer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Logic Layer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Presentation Layer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Utility\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Cell} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One cell on the field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CellSize} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct representing the dimensions of a cell })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CellState} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current state of the cells })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GameState} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current game state })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GameTimer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time information of the current game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InputBuffer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RingBuffer for fixed memory footprint })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Style} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a style with foreground color, background color, and font style })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b /github/workspace/entry/{\b entry-S.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry.S })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /github/workspace/entry/{\b entry.S} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point and initialization routines for the Tic-Tac-Toe project })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /github/workspace/entry/{\b linker_script.ld} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b def.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains very basic and general definitions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b interrupts.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the relevant interrupt handlers })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b memset.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for a simple implementation of memset })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b nvic.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains interrupt constants })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b random.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for the RNG HAL })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b register_access.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b system.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System control interface for hardware abstraction layer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b timer.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the COUNTER device })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b uart.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the UART device })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b bot.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bot logic for Tic-Tac-Toe game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b game.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the game logic })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b input.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the input handling of the game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b time.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains time functions needed for the game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b winning.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the function for checking if someone has won })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b ascii_art.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains ASCII art constants for the TikTakToe game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b cell.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions and definitions for managing the presentation of cells })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b cursor.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for moving the presentation of the cursor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b field.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and one function to draw the whole field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b menu.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for presentation of the menu })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b print.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different high level functions for printing to UART })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b style.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several constants to simplify the styling of output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b ui.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains different functions for the presentation of the in-game user interface (everything besides the actual game field) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b conversion.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent conversion functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b error_handling.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions to react on errors })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b input_buf.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains everything for the input buffer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b math.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent math functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point for the TikTakToe game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b interrupts.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the interrupt handlers for UART and Timer interrupts })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b memset.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of a simple memset function })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b random.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the RNG HAL for random number generation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b register_access.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Implementation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b system.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of system control functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b timer.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b hal/{\b uart.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements UART initialization and data transfer functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b bot.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of bot logic for Tic-Tac-Toe game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b game.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the core game logic for Tic-Tac-Toe })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b input.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements input handling for the game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b time.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements time-related functionality for the game })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b logic/{\b winning.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the function for checking if someone has won })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b cell.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for managing the presentation of cells })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b cursor.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements cursor movement functionality for the presentation layer })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b field.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the rendering of the TikTakToe field })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b menu.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements menu presentation functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b print.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of high-level printing functions for UART })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b style.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements predefined styles for terminal output })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b presentation/{\b ui.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for the in-game user interface })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b conversion.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of utility functions for integer-to-string and integer-to-character conversions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b error_handling.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b util/{\b input_buf.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the input buffer functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Topic Documentation{\tc \v Topic Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hardware Abstraction Layer\par \pard\plain 
{\tc\tcl2 \v Hardware Abstraction Layer}
{\xe \v Hardware Abstraction Layer}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b interrupts.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the relevant interrupt handlers. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b memset.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for a simple implementation of memset. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b nvic.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains interrupt constants. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b random.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for the RNG HAL. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b register_access.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Interface. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b system.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System control interface for hardware abstraction layer. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b timer.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the COUNTER device. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b uart.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the UART device. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This group contains all modules from the hardware abstraction layer. \par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Logic Layer\par \pard\plain 
{\tc\tcl2 \v Logic Layer}
{\xe \v Logic Layer}
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b bot.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bot logic for Tic-Tac-Toe game. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b game.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the game logic. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b input.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the input handling of the game. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b time.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains time functions needed for the game. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b winning.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the function for checking if someone has won. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This group contains all modules from the logic layer. \par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Presentation Layer\par \pard\plain 
{\tc\tcl2 \v Presentation Layer}
{\xe \v Presentation Layer}
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b ascii_art.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains ASCII art constants for the TikTakToe game. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b cell.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions and definitions for managing the presentation of cells. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b cursor.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for moving the presentation of the cursor. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b field.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and one function to draw the whole field. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b menu.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for presentation of the menu. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b print.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different high level functions for printing to UART. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b style.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several constants to simplify the styling of output. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b ui.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains different functions for the presentation of the in-game user interface (everything besides the actual game field). }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This group contains all modules from the presentation layer. \par
}\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Utility\par \pard\plain 
{\tc\tcl2 \v Utility}
{\xe \v Utility}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Files\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b def.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains very basic and general definitions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b conversion.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent conversion functions. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b error_handling.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions to react on errors. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b input_buf.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains everything for the input buffer. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
file {\b math.h}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent math functions. }}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This group contains all utility modules. \par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cell Struct Reference\par \pard\plain 
{\tc\tcl2 \v Cell}
{\xe \v Cell}
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One cell on the field. }}\par
{
{\f2 #include <game.h>}}\par
Collaboration diagram for Cell:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d28/structCell__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b col}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Column index of the cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b row}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row index of the cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b marked_by}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player who marked the cell. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One cell on the field. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains coordinates and information about which player marked the cell. \par
}{
Definition at line {\b 58} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v col\:Cell}
{\xe \v Cell\:col}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Cell::col}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Column index of the cell. }}\par
{
Definition at line {\b 60} of file {\b game.h}.}\par
}
{\xe \v marked_by\:Cell}
{\xe \v Cell\:marked_by}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} Cell::marked_by}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player who marked the cell. }}\par
{
Definition at line {\b 62} of file {\b game.h}.}\par
}
{\xe \v row\:Cell}
{\xe \v Cell\:row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Cell::row}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row index of the cell. }}\par
{
Definition at line {\b 61} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
logic/{\b game.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CellSize Struct Reference\par \pard\plain 
{\tc\tcl2 \v CellSize}
{\xe \v CellSize}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct representing the dimensions of a cell. }}\par
{
{\f2 #include <cell.h>}}\par
Collaboration diagram for CellSize:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d71/structCellSize__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Size} {\b size}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current size of the cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b width}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of the cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b height}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the cell. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct representing the dimensions of a cell. \par
}{
Definition at line {\b 49} of file {\b cell.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v height\:CellSize}
{\xe \v CellSize\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t CellSize::height}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the cell. }}\par
{
Definition at line {\b 53} of file {\b cell.h}.}\par
}
{\xe \v size\:CellSize}
{\xe \v CellSize\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Size} CellSize::size}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current size of the cell. }}\par
{
Definition at line {\b 51} of file {\b cell.h}.}\par
}
{\xe \v width\:CellSize}
{\xe \v CellSize\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t CellSize::width}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Width of the cell. }}\par
{
Definition at line {\b 52} of file {\b cell.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
presentation/{\b cell.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CellState Struct Reference\par \pard\plain 
{\tc\tcl2 \v CellState}
{\xe \v CellState}
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current state of the cells. }}\par
{
{\f2 #include <game.h>}}\par
Collaboration diagram for CellState:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d25/structCellState__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} {\b all} [{\b CELLS_PER_COL}][{\b CELLS_PER_ROW}]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All cells of the match. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} * {\b selected}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the currently selected cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} * {\b last_cross}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the cell last marked by Cross. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} * {\b last_circle}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the last cell marked by Circle. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current state of the cells. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tracks all cells on the field and pointers to specific cells for easier access. \par
}{
Definition at line {\b 96} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v all\:CellState}
{\xe \v CellState\:all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell} CellState::all[{\b CELLS_PER_COL}][{\b CELLS_PER_ROW}]}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
All cells of the match. }}\par
{
Definition at line {\b 98} of file {\b game.h}.}\par
}
{\xe \v last_circle\:CellState}
{\xe \v CellState\:last_circle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell}* CellState::last_circle}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the last cell marked by Circle. }}\par
{
Definition at line {\b 101} of file {\b game.h}.}\par
}
{\xe \v last_cross\:CellState}
{\xe \v CellState\:last_cross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell}* CellState::last_cross}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the cell last marked by Cross. }}\par
{
Definition at line {\b 100} of file {\b game.h}.}\par
}
{\xe \v selected\:CellState}
{\xe \v CellState\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell}* CellState::selected}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pointer to the currently selected cell. }}\par
{
Definition at line {\b 99} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
logic/{\b game.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameState Struct Reference\par \pard\plain 
{\tc\tcl2 \v GameState}
{\xe \v GameState}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current game state. }}\par
{
{\f2 #include <game.h>}}\par
Collaboration diagram for GameState:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d37/structGameState__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b winner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None if tie or game not over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mode} {\b mode}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current game mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b round}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current round number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint8_t {\b fields_marked}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of fields marked so far. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b current_player}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player whose turn it is. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b total_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks elapsed in the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b average_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks per turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cross_total_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks for Player Cross. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cross_average_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks for Player Cross. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b circle_total_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks for Player Circle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b circle_average_ticks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks for Player Circle. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current game state. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains important game information and several metrics for tracking the game's progress.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Some of the fields are only calculated once the game is over. \par
}}}{
Definition at line {\b 72} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v average_ticks\:GameState}
{\xe \v GameState\:average_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::average_ticks}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks per turn. }}\par
{
Definition at line {\b 82} of file {\b game.h}.}\par
}
{\xe \v circle_average_ticks\:GameState}
{\xe \v GameState\:circle_average_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::circle_average_ticks}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks for Player Circle. }}\par
{
Definition at line {\b 88} of file {\b game.h}.}\par
}
{\xe \v circle_total_ticks\:GameState}
{\xe \v GameState\:circle_total_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::circle_total_ticks}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks for Player Circle. }}\par
{
Definition at line {\b 87} of file {\b game.h}.}\par
}
{\xe \v cross_average_ticks\:GameState}
{\xe \v GameState\:cross_average_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::cross_average_ticks}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average ticks for Player Cross. }}\par
{
Definition at line {\b 85} of file {\b game.h}.}\par
}
{\xe \v cross_total_ticks\:GameState}
{\xe \v GameState\:cross_total_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::cross_total_ticks}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks for Player Cross. }}\par
{
Definition at line {\b 84} of file {\b game.h}.}\par
}
{\xe \v current_player\:GameState}
{\xe \v GameState\:current_player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} GameState::current_player}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player whose turn it is. }}\par
{
Definition at line {\b 78} of file {\b game.h}.}\par
}
{\xe \v fields_marked\:GameState}
{\xe \v GameState\:fields_marked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t GameState::fields_marked}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of fields marked so far. }}\par
{
Definition at line {\b 77} of file {\b game.h}.}\par
}
{\xe \v mode\:GameState}
{\xe \v GameState\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mode} GameState::mode}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current game mode. }}\par
{
Definition at line {\b 75} of file {\b game.h}.}\par
}
{\xe \v round\:GameState}
{\xe \v GameState\:round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint8_t GameState::round}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Current round number. }}\par
{
Definition at line {\b 76} of file {\b game.h}.}\par
}
{\xe \v total_ticks\:GameState}
{\xe \v GameState\:total_ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t GameState::total_ticks}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks elapsed in the game. }}\par
{
Definition at line {\b 81} of file {\b game.h}.}\par
}
{\xe \v winner\:GameState}
{\xe \v GameState\:winner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} GameState::winner}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None if tie or game not over. }}\par
{
Definition at line {\b 74} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
logic/{\b game.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
GameTimer Struct Reference\par \pard\plain 
{\tc\tcl2 \v GameTimer}
{\xe \v GameTimer}
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time information of the current game. }}\par
{
{\f2 #include <time.h>}}\par
Collaboration diagram for GameTimer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dc8/structGameTimer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b is_running}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if the timer is currently running. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint32_t {\b ticks_total}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks since the game started. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint32_t {\b ticks_turn}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ticks elapsed during the current turn. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time information of the current game. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct tracks whether the timer is running and the number of ticks elapsed in total and during the current turn. \par
}{
Definition at line {\b 32} of file {\b time.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v is_running\:GameTimer}
{\xe \v GameTimer\:is_running}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} GameTimer::is_running}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates if the timer is currently running. }}\par
{
Definition at line {\b 34} of file {\b time.h}.}\par
}
{\xe \v ticks_total\:GameTimer}
{\xe \v GameTimer\:ticks_total}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint32_t GameTimer::ticks_total}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Total ticks since the game started. }}\par
{
Definition at line {\b 35} of file {\b time.h}.}\par
}
{\xe \v ticks_turn\:GameTimer}
{\xe \v GameTimer\:ticks_turn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint32_t GameTimer::ticks_turn}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ticks elapsed during the current turn. }}\par
{
Definition at line {\b 36} of file {\b time.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
logic/{\b time.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InputBuffer Struct Reference\par \pard\plain 
{\tc\tcl2 \v InputBuffer}
{\xe \v InputBuffer}
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RingBuffer for fixed memory footprint. }}\par
{
{\f2 #include <input_buf.h>}}\par
Collaboration diagram for InputBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/de9/structInputBuffer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b data} [{\b INPUT_BUF_SIZE}]\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer data storage. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b head}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of the head (write position) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b tail}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of the tail (read position) }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RingBuffer for fixed memory footprint. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct represents a ring buffer with a fixed size, used for storing input data in a circular manner. \par
}{
Definition at line {\b 37} of file {\b input_buf.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data\:InputBuffer}
{\xe \v InputBuffer\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t InputBuffer::data[{\b INPUT_BUF_SIZE}]}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Buffer data storage. }}\par
{
Definition at line {\b 39} of file {\b input_buf.h}.}\par
}
{\xe \v head\:InputBuffer}
{\xe \v InputBuffer\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint16_t InputBuffer::head}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of the head (write position) }}\par
{
Definition at line {\b 40} of file {\b input_buf.h}.}\par
}
{\xe \v tail\:InputBuffer}
{\xe \v InputBuffer\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint16_t InputBuffer::tail}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Index of the tail (read position) }}\par
{
Definition at line {\b 41} of file {\b input_buf.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
util/{\b input_buf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Style Struct Reference\par \pard\plain 
{\tc\tcl2 \v Style}
{\xe \v Style}
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a style with foreground color, background color, and font style. }}\par
{
{\f2 #include <style.h>}}\par
Collaboration diagram for Style:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d6e/structStyle__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b fg_color}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Foreground color escape sequence. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b bg_color}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Background color escape sequence. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b font_style}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Font style escape sequence. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a style with foreground color, background color, and font style. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This struct is used to define a combination of terminal styling attributes. \par
}{
Definition at line {\b 29} of file {\b style.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bg_color\:Style}
{\xe \v Style\:bg_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Style::bg_color}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Background color escape sequence. }}\par
{
Definition at line {\b 32} of file {\b style.h}.}\par
}
{\xe \v fg_color\:Style}
{\xe \v Style\:fg_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Style::fg_color}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Foreground color escape sequence. }}\par
{
Definition at line {\b 31} of file {\b style.h}.}\par
}
{\xe \v font_style\:Style}
{\xe \v Style\:font_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* Style::font_style}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Font style escape sequence. }}\par
{
Definition at line {\b 33} of file {\b style.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
presentation/{\b style.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/Architecture.md File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/Architecture.md}
{\xe \v /github/workspace/Architecture.md}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/Conventions.md File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/Conventions.md}
{\xe \v /github/workspace/Conventions.md}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/entry/entry-S.c File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/entry-S.c}
{\xe \v /github/workspace/entry/entry-S.c}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b entry.S} }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Default_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default handler for unimplemented interrupts. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HardFault_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default HardFault handler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset handler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Set_Default_Handler} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro which defines a default handler for an interrupt or exception. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyData} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies the {\f2 .data}  section from flash to RAM. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b g_pfnVectors} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt vector table. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b zeroBss} (void)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zeroes the {\f2 .bss}  section. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b entry.S} \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition in file {\b entry-S.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v copyData\:entry-S.c}
{\xe \v entry-S.c\:copyData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copyData (void )}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies the {\f2 .data}  section from flash to RAM. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function initializes the {\f2 .data}  section by copying its contents from the load address in flash to the execution address in RAM. \par
}{
Definition at line {\b 94} of file {\b entry-S.c}.}\par
}
{\xe \v Default_Handler\:entry-S.c}
{\xe \v entry-S.c\:Default_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Default_Handler (void )}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default handler for unimplemented interrupts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles unexpected interrupts.\par
This is a weak symbol that can be overridden by a user-defined handler. \par
}{
Definition at line {\b 42} of file {\b entry-S.c}.}\par
}
{\xe \v g_pfnVectors\:entry-S.c}
{\xe \v entry-S.c\:g_pfnVectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void g_pfnVectors (void )}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt vector table. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This table defines the initial stack pointer and the entry points for various exceptions and interrupts. \par
}{
Definition at line {\b 106} of file {\b entry-S.c}.}\par
}
{\xe \v HardFault_Handler\:entry-S.c}
{\xe \v entry-S.c\:HardFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HardFault_Handler (void )}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default HardFault handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles hard faults.\par
This is a weak symbol that can be overridden by a user-defined handler. \par
}{
Definition at line {\b 53} of file {\b entry-S.c}.}\par
}
{\xe \v Reset_Handler\:entry-S.c}
{\xe \v entry-S.c\:Reset_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Reset_Handler (void )}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is the entry point after a reset. It initializes the {\f2 .bss}  and {\f2 .data}  sections and then calls the {\f2 main}  function. \par
}{
Definition at line {\b 65} of file {\b entry-S.c}.}\par
}
{\xe \v Set_Default_Handler\:entry-S.c}
{\xe \v entry-S.c\:Set_Default_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Set_Default_Handler (void )}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macro which defines a default handler for an interrupt or exception. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro creates a weak alias for the {\f2 Default_Handler}  for the specified interrupt or exception.\par
Example: {
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Set_Default_Handler NMI_Handler\par
}
 \par
}{
Definition at line {\b 82} of file {\b entry-S.c}.}\par
}
{\xe \v zeroBss\:entry-S.c}
{\xe \v entry-S.c\:zeroBss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zeroBss (void )}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Zeroes the {\f2 .bss}  section. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function sets all bytes in the {\f2 .bss}  section to zero. \par
}{
Definition at line {\b 117} of file {\b entry-S.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
entry-S.c\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/entry-S.c}
{\xe \v /github/workspace/entry/entry-S.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * \\file entry-S.c}\par
00003 {\cf20  * \\brief entry.S}\par
00004 {\cf20 }\par
00005 {\cf20 }\par
00006 {\cf20 }\par
00007 {\cf20  @file entry.S}\par
00008 {\cf20 }\par
00009 {\cf20  @brief Entry point and initialization routines for the Tic-Tac-Toe project.}\par
00010 {\cf20 }\par
00011 {\cf20  @details}\par
00012 {\cf20  This file contains the interrupt vector table, reset handler, and initialization}\par
00013 {\cf20  routines for the Cortex-M0 processor. It also includes default handlers for}\par
00014 {\cf20  interrupts and exceptions.}\par
00015 {\cf20 }\par
00016 {\cf20  @note}\par
00017 {\cf20  This file is written in ARM assembly and is intended to be processed by the}\par
00018 {\cf20  `asm4doxy.pl` script for generating Doxygen-compatible documentation.}\par
00019 {\cf20  Generated documentation can be found under the file `entry-S.c`}\par
00020 {\cf20 }\par
00021 {\cf20  @see entry-S.c}\par
00022 {\cf20 }\par
00023 {\cf20  @note}\par
00024 {\cf20  Based on version by Thomas Vogt and Sven Reis}\par
00025 {\cf20 }\par
00026 {\cf20  @copyright}\par
00027 {\cf20  This Source Code Form is subject to the terms of the Mozilla Public}\par
00028 {\cf20  License, v2.0. If a copy of the MPL was not distributed with this}\par
00029 {\cf20  file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00030 {\cf20 }\par
00031 {\cf20  */}\par
00032 \par
00033 {\cf20 }\par
00034 {\cf20 /**}\par
00035 {\cf20 }\par
00036 {\cf20  @brief Default handler for unimplemented interrupts.}\par
00037 {\cf20 }\par
00038 {\cf20  @details}\par
00039 {\cf20  This is a weak symbol that can be overridden by a user-defined handler.}\par
00040 {\cf20 }\par
00041 {\cf20  */}\par
00042 {\cf18 void} Default_Handler ({\cf18 void})\par
00043 \{\par
00044 \}{\cf20 }\par
00045 {\cf20 /**}\par
00046 {\cf20 }\par
00047 {\cf20  @brief Default HardFault handler.}\par
00048 {\cf20 }\par
00049 {\cf20  @details}\par
00050 {\cf20  This is a weak symbol that can be overridden by a user-defined handler.}\par
00051 {\cf20 }\par
00052 {\cf20  */}\par
00053 {\cf18 void} HardFault_Handler ({\cf18 void})\par
00054 \{\par
00055 \}{\cf20 }\par
00056 {\cf20 /**}\par
00057 {\cf20 }\par
00058 {\cf20  @brief Reset handler.}\par
00059 {\cf20 }\par
00060 {\cf20  @details}\par
00061 {\cf20  This function is the entry point after a reset. It initializes the `.bss`}\par
00062 {\cf20  and `.data` sections and then calls the `main` function.}\par
00063 {\cf20 }\par
00064 {\cf20  */}\par
00065 {\cf18 void} Reset_Handler ({\cf18 void})\par
00066 \{\par
00067 \}{\cf20 }\par
00068 {\cf20 /**}\par
00069 {\cf20 }\par
00070 {\cf20  @brief Macro which defines a default handler for an interrupt or exception.}\par
00071 {\cf20 }\par
00072 {\cf20  @details}\par
00073 {\cf20  This macro creates a weak alias for the `Default_Handler` for the specified}\par
00074 {\cf20  interrupt or exception.}\par
00075 {\cf20 }\par
00076 {\cf20  Example:}\par
00077 {\cf20  @code}\par
00078 {\cf20    Set_Default_Handler NMI_Handler}\par
00079 {\cf20  @endcode}\par
00080 {\cf20 }\par
00081 {\cf20  */}\par
00082 {\cf18 void} Set_Default_Handler ({\cf18 void})\par
00083 \{\par
00084 \}{\cf20 }\par
00085 {\cf20 /**}\par
00086 {\cf20 }\par
00087 {\cf20  @brief Copies the `.data` section from flash to RAM.}\par
00088 {\cf20 }\par
00089 {\cf20  @details}\par
00090 {\cf20  This function initializes the `.data` section by copying its contents}\par
00091 {\cf20  from the load address in flash to the execution address in RAM.}\par
00092 {\cf20 }\par
00093 {\cf20  */}\par
00094 {\cf18 void} copyData ({\cf18 void})\par
00095 \{\par
00096 \}{\cf20 }\par
00097 {\cf20 /**}\par
00098 {\cf20 }\par
00099 {\cf20  @brief Interrupt vector table.}\par
00100 {\cf20 }\par
00101 {\cf20  @details}\par
00102 {\cf20  This table defines the initial stack pointer and the entry points for}\par
00103 {\cf20  various exceptions and interrupts.}\par
00104 {\cf20 }\par
00105 {\cf20  */}\par
00106 {\cf18 void} g_pfnVectors ({\cf18 void})\par
00107 \{\par
00108 \}{\cf20 }\par
00109 {\cf20 /**}\par
00110 {\cf20 }\par
00111 {\cf20  @brief Zeroes the `.bss` section.}\par
00112 {\cf20 }\par
00113 {\cf20  @details}\par
00114 {\cf20  This function sets all bytes in the `.bss` section to zero.}\par
00115 {\cf20 }\par
00116 {\cf20  */}\par
00117 {\cf18 void} zeroBss ({\cf18 void})\par
00118 \{\par
00119 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/entry/entry.S File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/entry.S}
{\xe \v /github/workspace/entry/entry.S}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point and initialization routines for the Tic-Tac-Toe project. }}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point and initialization routines for the Tic-Tac-Toe project. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the interrupt vector table, reset handler, and initialization routines for the Cortex-M0 processor. It also includes default handlers for interrupts and exceptions.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This file is written in ARM assembly and is intended to be processed by the {\f2 asm4doxy.pl}  script for generating Doxygen-compatible documentation. Generated documentation can be found under the file {\f2 {\b entry-S.c}} \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b entry-S.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt and Sven Reis\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b entry.S}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
entry.S\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/entry.S}
{\xe \v /github/workspace/entry/entry.S}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 /**\par
00002  *\par
00003  * @file entry.S\par
00004  *\par
00005  * @brief Entry point and initialization routines for the Tic-Tac-Toe project.\par
00006  *\par
00007  * @details\par
00008  * This file contains the interrupt vector table, reset handler, and initialization\par
00009  * routines for the Cortex-M0 processor. It also includes default handlers for\par
00010  * interrupts and exceptions.\par
00011  *\par
00012  * @note\par
00013  * This file is written in ARM assembly and is intended to be processed by the\par
00014  * `asm4doxy.pl` script for generating Doxygen-compatible documentation.\par
00015  * Generated documentation can be found under the file `entry-S.c`\par
00016  *\par
00017  * @see entry-S.c\par
00018  *\par
00019  * @note\par
00020  * Based on version by Thomas Vogt and Sven Reis\par
00021  *\par
00022  * @copyright\par
00023  * This Source Code Form is subject to the terms of the Mozilla Public\par
00024  * License, v2.0. If a copy of the MPL was not distributed with this\par
00025  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\par
00026  */\par
00027 \par
00028     .syntax unified\par
00029     .cpu cortex-m0\par
00030     .thumb\par
00031 \par
00032     /* External Symbols */\par
00033     /* From linker_script.ld */\par
00034     .extern __StackTop\par
00035     .extern __data_start__\par
00036     .extern __data_end__\par
00037     .extern __data_load_addr__\par
00038     .extern __bss_start__\par
00039     .extern __bss_end__\par
00040     /* From C code */\par
00041     .extern main\par
00042     .extern HardFault_Handler\par
00043     .extern Default_Handler\par
00044 \par
00045 /* ==== Interrupt Vector Table ==== */\par
00046     .section .isr_vectors, "a", %progbits\par
00047     .align 2\par
00048     .type g_pfnVectors, %object\par
00049 /**\par
00050  * @brief Interrupt vector table.\par
00051  *\par
00052  * @details\par
00053  * This table defines the initial stack pointer and the entry points for\par
00054  * various exceptions and interrupts.\par
00055  */\par
00056 g_pfnVectors:\par
00057     .long __StackTop          /* Top of Stack */\par
00058     .long Reset_Handler       /* Reset Handler */\par
00059     .long NMI_Handler         /* -14 NMI Handler */\par
00060     .long HardFault_Handler   /* -13 Hard Fault Handler */\par
00061     .long 0                   /* Reserved */\par
00062     .long 0                   /* Reserved */\par
00063     .long 0                   /* Reserved */\par
00064     .long 0                   /* Reserved */\par
00065     .long 0                   /* Reserved */\par
00066     .long 0                   /* Reserved */\par
00067     .long 0                   /* Reserved */\par
00068     .long SVC_Handler         /* -5 SVC Handler */\par
00069     .long DebugMon_Handler    /* -4 Debug Monitor Handler */\par
00070     .long 0                   /* Reserved */\par
00071     .long PendSV_Handler      /* -2 PendSV Handler */\par
00072     .long SysTick_Handler     /* -1 SysTick Handler */\par
00073 \par
00074     /* Interrupts */\par
00075     .long Interrupt0_Handler  /* 0 Interrupt 0 */\par
00076     .long Interrupt1_Handler  /* 1 Interrupt 1 */\par
00077     .long Interrupt2_Handler  /* 2 Interrupt 2 */\par
00078     .long Interrupt3_Handler  /* 3 Interrupt 3 */\par
00079     .long Interrupt4_Handler  /* 4 Interrupt 4 */\par
00080     .long Interrupt5_Handler  /* 5 Interrupt 5 */\par
00081     .long Interrupt6_Handler  /* 6 Interrupt 6 */\par
00082     .long Interrupt7_Handler  /* 7 Interrupt 7 */\par
00083     .long Interrupt8_Handler  /* 8 Interrupt 8 */\par
00084     .long Interrupt9_Handler  /* 9 Interrupt 9 */\par
00085 \par
00086     .space   (22 * 4)         /* Interrupts 10 to 31 are left out */\par
00087     .size g_pfnVectors, . - g_pfnVectors\par
00088 \par
00089     .section .text, "ax", %progbits\par
00090 \par
00091 /* ==== Entry Point ==== */\par
00092     .global Reset_Handler\par
00093     .type Reset_Handler, %function\par
00094 /**\par
00095  * @brief Reset handler.\par
00096  *\par
00097  * @details\par
00098  * This function is the entry point after a reset. It initializes the `.bss`\par
00099  * and `.data` sections and then calls the `main` function.\par
00100  */\par
00101 Reset_Handler:\par
00102     bl zeroBss\par
00103     bl copyData\par
00104     bl main\par
00105 1:\par
00106     bkpt\par
00107     b 1b\par
00108 \par
00109 /* ==== Initializing Functions ==== */\par
00110     .global zeroBss\par
00111     .type zeroBss, %function\par
00112 /**\par
00113  * @brief Zeroes the `.bss` section.\par
00114  *\par
00115  * @details\par
00116  * This function sets all bytes in the `.bss` section to zero.\par
00117  */\par
00118 zeroBss:\par
00119     ldr r0, =__bss_start__\par
00120     ldr r1, =__bss_end__\par
00121     movs r2, #0\par
00122     b 2f\par
00123 1:  \par
00124     str r2, [r0]\par
00125     adds r0, #4\par
00126 2:  \par
00127     cmp r0, r1\par
00128     blo 1b\par
00129     bx lr\par
00130 \par
00131     .global copyData\par
00132     .type copyData, %function\par
00133 /**\par
00134  * @brief Copies the `.data` section from flash to RAM.\par
00135  *\par
00136  * @details\par
00137  * This function initializes the `.data` section by copying its contents\par
00138  * from the load address in flash to the execution address in RAM.\par
00139  */\par
00140 copyData:\par
00141     ldr r0, =__data_start__\par
00142     ldr r1, =__data_end__\par
00143     ldr r2, =__data_load_addr__\par
00144     cmp r0, r1\par
00145     bhs 2f\par
00146 1:\par
00147     ldr r3, [r2]\par
00148     str r3, [r0]\par
00149     adds r0, #4\par
00150     adds r2, #4\par
00151     cmp r0, r1\par
00152     blo 1b\par
00153 2:\par
00154     bx lr\par
00155 \par
00156 /* ==== Fallbacks and Defaults ==== */\par
00157     .type    HardFault_Handler, %function\par
00158     .weak    HardFault_Handler\par
00159 /**\par
00160  * @brief Default HardFault handler.\par
00161  *\par
00162  * @details\par
00163  * This is a weak symbol that can be overridden by a user-defined handler.\par
00164  */\par
00165 HardFault_Handler:\par
00166     bkpt\par
00167     b HardFault_Handler\par
00168     .size    HardFault_Handler, . - HardFault_Handler\par
00169 \par
00170     .type    Default_Handler, %function\par
00171     .weak    Default_Handler\par
00172 /**\par
00173  * @brief Default handler for unimplemented interrupts.\par
00174  *\par
00175  * @details\par
00176  * This is a weak symbol that can be overridden by a user-defined handler.\par
00177  */\par
00178 Default_Handler:\par
00179     bkpt\par
00180     b Default_Handler\par
00181     .size    Default_Handler, . - Default_Handler\par
00182 \par
00183 \par
00184 /**\par
00185  * @brief Macro which defines a default handler for an interrupt or exception.\par
00186  *\par
00187  * @details\par
00188  * This macro creates a weak alias for the `Default_Handler` for the specified\par
00189  * interrupt or exception.\par
00190  *\par
00191  * Example:\par
00192  * @code\par
00193  *   Set_Default_Handler NMI_Handler\par
00194  * @endcode\par
00195  */\par
00196 Set_Default_Handler:\par
00197     .macro   Set_Default_Handler  Handler_Name\par
00198     .weak    \\Handler_Name\par
00199     .set     \\Handler_Name, Default_Handler\par
00200     .endm\par
00201 \par
00202     Set_Default_Handler  NMI_Handler\par
00203     Set_Default_Handler  SVC_Handler\par
00204     Set_Default_Handler  DebugMon_Handler\par
00205     Set_Default_Handler  PendSV_Handler\par
00206     Set_Default_Handler  SysTick_Handler\par
00207 \par
00208     Set_Default_Handler  Interrupt0_Handler\par
00209     Set_Default_Handler  Interrupt1_Handler\par
00210     Set_Default_Handler  Interrupt2_Handler\par
00211     Set_Default_Handler  Interrupt3_Handler\par
00212     Set_Default_Handler  Interrupt4_Handler\par
00213     Set_Default_Handler  Interrupt5_Handler\par
00214     Set_Default_Handler  Interrupt6_Handler\par
00215     Set_Default_Handler  Interrupt7_Handler\par
00216     Set_Default_Handler  Interrupt8_Handler\par
00217     Set_Default_Handler  Interrupt9_Handler\par
00218 \par
00219     .end\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/entry/linker_script.ld File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/linker_script.ld}
{\xe \v /github/workspace/entry/linker_script.ld}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
linker_script.ld\par \pard\plain 
{\tc\tcl2 \v /github/workspace/entry/linker_script.ld}
{\xe \v /github/workspace/entry/linker_script.ld}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 /**\par
00002  * @file linker_script.ld\par
00003  *\par
00004  * @brief ARM Cortex-M0 Linker Script.\par
00005  *\par
00006  * @note\par
00007  * Based on version by Thomas Vogt and Sven Reis\par
00008  *\par
00009  * @copyright\par
00010  * This Source Code Form is subject to the terms of the Mozilla Public\par
00011  * License, v2.0. If a copy of the MPL was not distributed with this\par
00012  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\par
00013  *\par
00014  */\par
00015 \par
00016 /* \par
00017 * Flash Configuration:\par
00018 * - Start:        0x00000000\par
00019 * - Size:         262KB\par
00020 */\par
00021 __ROM_BASE = 0x00000000;\par
00022 __ROM_SIZE = 0x00040000;\par
00023 \par
00024 /* \par
00025 * RAM Configuration:\par
00026 * - Start:        0x20000000 \par
00027 * - Total Size:   16KB\par
00028 * - Stack Size:   1024KB\par
00029 * - Heap Size:    0B\par
00030 */\par
00031 __RAM_BASE = 0x20000000;\par
00032 __RAM_SIZE = 0x00004000;\par
00033 __STACK_SIZE = 0x00000400;\par
00034 __HEAP_SIZE  = 0x00000000;\par
00035 \par
00036 \par
00037 ENTRY ( Reset_Handler )\par
00038 \par
00039 MEMORY\par
00040 \{\par
00041     FLASH (rx)  : ORIGIN = __ROM_BASE, LENGTH = __ROM_SIZE\par
00042     RAM   (rwx) : ORIGIN = __RAM_BASE, LENGTH = __RAM_SIZE\par
00043 \}\par
00044 \par
00045 SECTIONS\par
00046 \{\par
00047     /* Interrupt Vector Table */\par
00048     .isr_vectors : \{\par
00049         KEEP(*(.isr_vectors))\par
00050     \} > FLASH\par
00051 \par
00052     /* Executable Code */\par
00053     .text :\par
00054     \{\par
00055         *(.text*)\par
00056     \} > FLASH\par
00057 \par
00058     /* Read Only Data */\par
00059     .rodata :\par
00060     \{\par
00061         . = ALIGN(4);\par
00062         *(.rodata*)\par
00063         . = ALIGN( 4 );\par
00064     \} > FLASH\par
00065 \par
00066     /* Initialized Data */\par
00067     .data : \par
00068     \{\par
00069         . = ALIGN(4);\par
00070         __data_start__ = .;\par
00071         __data_load_addr__ = LOADADDR(.data);\par
00072         *(.data*)\par
00073         . = ALIGN( 4 );\par
00074         __data_end__ = .;\par
00075     \} > RAM AT > FLASH\par
00076 \par
00077     /* Unitialized data */\par
00078     .bss :\par
00079     \{\par
00080         . = ALIGN(4);\par
00081         __bss_start__ = .;\par
00082         *(.bss*)\par
00083         *(COMMON)\par
00084         . = ALIGN(4);\par
00085         __bss_end__ = .;\par
00086     \} > RAM AT > RAM\par
00087 \par
00088     /* Heap, if it existed */\par
00089 \par
00090     /* Stack is located on top of RAM */\par
00091     .stack (ORIGIN(RAM) + LENGTH(RAM) - __STACK_SIZE) (NOLOAD) :\par
00092     \{\par
00093         . = ALIGN(8);\par
00094         __StackLimit = .;\par
00095         . = . + __STACK_SIZE;\par
00096         . = ALIGN(8);\par
00097         __StackTop = .;\par
00098     \} > RAM\par
00099 \par
00100     PROVIDE( __stack = __StackTop );\par
00101 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config.h File Reference\par \pard\plain 
{\tc\tcl2 \v config.h}
{\xe \v config.h}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dbc/config_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_UNICODE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Unicode support. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENABLE_ASCII_ART}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable ASCII art rendering. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CELLS_PER_ROW}\~ 2\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of cells per row in the game grid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CELLS_PER_COL}\~ 2\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of cells per column in the game grid. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TICKS_PER_TURN}\~ 20\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of ticks allowed per turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TICK_SPEED}\~ 12\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Speed of each tick in milliseconds. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CELLS_PER_COL\:config.h}
{\xe \v config.h\:CELLS_PER_COL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CELLS_PER_COL\~ 2}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of cells per column in the game grid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro defines the vertical size of the game grid. \par
}{
Definition at line {\b 69} of file {\b config.h}.}\par
}
{\xe \v CELLS_PER_ROW\:config.h}
{\xe \v config.h\:CELLS_PER_ROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CELLS_PER_ROW\~ 2}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of cells per row in the game grid. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro defines the horizontal size of the game grid. \par
}{
Definition at line {\b 60} of file {\b config.h}.}\par
}
{\xe \v ENABLE_ASCII_ART\:config.h}
{\xe \v config.h\:ENABLE_ASCII_ART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLE_ASCII_ART}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable ASCII art rendering. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If defined, the game will render ASCII art for visual elements. \par
}{
Definition at line {\b 42} of file {\b config.h}.}\par
}
{\xe \v ENABLE_UNICODE\:config.h}
{\xe \v config.h\:ENABLE_UNICODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENABLE_UNICODE}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Unicode support. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If defined, the game will use Unicode characters for rendering. If not defined, ASCII characters will be used instead. \par
}{
Definition at line {\b 33} of file {\b config.h}.}\par
}
{\xe \v TICK_SPEED\:config.h}
{\xe \v config.h\:TICK_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TICK_SPEED\~ 12}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Speed of each tick in milliseconds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro defines the duration of each tick in the game loop. \par
}{
Definition at line {\b 87} of file {\b config.h}.}\par
}
{\xe \v TICKS_PER_TURN\:config.h}
{\xe \v config.h\:TICKS_PER_TURN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TICKS_PER_TURN\~ 20}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of ticks allowed per turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro defines the maximum number of ticks a player has to make a move. \par
}{
Definition at line {\b 78} of file {\b config.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
config.h\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*! !! This file has been generated automatically, any changes may be overridden !! !*/}{\cf20 }\par
00002 {\cf20 /**}\par
00003 {\cf20  * @file config.h.in}\par
00004 {\cf20  *}\par
00005 {\cf20  * @brief Configuration file for the Tic-Tac-Toe game.}\par
00006 {\cf20  *}\par
00007 {\cf20  * @details}\par
00008 {\cf20  * This file contains preprocessor definitions and configuration macros}\par
00009 {\cf20  * for the Tic-Tac-Toe game.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @note}\par
00012 {\cf20  * This file has been generated automatically by CMake. Do not edit it manually.}\par
00013 {\cf20  * The unprocessed file is `config.h.in`.}\par
00014 {\cf20  *}\par
00015 {\cf20  * @see config.h}\par
00016 {\cf20  *}\par
00017 {\cf20  * @copyright}\par
00018 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00019 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00020 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00021 {\cf20  */}\par
00022 {\cf21 #ifndef CONFIG_H}\par
00023 {\cf21 #define CONFIG_H}\par
00024 {\cf20 }\par
00025 {\cf20 /**}\par
00026 {\cf20  * @def ENABLE_UNICODE}\par
00027 {\cf20  * @brief Enable Unicode support.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @details}\par
00030 {\cf20  * If defined, the game will use Unicode characters for rendering.}\par
00031 {\cf20  * If not defined, ASCII characters will be used instead.}\par
00032 {\cf20  */}\par
00033 {\cf21 #define ENABLE_UNICODE}\par
00034 {\cf20 }\par
00035 {\cf20 /**}\par
00036 {\cf20  * @def ENABLE_ASCII_ART}\par
00037 {\cf20  * @brief Enable ASCII art rendering.}\par
00038 {\cf20  *}\par
00039 {\cf20  * @details}\par
00040 {\cf20  * If defined, the game will render ASCII art for visual elements.}\par
00041 {\cf20  */}\par
00042 {\cf21 #define ENABLE_ASCII_ART}\par
00043 {\cf20 }\par
00044 {\cf20 /**}\par
00045 {\cf20  * @def DISABLE_TIMER}\par
00046 {\cf20  * @brief Disable timer for MinGW builds.}\par
00047 {\cf20  *}\par
00048 {\cf20  * @details}\par
00049 {\cf20  * If defined, the timer will be disabled.}\par
00050 {\cf20  */}\par
00051 {\cf20 /* #undef DISABLE_TIMER */}\par
00052 {\cf20 }\par
00053 {\cf20 /**}\par
00054 {\cf20  * @def CELLS_PER_ROW}\par
00055 {\cf20  * @brief Number of cells per row in the game grid.}\par
00056 {\cf20  *}\par
00057 {\cf20  * @details}\par
00058 {\cf20  * This macro defines the horizontal size of the game grid.}\par
00059 {\cf20  */}\par
00060 {\cf21 #define CELLS_PER_ROW 2}\par
00061 {\cf20 }\par
00062 {\cf20 /**}\par
00063 {\cf20  * @def CELLS_PER_COL}\par
00064 {\cf20  * @brief Number of cells per column in the game grid.}\par
00065 {\cf20  *}\par
00066 {\cf20  * @details}\par
00067 {\cf20  * This macro defines the vertical size of the game grid.}\par
00068 {\cf20  */}\par
00069 {\cf21 #define CELLS_PER_COL 2}\par
00070 {\cf20 }\par
00071 {\cf20 /**}\par
00072 {\cf20  * @def TICKS_PER_TURN}\par
00073 {\cf20  * @brief Number of ticks allowed per turn.}\par
00074 {\cf20  *}\par
00075 {\cf20  * @details}\par
00076 {\cf20  * This macro defines the maximum number of ticks a player has to make a move.}\par
00077 {\cf20  */}\par
00078 {\cf21 #define TICKS_PER_TURN 20}\par
00079 {\cf20 }\par
00080 {\cf20 /**}\par
00081 {\cf20  * @def TICK_SPEED}\par
00082 {\cf20  * @brief Speed of each tick in milliseconds.}\par
00083 {\cf20  *}\par
00084 {\cf20  * @details}\par
00085 {\cf20  * This macro defines the duration of each tick in the game loop.}\par
00086 {\cf20  */}\par
00087 {\cf21 #define TICK_SPEED 12}\par
00088 {\cf20 }\par
00089 {\cf20 /**}\par
00090 {\cf20  * @defgroup HAL Hardware Abstraction Layer}\par
00091 {\cf20  * @\{}\par
00092 {\cf20  * This group contains all modules from the hardware abstraction layer.}\par
00093 {\cf20  * @\}}\par
00094 {\cf20  */}\par
00095 {\cf20 }\par
00096 {\cf20 /**}\par
00097 {\cf20  * @defgroup Logic Logic Layer}\par
00098 {\cf20  * @\{}\par
00099 {\cf20  * This group contains all modules from the logic layer.}\par
00100 {\cf20  * @\}}\par
00101 {\cf20  */}\par
00102 {\cf20 }\par
00103 {\cf20 /**}\par
00104 {\cf20  * @defgroup Presentation Presentation Layer}\par
00105 {\cf20  * @\{}\par
00106 {\cf20  * This group contains all modules from the presentation layer.}\par
00107 {\cf20  * @\}}\par
00108 {\cf20  */}\par
00109 {\cf20 }\par
00110 {\cf20 /**}\par
00111 {\cf20  * @defgroup Utility}\par
00112 {\cf20  * @\{}\par
00113 {\cf20  * This group contains all utility modules.}\par
00114 {\cf20  * @\}}\par
00115 {\cf20  */}\par
00116 \par
00117 {\cf21 #endif}{\cf20 // CONFIG_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
def.h File Reference\par \pard\plain 
{\tc\tcl2 \v def.h}
{\xe \v def.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains very basic and general definitions. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d0b/def_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b false}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the boolean value {\f2 false} . }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b true}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the boolean value {\f2 true} . }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char {\b bool}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boolean type definition. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains very basic and general definitions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file defines a boolean type and constants for {\f2 true}  and {\f2 false} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b def.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b def.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v false\:def.h}
{\xe \v def.h\:false}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define false\~ 0}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the boolean value {\f2 false} . }}\par
{
Definition at line {\b 34} of file {\b def.h}.}\par
}
{\xe \v true\:def.h}
{\xe \v def.h\:true}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define true\~ 1}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the boolean value {\f2 true} . }}\par
{
Definition at line {\b 40} of file {\b def.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v bool\:def.h}
{\xe \v def.h\:bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char {\b bool}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boolean type definition. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines a boolean type using {\f2 char}  for compatibility with C. \par
}{
Definition at line {\b 28} of file {\b def.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
def.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file def.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains very basic and general definitions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file defines a boolean type and constants for `true` and `false`.}\par
00008 {\cf20  *}\par
00009 {\cf20  * @ingroup Utility}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see}\par
00012 {\cf20  *  def.h}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 {\cf21 #ifndef DEF_H}\par
00020 {\cf21 #define DEF_H}\par
00021 {\cf20 }\par
00022 {\cf20 /**}\par
00023 {\cf20  * @brief Boolean type definition.}\par
00024 {\cf20  *}\par
00025 {\cf20  * @details}\par
00026 {\cf20  * Defines a boolean type using `char` for compatibility with C.}\par
00027 {\cf20  */}\par
00028 {\cf17 typedef} {\cf18 char} bool;\par
00029 {\cf20 }\par
00030 {\cf20 /**}\par
00031 {\cf20  * @def false}\par
00032 {\cf20  * @brief Represents the boolean value `false`.}\par
00033 {\cf20  */}\par
00034 {\cf21 #define false 0}\par
00035 {\cf20 }\par
00036 {\cf20 /**}\par
00037 {\cf20  * @def true}\par
00038 {\cf20  * @brief Represents the boolean value `true`.}\par
00039 {\cf20  */}\par
00040 {\cf21 #define true 1}\par
00041 \par
00042 {\cf21 #endif}{\cf20 // DEF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/interrupts.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/interrupts.h}
{\xe \v hal/interrupts.h}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the relevant interrupt handlers. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d4e/interrupts_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Interrupt2_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART interrupt handler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Interrupt8_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer interrupt handler. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the relevant interrupt handlers. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file declares the interrupt handler functions for UART and Timer interrupts. These handlers are triggered by specific hardware events and perform the necessary actions to handle the interrupts.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b interrupts.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ensure the corresponding peripherals are properly configured before enabling these interrupts.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b interrupts.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Interrupt2_Handler\:interrupts.h}
{\xe \v interrupts.h\:Interrupt2_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Interrupt2_Handler ()}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART interrupt handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a UART interrupt occurs. It reads a byte from the UART peripheral and processes it using the input buffer. The interrupt pending bit is cleared after handling the interrupt.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_readByte} \par
}}}{
Definition at line {\b 23} of file {\b interrupts.c}.}\par
{
\ql
References {\b input_onInterrupt()}, {\b Interrupt_ICPR}, {\b Interrupt_ID2}, {\b register_write()}, and {\b uart_readByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ded/interrupts_8h_a0c135cb06b41d4db1ff45f59fd28dfb6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Interrupt8_Handler\:interrupts.h}
{\xe \v interrupts.h\:Interrupt8_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Interrupt8_Handler ()}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer interrupt handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a timer interrupt occurs. It resets the timer compare register and clears the interrupt pending bit. Additionally, it notifies the time module about the interrupt event.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time_onInterrupt} \par
}}}{
Definition at line {\b 29} of file {\b interrupts.c}.}\par
{
\ql
References {\b Interrupt_ICPR}, {\b Interrupt_ID8}, {\b register_write()}, {\b time_onInterrupt()}, {\b TIMER0_BASE_ADDRESS}, and {\b TIMER_COMPARE_0}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ded/interrupts_8h_a3e5a7488b98d542bdcb0e42adc2cf317_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
interrupts.h\par \pard\plain 
{\tc\tcl2 \v hal/interrupts.h}
{\xe \v hal/interrupts.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file interrupts.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains the relevant interrupt handlers}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file declares the interrupt handler functions for UART and Timer interrupts.}\par
00008 {\cf20  * These handlers are triggered by specific hardware events and perform the necessary}\par
00009 {\cf20  * actions to handle the interrupts.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup HAL}\par
00012 {\cf20  *}\par
00013 {\cf20  * @see interrupts.c}\par
00014 {\cf20  *}\par
00015 {\cf20  * @note}\par
00016 {\cf20  * Ensure the corresponding peripherals are properly configured before enabling these interrupts.}\par
00017 {\cf20  *}\par
00018 {\cf20  * @copyright}\par
00019 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00020 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00021 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00022 {\cf20  */}\par
00023 {\cf21 #ifndef INTERRUPTS_H}\par
00024 {\cf21 #define INTERRUPTS_H}\par
00025 {\cf20 }\par
00026 {\cf20 /**}\par
00027 {\cf20  * @brief UART interrupt handler}\par
00028 {\cf20  *}\par
00029 {\cf20  * @details}\par
00030 {\cf20  * This function is triggered when a UART interrupt occurs. It reads a byte}\par
00031 {\cf20  * from the UART peripheral and processes it using the input buffer. The}\par
00032 {\cf20  * interrupt pending bit is cleared after handling the interrupt.}\par
00033 {\cf20  *}\par
00034 {\cf20  * @see uart_readByte}\par
00035 {\cf20  */}\par
00036 {\cf18 void} Interrupt2_Handler();\par
00037 {\cf20 }\par
00038 {\cf20 /**}\par
00039 {\cf20  * @brief Timer interrupt handler}\par
00040 {\cf20  *}\par
00041 {\cf20  * @details}\par
00042 {\cf20  * This function is triggered when a timer interrupt occurs. It resets the}\par
00043 {\cf20  * timer compare register and clears the interrupt pending bit. Additionally,}\par
00044 {\cf20  * it notifies the time module about the interrupt event.}\par
00045 {\cf20  *}\par
00046 {\cf20  * @see time_onInterrupt}\par
00047 {\cf20  */}\par
00048 {\cf18 void} Interrupt8_Handler();\par
00049 \par
00050 {\cf21 #endif}{\cf20 // INTERRUPTS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/memset.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/memset.h}
{\xe \v hal/memset.h}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for a simple implementation of memset. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for memset.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d26/memset_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d09/memset_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b memset} (void *ptr, int x, size_t n)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple implementation of memset. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for a simple implementation of memset. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b memset.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b memset.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v memset\:memset.h}
{\xe \v memset.h\:memset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * memset (void * ptr, int x, size_t n)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple implementation of memset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the first {\b n}  bytes of the block of memory pointed to by {\b ptr}  to the specified value {\b x} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ptr} \cell }{Pointer to the block of memory to fill \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i x} \cell }{Value to be set. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i n} \cell }{Number of bytes to be set to the value\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the memory area\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Warning\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
While x is passed as an int, it is cast to a uint8_t (char) before being stored in the memory area. \par
}}}{
Definition at line {\b 18} of file {\b memset.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memset.h\par \pard\plain 
{\tc\tcl2 \v hal/memset.h}
{\xe \v hal/memset.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file memset.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Header file for a simple implementation of memset}\par
00005 {\cf20  *}\par
00006 {\cf20  * @ingroup HAL}\par
00007 {\cf20  *}\par
00008 {\cf20  * @see memset.c}\par
00009 {\cf20  *}\par
00010 {\cf20  * @copyright}\par
00011 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00012 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00013 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00014 {\cf20  */}\par
00015 \par
00016 {\cf21 #ifndef MEMSET_H}\par
00017 {\cf21 #define MEMSET_H}\par
00018 \par
00019 {\cf21 #include <stddef.h>}\par
00020 {\cf20 }\par
00021 {\cf20 /**}\par
00022 {\cf20  * @brief Simple implementation of memset}\par
00023 {\cf20  *}\par
00024 {\cf20  * @details}\par
00025 {\cf20  * Sets the first **n** bytes of the block of memory}\par
00026 {\cf20  * pointed to by **ptr** to the specified value **x**}\par
00027 {\cf20  *}\par
00028 {\cf20  * @param [in] ptr Pointer to the block of memory to fill}\par
00029 {\cf20  * @param [in] x Value to be set.}\par
00030 {\cf20  * @param [in] n Number of bytes to be set to the value}\par
00031 {\cf20  *}\par
00032 {\cf20  * @return A pointer to the memory area}\par
00033 {\cf20  *}\par
00034 {\cf20  * @warning}\par
00035 {\cf20  * While x is passed as an int, it is cast to a uint8_t (char)}\par
00036 {\cf20  * before being stored in the memory area.}\par
00037 {\cf20  */}\par
00038 {\cf18 void} *memset({\cf18 void} *ptr, {\cf18 int} x, {\cf18 size_t} n);\par
00039 \par
00040 {\cf21 #endif}{\cf20 // MEMSET_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/nvic.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/nvic.h}
{\xe \v hal/nvic.h}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains interrupt constants. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/de0/nvic_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_00}\~ 0xE000E100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 - Reset }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_01}\~ 0xE000E104\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2 - NMI }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_02}\~ 0xE000E108\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
3 - Hard-Fault }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_03}\~ 0xE000E10C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4 - MPU / MEM-Manage }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_04}\~ 0xE000E110\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
5 - BUS-Fault }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_05}\~ 0xE000E114\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
6 - Usage-Fault }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_06}\~ 0xE000E118\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
7 - Reserved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_07}\~ 0xE000E11C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
8 - Reserved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_08}\~ 0xE000E120\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
9 - Reserved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_09}\~ 0xE000E124\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10 - Reserved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_10}\~ 0xE000E128\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
11 - SVCall }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_11}\~ 0xE000E12C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
12 - Debug Monitor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_12}\~ 0xE000E130\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
13 - Reserved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_13}\~ 0xE000E134\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
14 - PendSV }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_14}\~ 0xE000E138\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
15 - SysTick }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable_15}\~ 0xE000E13C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
16 - External 0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_Set_Enable}\~ 0xE000E100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[32...0] Interrupt }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ICPR}\~ 0xE000E280\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Clear-pending Register (on page 4-6) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ID1}\~ (1 << 1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ID2}\~ (1 << 2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ID8}\~ (1 << 8)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ID9}\~ (1 << 9)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 9. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Interrupt_ID10}\~ (1 << 10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 10. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ICSR}\~ 0xE000ED04\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Control and State Register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __WFI}()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for an interrupt. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains interrupt constants. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Registers from NVIC - Cortex-M0 peripheral These are to activate and debug Interrupts Details on Chapter 4.2 Nested Vectored Interrupt Controller (Page 109)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b nvic.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v __WFI\:nvic.h}
{\xe \v nvic.h\:__WFI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __WFI()}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid __asm {\cf17 volatile}({\cf22 "wfi"} ::: {\cf22 "memory"})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wait for an interrupt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The processor enters low power mode until the next interrupt occurs. \par
}{
Definition at line {\b 58} of file {\b nvic.h}.}\par
}
{\xe \v ICSR\:nvic.h}
{\xe \v nvic.h\:ICSR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ICSR\~ 0xE000ED04}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Control and State Register. }}\par
{
Definition at line {\b 49} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ICPR\:nvic.h}
{\xe \v nvic.h\:Interrupt_ICPR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ICPR\~ 0xE000E280}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt Clear-pending Register (on page 4-6) }}\par
{
Definition at line {\b 42} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ID1\:nvic.h}
{\xe \v nvic.h\:Interrupt_ID1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ID1\~ (1 << 1)}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 1. }}\par
{
Definition at line {\b 43} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ID10\:nvic.h}
{\xe \v nvic.h\:Interrupt_ID10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ID10\~ (1 << 10)}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 10. }}\par
{
Definition at line {\b 47} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ID2\:nvic.h}
{\xe \v nvic.h\:Interrupt_ID2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ID2\~ (1 << 2)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 2. }}\par
{
Definition at line {\b 44} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ID8\:nvic.h}
{\xe \v nvic.h\:Interrupt_ID8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ID8\~ (1 << 8)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 8. }}\par
{
Definition at line {\b 45} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_ID9\:nvic.h}
{\xe \v nvic.h\:Interrupt_ID9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_ID9\~ (1 << 9)}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit for User Interrupt ID: 9. }}\par
{
Definition at line {\b 46} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable\~ 0xE000E100}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[32...0] Interrupt }}\par
{
Definition at line {\b 41} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_00\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_00\~ 0xE000E100}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1 - Reset }}\par
{
Definition at line {\b 25} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_01\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_01\~ 0xE000E104}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
2 - NMI }}\par
{
Definition at line {\b 26} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_02\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_02}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_02\~ 0xE000E108}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
3 - Hard-Fault }}\par
{
Definition at line {\b 27} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_03\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_03}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_03\~ 0xE000E10C}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
4 - MPU / MEM-Manage }}\par
{
Definition at line {\b 28} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_04\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_04}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_04\~ 0xE000E110}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
5 - BUS-Fault }}\par
{
Definition at line {\b 29} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_05\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_05}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_05\~ 0xE000E114}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
6 - Usage-Fault }}\par
{
Definition at line {\b 30} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_06\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_06}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_06\~ 0xE000E118}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
7 - Reserved }}\par
{
Definition at line {\b 31} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_07\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_07}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_07\~ 0xE000E11C}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
8 - Reserved }}\par
{
Definition at line {\b 32} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_08\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_08}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_08\~ 0xE000E120}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
9 - Reserved }}\par
{
Definition at line {\b 33} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_09\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_09}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_09\~ 0xE000E124}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
10 - Reserved }}\par
{
Definition at line {\b 34} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_10\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_10\~ 0xE000E128}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
11 - SVCall }}\par
{
Definition at line {\b 35} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_11\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_11\~ 0xE000E12C}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
12 - Debug Monitor }}\par
{
Definition at line {\b 36} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_12\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_12\~ 0xE000E130}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
13 - Reserved }}\par
{
Definition at line {\b 37} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_13\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_13\~ 0xE000E134}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
14 - PendSV }}\par
{
Definition at line {\b 38} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_14\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_14\~ 0xE000E138}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
15 - SysTick }}\par
{
Definition at line {\b 39} of file {\b nvic.h}.}\par
}
{\xe \v Interrupt_Set_Enable_15\:nvic.h}
{\xe \v nvic.h\:Interrupt_Set_Enable_15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Interrupt_Set_Enable_15\~ 0xE000E13C}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
16 - External 0 }}\par
{
Definition at line {\b 40} of file {\b nvic.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nvic.h\par \pard\plain 
{\tc\tcl2 \v hal/nvic.h}
{\xe \v hal/nvic.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file nvic.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains interrupt constants}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * Registers from NVIC - Cortex-M0 peripheral}\par
00008 {\cf20  * These are to activate and debug Interrupts}\par
00009 {\cf20  * Details on Chapter 4.2 Nested Vectored Interrupt Controller (Page 109)}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup HAL}\par
00012 {\cf20  *}\par
00013 {\cf20  * @note}\par
00014 {\cf20  * Based on version by Thomas Vogt}\par
00015 {\cf20  *}\par
00016 {\cf20  * @copyright}\par
00017 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00018 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00019 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00020 {\cf20  */}\par
00021 \par
00022 {\cf21 #ifndef NVIC_H}\par
00023 {\cf21 #define NVIC_H}\par
00024 \par
00025 {\cf21 #define Interrupt_Set_Enable_00 0xE000E100}{\cf20 ///< 1 - Reset}\par
00026 {\cf21 #define Interrupt_Set_Enable_01 0xE000E104}{\cf20 ///< 2 - NMI}\par
00027 {\cf21 #define Interrupt_Set_Enable_02 0xE000E108}{\cf20 ///< 3 - Hard-Fault}\par
00028 {\cf21 #define Interrupt_Set_Enable_03 0xE000E10C}{\cf20 ///< 4 - MPU / MEM-Manage}\par
00029 {\cf21 #define Interrupt_Set_Enable_04 0xE000E110}{\cf20 ///< 5 - BUS-Fault}\par
00030 {\cf21 #define Interrupt_Set_Enable_05 0xE000E114}{\cf20 ///< 6 - Usage-Fault}\par
00031 {\cf21 #define Interrupt_Set_Enable_06 0xE000E118}{\cf20 ///< 7 - Reserved}\par
00032 {\cf21 #define Interrupt_Set_Enable_07 0xE000E11C}{\cf20 ///< 8 - Reserved}\par
00033 {\cf21 #define Interrupt_Set_Enable_08 0xE000E120}{\cf20 ///< 9 - Reserved}\par
00034 {\cf21 #define Interrupt_Set_Enable_09 0xE000E124}{\cf20 ///< 10 - Reserved}\par
00035 {\cf21 #define Interrupt_Set_Enable_10 0xE000E128}{\cf20 ///< 11 - SVCall}\par
00036 {\cf21 #define Interrupt_Set_Enable_11 0xE000E12C}{\cf20 ///< 12 - Debug Monitor}\par
00037 {\cf21 #define Interrupt_Set_Enable_12 0xE000E130}{\cf20 ///< 13 - Reserved}\par
00038 {\cf21 #define Interrupt_Set_Enable_13 0xE000E134}{\cf20 ///< 14 - PendSV}\par
00039 {\cf21 #define Interrupt_Set_Enable_14 0xE000E138}{\cf20 ///< 15 - SysTick}\par
00040 {\cf21 #define Interrupt_Set_Enable_15 0xE000E13C}{\cf20 ///< 16 - External 0}\par
00041 {\cf21 #define Interrupt_Set_Enable 0xE000E100   }{\cf20 ///< [32...0] Interrupt}\par
00042 {\cf21 #define Interrupt_ICPR 0xE000E280         }{\cf20 ///< Interrupt Clear-pending Register (on page 4-6)}\par
00043 {\cf21 #define Interrupt_ID1 (1 << 1)            }{\cf20 ///< Bit for User Interrupt ID: 1}\par
00044 {\cf21 #define Interrupt_ID2 (1 << 2)            }{\cf20 ///< Bit for User Interrupt ID: 2}\par
00045 {\cf21 #define Interrupt_ID8 (1 << 8)            }{\cf20 ///< Bit for User Interrupt ID: 8}\par
00046 {\cf21 #define Interrupt_ID9 (1 << 9)            }{\cf20 ///< Bit for User Interrupt ID: 9}\par
00047 {\cf21 #define Interrupt_ID10 (1 << 10)          }{\cf20 ///< Bit for User Interrupt ID: 10}\par
00048 \par
00049 {\cf21 #define ICSR 0xE000ED04}{\cf20 ///< Interrupt Control and State Register}\par
00050 {\cf20 }\par
00051 {\cf20 /**}\par
00052 {\cf20  * @def __WFI}\par
00053 {\cf20  * @brief Wait for an interrupt.}\par
00054 {\cf20  *}\par
00055 {\cf20  * @details}\par
00056 {\cf20  * The processor enters low power mode until the next interrupt occurs.}\par
00057 {\cf20  */}\par
00058 {\cf21 #define __WFI() __asm volatile("wfi" ::: "memory")}\par
00059 \par
00060 {\cf21 #endif}{\cf20 // NVIC_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/random.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/random.h}
{\xe \v hal/random.h}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for the RNG HAL. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for random.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dfa/random_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d46/random_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_BASE_ADDRESS}\~ 0x4000D000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address of the RNG peripheral. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_START}\~ 0x000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task starting the random number generator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_STOP}\~ 0x004\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task stopping the random number generator. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_VALRDY}\~ 0x100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event generated when new number is read. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_SHORTS}\~ 0x200\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shortcut register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_INTEN}\~ 0x300\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_INTENSET}\~ 0x304\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_INTENCLR}\~ 0x308\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_CONFIG}\~ 0x504\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_VALUE}\~ 0x508\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output random number. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_TASK_START}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for starting a Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_EVENT_TRIGGER}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for setting/starting an Event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RNG_EVENT_CLEAR}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for clearing/stopping an Event. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rng_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the generation of random numbers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b rng_getRandomValue_immediately} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator immediately. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b rng_getRandomValue_waiting} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator by polling and waiting. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Header file for the RNG HAL. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the declarations and macros for interacting with the RNG peripheral, including initialization and random number retrieval.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b random.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b random.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RNG_BASE_ADDRESS\:random.h}
{\xe \v random.h\:RNG_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_BASE_ADDRESS\~ 0x4000D000}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address of the RNG peripheral. }}\par
{
Definition at line {\b 28} of file {\b random.h}.}\par
}
{\xe \v RNG_CONFIG\:random.h}
{\xe \v random.h\:RNG_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_CONFIG\~ 0x504}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration register. }}\par
{
Definition at line {\b 43} of file {\b random.h}.}\par
}
{\xe \v RNG_EVENT_CLEAR\:random.h}
{\xe \v random.h\:RNG_EVENT_CLEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_EVENT_CLEAR\~ 0}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for clearing/stopping an Event. }}\par
{
Definition at line {\b 49} of file {\b random.h}.}\par
}
{\xe \v RNG_EVENT_TRIGGER\:random.h}
{\xe \v random.h\:RNG_EVENT_TRIGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_EVENT_TRIGGER\~ 1}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for setting/starting an Event. }}\par
{
Definition at line {\b 48} of file {\b random.h}.}\par
}
{\xe \v RNG_INTEN\:random.h}
{\xe \v random.h\:RNG_INTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_INTEN\~ 0x300}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable interrupt. }}\par
{
Definition at line {\b 40} of file {\b random.h}.}\par
}
{\xe \v RNG_INTENCLR\:random.h}
{\xe \v random.h\:RNG_INTENCLR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_INTENCLR\~ 0x308}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable interrupt. }}\par
{
Definition at line {\b 42} of file {\b random.h}.}\par
}
{\xe \v RNG_INTENSET\:random.h}
{\xe \v random.h\:RNG_INTENSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_INTENSET\~ 0x304}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable interrupt. }}\par
{
Definition at line {\b 41} of file {\b random.h}.}\par
}
{\xe \v RNG_SHORTS\:random.h}
{\xe \v random.h\:RNG_SHORTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_SHORTS\~ 0x200}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Shortcut register. }}\par
{
Definition at line {\b 39} of file {\b random.h}.}\par
}
{\xe \v RNG_START\:random.h}
{\xe \v random.h\:RNG_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_START\~ 0x000}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task starting the random number generator. }}\par
{
Definition at line {\b 32} of file {\b random.h}.}\par
}
{\xe \v RNG_STOP\:random.h}
{\xe \v random.h\:RNG_STOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_STOP\~ 0x004}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Task stopping the random number generator. }}\par
{
Definition at line {\b 33} of file {\b random.h}.}\par
}
{\xe \v RNG_TASK_START\:random.h}
{\xe \v random.h\:RNG_TASK_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_TASK_START\~ 1}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for starting a Task. }}\par
{
Definition at line {\b 47} of file {\b random.h}.}\par
}
{\xe \v RNG_VALRDY\:random.h}
{\xe \v random.h\:RNG_VALRDY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_VALRDY\~ 0x100}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Event generated when new number is read. }}\par
{
Definition at line {\b 36} of file {\b random.h}.}\par
}
{\xe \v RNG_VALUE\:random.h}
{\xe \v random.h\:RNG_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RNG_VALUE\~ 0x508}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Output random number. }}\par
{
Definition at line {\b 44} of file {\b random.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rng_getRandomValue_immediately\:random.h}
{\xe \v random.h\:rng_getRandomValue_immediately}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t rng_getRandomValue_immediately ()}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator immediately. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function does not wait for the next value to be generated. It reads the current value from the RNG peripheral.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t A random byte. \par
}}}{
Definition at line {\b 27} of file {\b random.c}.}\par
{
\ql
References {\b register_read()}, {\b RNG_BASE_ADDRESS}, and {\b RNG_VALUE}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_ade0d5a07f6403292f21ff2b5f200f11f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_ade0d5a07f6403292f21ff2b5f200f11f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rng_getRandomValue_waiting\:random.h}
{\xe \v random.h\:rng_getRandomValue_waiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t rng_getRandomValue_waiting ()}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator by polling and waiting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function blocks until the RNG peripheral indicates that a new random value is ready. It then retrieves and returns the random byte.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t A random byte. \par
}}}{
Definition at line {\b 36} of file {\b random.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b RNG_BASE_ADDRESS}, {\b RNG_EVENT_CLEAR}, {\b rng_getRandomValue_immediately()}, and {\b RNG_VALRDY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_a0cc8207c13dfa65a8279450efa1751d3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_a0cc8207c13dfa65a8279450efa1751d3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rng_init\:random.h}
{\xe \v random.h\:rng_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void rng_init ()}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the generation of random numbers. }}\par
{
Definition at line {\b 21} of file {\b random.c}.}\par
{
\ql
References {\b register_write()}, {\b RNG_BASE_ADDRESS}, {\b RNG_START}, and {\b RNG_TASK_START}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_a892aefef3ee12161a32838eb5c6e3087_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d79/random_8h_a892aefef3ee12161a32838eb5c6e3087_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
random.h\par \pard\plain 
{\tc\tcl2 \v hal/random.h}
{\xe \v hal/random.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file random.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Header file for the RNG HAL.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the declarations and macros for interacting with the RNG}\par
00008 {\cf20  * peripheral, including initialization and random number retrieval.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup HAL}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see random.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @note}\par
00015 {\cf20  * Based on version by Thomas Vogt}\par
00016 {\cf20  *}\par
00017 {\cf20  * @copyright}\par
00018 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00019 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00020 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00021 {\cf20  */}\par
00022 \par
00023 {\cf21 #ifndef RANDOM_H}\par
00024 {\cf21 #define RANDOM_H}\par
00025 \par
00026 {\cf21 #include <stdint.h>}\par
00027 \par
00028 {\cf21 #define RNG_BASE_ADDRESS 0x4000D000}{\cf20 ///< Base address of the RNG peripheral}\par
00029 \par
00030 {\cf20 // Register Offsets (from Table 174, page 115)}\par
00031 {\cf20 // Tasks:}\par
00032 {\cf21 #define RNG_START 0x000}{\cf20 ///< Task starting the random number generator}\par
00033 {\cf21 #define RNG_STOP 0x004 }{\cf20 ///< Task stopping the random number generator}\par
00034 \par
00035 {\cf20 // Events:}\par
00036 {\cf21 #define RNG_VALRDY 0x100}{\cf20 ///< Event generated when new number is read}\par
00037 \par
00038 {\cf20 // Registers:}\par
00039 {\cf21 #define RNG_SHORTS 0x200  }{\cf20 ///< Shortcut register}\par
00040 {\cf21 #define RNG_INTEN 0x300   }{\cf20 ///< Enable or disable interrupt}\par
00041 {\cf21 #define RNG_INTENSET 0x304}{\cf20 ///< Enable interrupt}\par
00042 {\cf21 #define RNG_INTENCLR 0x308}{\cf20 ///< Disable interrupt}\par
00043 {\cf21 #define RNG_CONFIG 0x504  }{\cf20 ///< Configuration register}\par
00044 {\cf21 #define RNG_VALUE 0x508   }{\cf20 ///< Output random number}\par
00045 \par
00046 {\cf20 // Other:}\par
00047 {\cf21 #define RNG_TASK_START 1   }{\cf20 ///< Value for starting a Task}\par
00048 {\cf21 #define RNG_EVENT_TRIGGER 1}{\cf20 ///< Value for setting/starting an Event}\par
00049 {\cf21 #define RNG_EVENT_CLEAR 0  }{\cf20 ///< Value for clearing/stopping an Event}\par
00050 {\cf20 }\par
00051 {\cf20 /**}\par
00052 {\cf20  * @brief Enables the generation of random numbers.}\par
00053 {\cf20  */}\par
00054 {\cf18 void} rng_init();\par
00055 {\cf20 }\par
00056 {\cf20 /**}\par
00057 {\cf20  * @brief Get the Random Value from the generator immediately.}\par
00058 {\cf20  *}\par
00059 {\cf20  * @details}\par
00060 {\cf20  * The function does not wait for the next value to be generated. It reads the}\par
00061 {\cf20  * current value from the RNG peripheral.}\par
00062 {\cf20  *}\par
00063 {\cf20  * @return uint8_t A random byte.}\par
00064 {\cf20  */}\par
00065 uint8_t rng_getRandomValue_immediately();\par
00066 {\cf20 }\par
00067 {\cf20 /**}\par
00068 {\cf20  * @brief Get the Random Value from the generator by polling and waiting.}\par
00069 {\cf20  *}\par
00070 {\cf20  * @details}\par
00071 {\cf20  * This function blocks until the RNG peripheral indicates that a new random}\par
00072 {\cf20  * value is ready. It then retrieves and returns the random byte.}\par
00073 {\cf20  *}\par
00074 {\cf20  * @return uint8_t A random byte.}\par
00075 {\cf20  */}\par
00076 uint8_t rng_getRandomValue_waiting();\par
00077 \par
00078 {\cf21 #endif}{\cf20 // RANDOM_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/register_access.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/register_access.h}
{\xe \v hal/register_access.h}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for register_access.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dff/register__access_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddc/register__access_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b register_write} (uint32_t address, uint32_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a value to a hardware register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b register_read} (uint32_t address)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from a hardware register. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides an interface for reading from and writing to hardware registers.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b register_access.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ensure that the provided addresses are valid and aligned as required by the hardware.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Thomas Vogt \par
Sven Reis\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b register_access.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v register_read\:register_access.h}
{\xe \v register_access.h\:register_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t register_read (uint32_t address)}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from a hardware register. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{Memory address of the register.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Value read from the register. \par
}}}{
Definition at line {\b 29} of file {\b register_access.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d33/register__access_8h_a622715efc93f28ec149d81b793eef17b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v register_write\:register_access.h}
{\xe \v register_access.h\:register_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void register_write (uint32_t address, uint32_t value)}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a value to a hardware register. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{Memory address of the register. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{Value to write to the register. \cell }
{\row }
}
}{
Definition at line {\b 20} of file {\b register_access.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d33/register__access_8h_a95fe6fba2bc246f49af61e076d1153fe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
register_access.h\par \pard\plain 
{\tc\tcl2 \v hal/register_access.h}
{\xe \v hal/register_access.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file register_access.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Register Access Interface}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides an interface for reading from and writing to hardware registers.}\par
00008 {\cf20  *}\par
00009 {\cf20  * @ingroup HAL}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see}\par
00012 {\cf20  *  register_access.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @note}\par
00015 {\cf20  *  Ensure that the provided addresses are valid and aligned as required by the hardware.}\par
00016 {\cf20  *}\par
00017 {\cf20  * @author Thomas Vogt}\par
00018 {\cf20  * @author Sven Reis}\par
00019 {\cf20  *}\par
00020 {\cf20  * @copyright}\par
00021 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00022 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00023 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00024 {\cf20  */}\par
00025 \par
00026 {\cf21 #ifndef REGISTERACCESS_H}\par
00027 {\cf21 #define REGISTERACCESS_H}\par
00028 \par
00029 {\cf21 #include <stdint.h>}\par
00030 {\cf20 }\par
00031 {\cf20 /**}\par
00032 {\cf20  * @brief Write a value to a hardware register.}\par
00033 {\cf20  *}\par
00034 {\cf20  * @param[in] address Memory address of the register.}\par
00035 {\cf20  * @param[in] value Value to write to the register.}\par
00036 {\cf20  */}\par
00037 {\cf18 void} register_write(uint32_t address, uint32_t value);\par
00038 {\cf20 }\par
00039 {\cf20 /**}\par
00040 {\cf20  * @brief Read a value from a hardware register.}\par
00041 {\cf20  *}\par
00042 {\cf20  * @param[in] address Memory address of the register.}\par
00043 {\cf20  *}\par
00044 {\cf20  * @return Value read from the register.}\par
00045 {\cf20  */}\par
00046 uint32_t register_read(uint32_t address);\par
00047 \par
00048 {\cf21 #endif}{\cf20 // REGISTERACCESS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/system.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/system.h}
{\xe \v hal/system.h}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System control interface for hardware abstraction layer. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d37/system_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYS_AIRCR}\~ 0xE000ED0C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of the Application Interrupt and Reset Control Register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYS_VECTKEY}\~ (0x5FA << 16)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Key required to write to SYS_AIRCR. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYS_SYSRESETREQ}\~ (1 << 2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask to trigger a system reset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYS_POWER}\~ 0x40000000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address for power control registers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYS_SYSTEMOFF}\~ 0x500\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset for the system off mode register. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b system_softReset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger a soft reset of the system. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b system_offMode} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers "off" mode of the system. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
System control interface for hardware abstraction layer. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains macros and function declarations for controlling system-level operations such as soft reset and power-off mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b system.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b system.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SYS_AIRCR\:system.h}
{\xe \v system.h\:SYS_AIRCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYS_AIRCR\~ 0xE000ED0C}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Address of the Application Interrupt and Reset Control Register. }}\par
{
Definition at line {\b 27} of file {\b system.h}.}\par
}
{\xe \v SYS_POWER\:system.h}
{\xe \v system.h\:SYS_POWER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYS_POWER\~ 0x40000000}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address for power control registers. }}\par
{
Definition at line {\b 45} of file {\b system.h}.}\par
}
{\xe \v SYS_SYSRESETREQ\:system.h}
{\xe \v system.h\:SYS_SYSRESETREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYS_SYSRESETREQ\~ (1 << 2)}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bit mask to trigger a system reset. }}\par
{
Definition at line {\b 39} of file {\b system.h}.}\par
}
{\xe \v SYS_SYSTEMOFF\:system.h}
{\xe \v system.h\:SYS_SYSTEMOFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYS_SYSTEMOFF\~ 0x500}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset for the system off mode register. }}\par
{
Definition at line {\b 51} of file {\b system.h}.}\par
}
{\xe \v SYS_VECTKEY\:system.h}
{\xe \v system.h\:SYS_VECTKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYS_VECTKEY\~ (0x5FA << 16)}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Key required to write to SYS_AIRCR. }}\par
{
Definition at line {\b 33} of file {\b system.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v system_offMode\:system.h}
{\xe \v system.h\:system_offMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void system_offMode ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers "off" mode of the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Never returns}  \par
}}}{
Definition at line {\b 26} of file {\b system.c}.}\par
{
\ql
References {\b register_write()}, {\b SYS_POWER}, and {\b SYS_SYSTEMOFF}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/db2/system_8h_a077a1d054ddfb6fb237fb8d288b3b1d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/db2/system_8h_a077a1d054ddfb6fb237fb8d288b3b1d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v system_softReset\:system.h}
{\xe \v system.h\:system_softReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void system_softReset ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger a soft reset of the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Never returns}  \par
}}}{
Definition at line {\b 18} of file {\b system.c}.}\par
{
\ql
References {\b register_write()}, {\b SYS_AIRCR}, {\b SYS_SYSRESETREQ}, and {\b SYS_VECTKEY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/db2/system_8h_a97bacc4493b8a3008bdbdd7a83e86642_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/db2/system_8h_a97bacc4493b8a3008bdbdd7a83e86642_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
system.h\par \pard\plain 
{\tc\tcl2 \v hal/system.h}
{\xe \v hal/system.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file system.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief System control interface for hardware abstraction layer.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains macros and function declarations for controlling}\par
00008 {\cf20  * system-level operations such as soft reset and power-off mode.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup HAL}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see system.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 \par
00020 {\cf21 #ifndef SYSTEM_H}\par
00021 {\cf21 #define SYSTEM_H}\par
00022 {\cf20 }\par
00023 {\cf20 /**}\par
00024 {\cf20  * @def SYS_AIRCR}\par
00025 {\cf20  * @brief Address of the Application Interrupt and Reset Control Register.}\par
00026 {\cf20  */}\par
00027 {\cf21 #define SYS_AIRCR 0xE000ED0C}\par
00028 {\cf20 }\par
00029 {\cf20 /**}\par
00030 {\cf20  * @def SYS_VECTKEY}\par
00031 {\cf20  * @brief Key required to write to SYS_AIRCR.}\par
00032 {\cf20  */}\par
00033 {\cf21 #define SYS_VECTKEY (0x5FA << 16)}\par
00034 {\cf20 }\par
00035 {\cf20 /**}\par
00036 {\cf20  * @def SYS_SYSRESETREQ}\par
00037 {\cf20  * @brief Bit mask to trigger a system reset.}\par
00038 {\cf20  */}\par
00039 {\cf21 #define SYS_SYSRESETREQ (1 << 2)}\par
00040 {\cf20 }\par
00041 {\cf20 /**}\par
00042 {\cf20  * @def SYS_POWER}\par
00043 {\cf20  * @brief Base address for power control registers.}\par
00044 {\cf20  */}\par
00045 {\cf21 #define SYS_POWER 0x40000000}\par
00046 {\cf20 }\par
00047 {\cf20 /**}\par
00048 {\cf20  * @def SYS_SYSTEMOFF}\par
00049 {\cf20  * @brief Offset for the system off mode register.}\par
00050 {\cf20  */}\par
00051 {\cf21 #define SYS_SYSTEMOFF 0x500}\par
00052 {\cf20 }\par
00053 {\cf20 /**}\par
00054 {\cf20  * @brief Trigger a soft reset of the system.}\par
00055 {\cf20  *}\par
00056 {\cf20  * @note **Never returns**}\par
00057 {\cf20  */}\par
00058 {\cf18 void} system_softReset();\par
00059 {\cf20 }\par
00060 {\cf20 /**}\par
00061 {\cf20  * @brief Triggers "off" mode of the system.}\par
00062 {\cf20  *}\par
00063 {\cf20  * @note **Never returns**}\par
00064 {\cf20  */}\par
00065 {\cf18 void} system_offMode();\par
00066 \par
00067 {\cf21 #endif}{\cf20 // SYSTEM_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/timer.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/timer.h}
{\xe \v hal/timer.h}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the COUNTER device. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "def.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for timer.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d2e/timer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d89/timer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER0_BASE_ADDRESS}\~ 0x40008000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER1_BASE_ADDRESS}\~ 0x40009000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER2_BASE_ADDRESS}\~ 0x4000A000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_START}\~ 0x000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_STOP}\~ 0x004\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_COUNT}\~ 0x008\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CLEAR}\~ 0x00C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_SHUTDOWN}\~ 0x010\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CAPTURE_0}\~ 0x040\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CAPTURE_1}\~ 0x044\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CAPTURE_2}\~ 0x048\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CAPTURE_3}\~ 0x04C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_COMPARE_0}\~ 0x140\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_COMPARE_1}\~ 0x144\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_COMPARE_2}\~ 0x148\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_COMPARE_3}\~ 0x14C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_SHORTS}\~ 0x200\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_INTENSET}\~ 0x304\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_INTENCLR}\~ 0x308\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_MODE}\~ 0x504\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_BITMODE}\~ 0x508\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_PRESCALER}\~ 0x510\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CC_0}\~ 0x540\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CC_1}\~ 0x544\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CC_2}\~ 0x548\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_CC_3}\~ 0x54C\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_TASK_START}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_EVENT_TRIGGER}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_EVENT_CLEAR}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE0_CLEAR_ENABLE}\~ (1 << 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE0_CLEAR_DISABLE}\~ (0 << 0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE1_CLEAR_ENABLE}\~ (1 << 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE1_CLEAR_DISABLE}\~ (0 << 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE0_STOP_ENABLE}\~ (1 << 8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE0_STOP_DISABLE}\~ (0 << 8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE1_STOP_ENABLE}\~ (1 << 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHORTS_COMPARE1_STOP_DISABLE}\~ (0 << 9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_COMPARE0}\~ (1 << 16)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_COMPARE1}\~ (1 << 17)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_COMPARE2}\~ (1 << 18)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_COMPARE3}\~ (1 << 19)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b Timer} {\b Timer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b TimerBitMode} {\b TimerBitMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef enum {\b TimerCaptureCompare} {\b TimerCaptureCompare}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Timer} \{ {\b TIMER0}
, {\b TIMER1}
, {\b TIMER2}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TimerBitMode} \{ {\b TIMER_BIT_MODE_16} = 0
, {\b TIMER_BIT_MODE_8} = 1
, {\b TIMER_BIT_MODE_24} = 2
, {\b TIMER_BIT_MODE_32} = 3
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TimerCaptureCompare} \{ {\b CC0}
, {\b CC1}
, {\b CC2}
, {\b CC3}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_init} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Initialisation of Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_init_detailed} ({\b Timer} timer, uint8_t prescaler, {\b TimerBitMode} bitMode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialises the Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_captureCompareSet} ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare, uint32_t value, {\b bool} shortcutClear)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Capture/ Compare Register of the Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b timer_captureCompareGet} ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capture Compare Register of Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_start} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_stop} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_count} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activate counting on the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_clear} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the time of the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_capture} ({\b Timer} timer, {\b TimerCaptureCompare} capture)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture the time of the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_clearCompareEvent} ({\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the Compare Event for CC[0]. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the COUNTER device. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b timer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v INT_COMPARE0\:timer.h}
{\xe \v timer.h\:INT_COMPARE0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_COMPARE0\~ (1 << 16)}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b timer.h}.}\par
}
{\xe \v INT_COMPARE1\:timer.h}
{\xe \v timer.h\:INT_COMPARE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_COMPARE1\~ (1 << 17)}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b timer.h}.}\par
}
{\xe \v INT_COMPARE2\:timer.h}
{\xe \v timer.h\:INT_COMPARE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_COMPARE2\~ (1 << 18)}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b timer.h}.}\par
}
{\xe \v INT_COMPARE3\:timer.h}
{\xe \v timer.h\:INT_COMPARE3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_COMPARE3\~ (1 << 19)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE0_CLEAR_DISABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE0_CLEAR_DISABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE0_CLEAR_DISABLE\~ (0 << 0)}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE0_CLEAR_ENABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE0_CLEAR_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE0_CLEAR_ENABLE\~ (1 << 0)}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE0_STOP_DISABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE0_STOP_DISABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE0_STOP_DISABLE\~ (0 << 8)}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE0_STOP_ENABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE0_STOP_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE0_STOP_ENABLE\~ (1 << 8)}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE1_CLEAR_DISABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE1_CLEAR_DISABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE1_CLEAR_DISABLE\~ (0 << 1)}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE1_CLEAR_ENABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE1_CLEAR_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE1_CLEAR_ENABLE\~ (1 << 1)}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE1_STOP_DISABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE1_STOP_DISABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE1_STOP_DISABLE\~ (0 << 9)}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b timer.h}.}\par
}
{\xe \v SHORTS_COMPARE1_STOP_ENABLE\:timer.h}
{\xe \v timer.h\:SHORTS_COMPARE1_STOP_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHORTS_COMPARE1_STOP_ENABLE\~ (1 << 9)}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b timer.h}.}\par
}
{\xe \v TIMER0_BASE_ADDRESS\:timer.h}
{\xe \v timer.h\:TIMER0_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER0_BASE_ADDRESS\~ 0x40008000}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b timer.h}.}\par
}
{\xe \v TIMER1_BASE_ADDRESS\:timer.h}
{\xe \v timer.h\:TIMER1_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER1_BASE_ADDRESS\~ 0x40009000}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b timer.h}.}\par
}
{\xe \v TIMER2_BASE_ADDRESS\:timer.h}
{\xe \v timer.h\:TIMER2_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER2_BASE_ADDRESS\~ 0x4000A000}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b timer.h}.}\par
}
{\xe \v TIMER_BITMODE\:timer.h}
{\xe \v timer.h\:TIMER_BITMODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_BITMODE\~ 0x508}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CAPTURE_0\:timer.h}
{\xe \v timer.h\:TIMER_CAPTURE_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CAPTURE_0\~ 0x040}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CAPTURE_1\:timer.h}
{\xe \v timer.h\:TIMER_CAPTURE_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CAPTURE_1\~ 0x044}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CAPTURE_2\:timer.h}
{\xe \v timer.h\:TIMER_CAPTURE_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CAPTURE_2\~ 0x048}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CAPTURE_3\:timer.h}
{\xe \v timer.h\:TIMER_CAPTURE_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CAPTURE_3\~ 0x04C}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CC_0\:timer.h}
{\xe \v timer.h\:TIMER_CC_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CC_0\~ 0x540}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CC_1\:timer.h}
{\xe \v timer.h\:TIMER_CC_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CC_1\~ 0x544}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CC_2\:timer.h}
{\xe \v timer.h\:TIMER_CC_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CC_2\~ 0x548}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CC_3\:timer.h}
{\xe \v timer.h\:TIMER_CC_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CC_3\~ 0x54C}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b timer.h}.}\par
}
{\xe \v TIMER_CLEAR\:timer.h}
{\xe \v timer.h\:TIMER_CLEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_CLEAR\~ 0x00C}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b timer.h}.}\par
}
{\xe \v TIMER_COMPARE_0\:timer.h}
{\xe \v timer.h\:TIMER_COMPARE_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_COMPARE_0\~ 0x140}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b timer.h}.}\par
}
{\xe \v TIMER_COMPARE_1\:timer.h}
{\xe \v timer.h\:TIMER_COMPARE_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_COMPARE_1\~ 0x144}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b timer.h}.}\par
}
{\xe \v TIMER_COMPARE_2\:timer.h}
{\xe \v timer.h\:TIMER_COMPARE_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_COMPARE_2\~ 0x148}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b timer.h}.}\par
}
{\xe \v TIMER_COMPARE_3\:timer.h}
{\xe \v timer.h\:TIMER_COMPARE_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_COMPARE_3\~ 0x14C}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b timer.h}.}\par
}
{\xe \v TIMER_COUNT\:timer.h}
{\xe \v timer.h\:TIMER_COUNT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_COUNT\~ 0x008}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b timer.h}.}\par
}
{\xe \v TIMER_EVENT_CLEAR\:timer.h}
{\xe \v timer.h\:TIMER_EVENT_CLEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_EVENT_CLEAR\~ 0}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b timer.h}.}\par
}
{\xe \v TIMER_EVENT_TRIGGER\:timer.h}
{\xe \v timer.h\:TIMER_EVENT_TRIGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_EVENT_TRIGGER\~ 1}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b timer.h}.}\par
}
{\xe \v TIMER_INTENCLR\:timer.h}
{\xe \v timer.h\:TIMER_INTENCLR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_INTENCLR\~ 0x308}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b timer.h}.}\par
}
{\xe \v TIMER_INTENSET\:timer.h}
{\xe \v timer.h\:TIMER_INTENSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_INTENSET\~ 0x304}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b timer.h}.}\par
}
{\xe \v TIMER_MODE\:timer.h}
{\xe \v timer.h\:TIMER_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_MODE\~ 0x504}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b timer.h}.}\par
}
{\xe \v TIMER_PRESCALER\:timer.h}
{\xe \v timer.h\:TIMER_PRESCALER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_PRESCALER\~ 0x510}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b timer.h}.}\par
}
{\xe \v TIMER_SHORTS\:timer.h}
{\xe \v timer.h\:TIMER_SHORTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_SHORTS\~ 0x200}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b timer.h}.}\par
}
{\xe \v TIMER_SHUTDOWN\:timer.h}
{\xe \v timer.h\:TIMER_SHUTDOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_SHUTDOWN\~ 0x010}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b timer.h}.}\par
}
{\xe \v TIMER_START\:timer.h}
{\xe \v timer.h\:TIMER_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_START\~ 0x000}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b timer.h}.}\par
}
{\xe \v TIMER_STOP\:timer.h}
{\xe \v timer.h\:TIMER_STOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_STOP\~ 0x004}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b timer.h}.}\par
}
{\xe \v TIMER_TASK_START\:timer.h}
{\xe \v timer.h\:TIMER_TASK_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_TASK_START\~ 1}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b timer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Timer\:timer.h}
{\xe \v timer.h\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b Timer} {\b Timer}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TimerBitMode\:timer.h}
{\xe \v timer.h\:TimerBitMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b TimerBitMode} {\b TimerBitMode}}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TimerCaptureCompare\:timer.h}
{\xe \v timer.h\:TimerCaptureCompare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef enum {\b TimerCaptureCompare} {\b TimerCaptureCompare}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Timer\:timer.h}
{\xe \v timer.h\:Timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Timer}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TIMER0\:timer.h}
{\xe \v timer.h\:TIMER0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER0{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
\cell }{\cell }{\row }
{\xe \v TIMER1\:timer.h}
{\xe \v timer.h\:TIMER1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER1{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
\cell }{\cell }{\row }
{\xe \v TIMER2\:timer.h}
{\xe \v timer.h\:TIMER2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER2{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 79} of file {\b timer.h}.}\par
}
{\xe \v TimerBitMode\:timer.h}
{\xe \v timer.h\:TimerBitMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TimerBitMode}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TIMER_BIT_MODE_16\:timer.h}
{\xe \v timer.h\:TIMER_BIT_MODE_16}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER_BIT_MODE_16{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
\cell }{\cell }{\row }
{\xe \v TIMER_BIT_MODE_8\:timer.h}
{\xe \v timer.h\:TIMER_BIT_MODE_8}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER_BIT_MODE_8{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
\cell }{\cell }{\row }
{\xe \v TIMER_BIT_MODE_24\:timer.h}
{\xe \v timer.h\:TIMER_BIT_MODE_24}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER_BIT_MODE_24{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
\cell }{\cell }{\row }
{\xe \v TIMER_BIT_MODE_32\:timer.h}
{\xe \v timer.h\:TIMER_BIT_MODE_32}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid TIMER_BIT_MODE_32{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 86} of file {\b timer.h}.}\par
}
{\xe \v TimerCaptureCompare\:timer.h}
{\xe \v timer.h\:TimerCaptureCompare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b TimerCaptureCompare}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CC0\:timer.h}
{\xe \v timer.h\:CC0}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CC0{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
\cell }{\cell }{\row }
{\xe \v CC1\:timer.h}
{\xe \v timer.h\:CC1}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CC1{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
\cell }{\cell }{\row }
{\xe \v CC2\:timer.h}
{\xe \v timer.h\:CC2}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CC2{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
\cell }{\cell }{\row }
{\xe \v CC3\:timer.h}
{\xe \v timer.h\:CC3}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid CC3{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 94} of file {\b timer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v timer_capture\:timer.h}
{\xe \v timer.h\:timer_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_capture ({\b Timer} timer, {\b TimerCaptureCompare} capture)}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture the time of the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i capture} \cell }{Number of the Capture Compare \cell }
{\row }
}
}{
Definition at line {\b 120} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_TASK_START}, {\b TimerBase}, and {\b TimerCaptureTaskOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_aeead0154b3b62864306f110bf0a4c6e3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_captureCompareGet\:timer.h}
{\xe \v timer.h\:timer_captureCompareGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t timer_captureCompareGet ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare)}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capture Compare Register of Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timer} \cell }{Timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i captureCompare} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 84} of file {\b timer.c}.}\par
{
\ql
References {\b register_read()}, {\b TimerBase}, and {\b TimerCCOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a27edd6464c2ccbb04bcdc372c79d53c5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_captureCompareSet\:timer.h}
{\xe \v timer.h\:timer_captureCompareSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_captureCompareSet ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare, uint32_t value, {\b bool} shortcutClear)}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Capture/ Compare Register of the Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It also enables the shortcut between CC[0] and CLEAR, so that the timer is cleared, when the compared value is reached.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i captureCompare} \cell }{Capture Compare Register \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{New Value \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i shortcutClear} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 67} of file {\b timer.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b TIMER_SHORTS}, {\b TimerBase}, and {\b TimerCCOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a187b2c6fb447a488c951f169c63288ca_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a187b2c6fb447a488c951f169c63288ca_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_clear\:timer.h}
{\xe \v timer.h\:timer_clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_clear ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the time of the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 113} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_CLEAR}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_ae4072eb0e60429d2f79012b9910e4ff3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_clearCompareEvent\:timer.h}
{\xe \v timer.h\:timer_clearCompareEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_clearCompareEvent ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the Compare Event for CC[0]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This could be useful for stopping the timer from pulling the interrupt-line. \par
}{
Definition at line {\b 128} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_COMPARE_0}, {\b TIMER_EVENT_CLEAR}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a4f5363f092c0a32120cc8ea1947f3c07_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_count\:timer.h}
{\xe \v timer.h\:timer_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_count ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activate counting on the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 106} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_COUNT}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_af979b016721acb0b47a5118e1ea8fd93_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_init\:timer.h}
{\xe \v timer.h\:timer_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_init ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Initialisation of Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Timer Peripheral to a value ~4sek. This is just for demonstration and could be changed to your needs \par
}{
Definition at line {\b 40} of file {\b timer.c}.}\par
{
\ql
References {\b CC0}, {\b TIMER_BIT_MODE_32}, {\b timer_captureCompareSet()}, {\b timer_init_detailed()}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a250fd88bd3fef522cbe9c8acf61f2001_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_init_detailed\:timer.h}
{\xe \v timer.h\:timer_init_detailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_init_detailed ({\b Timer} timer, uint8_t prescaler, {\b TimerBitMode} bitMode)}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialises the Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Value set is for CC[0]\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i prescaler} \cell }{Register value according to {\f2 Table 147: PRESCALER} . value 0..9 is valid ==> 2^0 .. 2^9 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i bitmode} \cell }{Bit Mode. \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b timer.c}.}\par
{
\ql
References {\b INT_COMPARE0}, {\b Interrupt_ID8}, {\b Interrupt_Set_Enable}, {\b register_write()}, {\b TIMER0_BASE_ADDRESS}, {\b TIMER_BITMODE}, {\b TIMER_INTENSET}, {\b TIMER_PRESCALER}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a41416d2d4a6d6b4611a7ae03d8db3653_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a41416d2d4a6d6b4611a7ae03d8db3653_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_start\:timer.h}
{\xe \v timer.h\:timer_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_start ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Timer \cell }
{\row }
}
}{
Definition at line {\b 92} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_START}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a6eadb1a33087d2d06c24c0f832de0d72_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a6eadb1a33087d2d06c24c0f832de0d72_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_stop\:timer.h}
{\xe \v timer.h\:timer_stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_stop ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 99} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_STOP}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a8202b2148c7d8dd25e367ffd7b4f113d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dd0/timer_8h_a8202b2148c7d8dd25e367ffd7b4f113d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
timer.h\par \pard\plain 
{\tc\tcl2 \v hal/timer.h}
{\xe \v hal/timer.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file}\par
00003 {\cf20  *}\par
00004 {\cf20  * @ingroup HAL}\par
00005 {\cf20  *}\par
00006 {\cf20  * @brief Contains constants and abstraction functions for the COUNTER device}\par
00007 {\cf20  *}\par
00008 {\cf20  * @note}\par
00009 {\cf20  * Based on version by Thomas Vogt}\par
00010 {\cf20  *}\par
00011 {\cf20  * @copyright}\par
00012 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00013 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00014 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00015 {\cf20  */}\par
00016 {\cf21 #ifndef TIMER_H}\par
00017 {\cf21 #define TIMER_H}\par
00018 \par
00019 {\cf21 #include "def.h"}\par
00020 \par
00021 {\cf21 #include <stdint.h>}\par
00022 \par
00023 {\cf20 // Base Address (Instance)}\par
00024 {\cf21 #define TIMER0_BASE_ADDRESS 0x40008000}\par
00025 {\cf21 #define TIMER1_BASE_ADDRESS 0x40009000}\par
00026 {\cf21 #define TIMER2_BASE_ADDRESS 0x4000A000}\par
00027 \par
00028 {\cf20 // Register Offsets (from Table 141, page 100)}\par
00029 {\cf20 // Tasks:}\par
00030 {\cf21 #define TIMER_START 0x000   }{\cf20 // Start Timer}\par
00031 {\cf21 #define TIMER_STOP 0x004    }{\cf20 // Stop Timer}\par
00032 {\cf21 #define TIMER_COUNT 0x008   }{\cf20 // Increment Timer (Counter mode only)}\par
00033 {\cf21 #define TIMER_CLEAR 0x00C   }{\cf20 // Clear time}\par
00034 {\cf21 #define TIMER_SHUTDOWN 0x010}{\cf20 // Shut down timer}\par
00035 \par
00036 {\cf21 #define TIMER_CAPTURE_0 0x040}{\cf20 // Capture Timer value to CC[0] register}\par
00037 {\cf21 #define TIMER_CAPTURE_1 0x044}{\cf20 // Capture Timer value to CC[1] register}\par
00038 {\cf21 #define TIMER_CAPTURE_2 0x048}{\cf20 // Capture Timer value to CC[2] register}\par
00039 {\cf21 #define TIMER_CAPTURE_3 0x04C}{\cf20 // Capture Timer value to CC[3] register}\par
00040 \par
00041 {\cf20 // Events:}\par
00042 {\cf21 #define TIMER_COMPARE_0 0x140}{\cf20 // Compare event on CC[0] match}\par
00043 {\cf21 #define TIMER_COMPARE_1 0x144}{\cf20 // Compare event on CC[1] match}\par
00044 {\cf21 #define TIMER_COMPARE_2 0x148}{\cf20 // Compare event on CC[2] match}\par
00045 {\cf21 #define TIMER_COMPARE_3 0x14C}{\cf20 // Compare event on CC[3] match}\par
00046 \par
00047 {\cf20 // Registers:}\par
00048 {\cf21 #define TIMER_SHORTS 0x200   }{\cf20 // Shortcut register}\par
00049 {\cf21 #define TIMER_INTENSET 0x304 }{\cf20 // Enable interrupt}\par
00050 {\cf21 #define TIMER_INTENCLR 0x308 }{\cf20 // Disable interrupt}\par
00051 {\cf21 #define TIMER_MODE 0x504     }{\cf20 // Timer mode selection}\par
00052 {\cf21 #define TIMER_BITMODE 0x508  }{\cf20 // Configure the number of bits used by the TIMER}\par
00053 {\cf21 #define TIMER_PRESCALER 0x510}{\cf20 // Timer prescaler register}\par
00054 {\cf21 #define TIMER_CC_0 0x540     }{\cf20 // Capture/Compare register 0}\par
00055 {\cf21 #define TIMER_CC_1 0x544     }{\cf20 // Capture/Compare register 1}\par
00056 {\cf21 #define TIMER_CC_2 0x548     }{\cf20 // Capture/Compare register 2}\par
00057 {\cf21 #define TIMER_CC_3 0x54C     }{\cf20 // Capture/Compare register 3}\par
00058 \par
00059 {\cf20 // Other:}\par
00060 {\cf21 #define TIMER_TASK_START 1   }{\cf20 // Value for starting a Task}\par
00061 {\cf21 #define TIMER_EVENT_TRIGGER 1}{\cf20 // Value for setting/starting an Event}\par
00062 {\cf21 #define TIMER_EVENT_CLEAR 0  }{\cf20 // Value for clearing/stopping an Event}\par
00063 \par
00064 {\cf21 #define SHORTS_COMPARE0_CLEAR_ENABLE (1 << 0) }{\cf20 // Shortcut between COMPARE[0] event and CLEAR task}\par
00065 {\cf21 #define SHORTS_COMPARE0_CLEAR_DISABLE (0 << 0)}{\cf20 // Shortcut between COMPARE[0] event and CLEAR task}\par
00066 {\cf21 #define SHORTS_COMPARE1_CLEAR_ENABLE (1 << 1) }{\cf20 // Shortcut between COMPARE[1] event and CLEAR task}\par
00067 {\cf21 #define SHORTS_COMPARE1_CLEAR_DISABLE (0 << 1)}{\cf20 // Shortcut between COMPARE[1] event and CLEAR task}\par
00068 \par
00069 {\cf21 #define SHORTS_COMPARE0_STOP_ENABLE (1 << 8) }{\cf20 // Shortcut between COMPARE[0] event and STOP task}\par
00070 {\cf21 #define SHORTS_COMPARE0_STOP_DISABLE (0 << 8)}{\cf20 // Shortcut between COMPARE[0] event and STOP task}\par
00071 {\cf21 #define SHORTS_COMPARE1_STOP_ENABLE (1 << 9) }{\cf20 // Shortcut between COMPARE[1] event and STOP task}\par
00072 {\cf21 #define SHORTS_COMPARE1_STOP_DISABLE (0 << 9)}{\cf20 // Shortcut between COMPARE[1] event and STOP task}\par
00073 \par
00074 {\cf21 #define INT_COMPARE0 (1 << 16)}{\cf20 // Enable/Disable Interrupt on COMPARE[0] event}\par
00075 {\cf21 #define INT_COMPARE1 (1 << 17)}{\cf20 // Enable/Disable Interrupt on COMPARE[1] event}\par
00076 {\cf21 #define INT_COMPARE2 (1 << 18)}{\cf20 // Enable/Disable Interrupt on COMPARE[2] event}\par
00077 {\cf21 #define INT_COMPARE3 (1 << 19)}{\cf20 // Enable/Disable Interrupt on COMPARE[3] event}\par
00078 \par
00079 {\cf17 typedef} {\cf17 enum} Timer\par
00080 \{\par
00081     TIMER0,\par
00082     TIMER1,{\cf20 // unused}\par
00083     TIMER2 {\cf20 // unused}\par
00084 \} Timer;\par
00085 \par
00086 {\cf17 typedef} {\cf17 enum} TimerBitMode\par
00087 \{\par
00088     TIMER_BIT_MODE_16 = 0,\par
00089     TIMER_BIT_MODE_8 = 1,\par
00090     TIMER_BIT_MODE_24 = 2,\par
00091     TIMER_BIT_MODE_32 = 3,\par
00092 \} TimerBitMode;\par
00093 \par
00094 {\cf17 typedef} {\cf17 enum} TimerCaptureCompare\par
00095 \{\par
00096     CC0,\par
00097     CC1,\par
00098     CC2,\par
00099     CC3\par
00100 \} TimerCaptureCompare;\par
00101 {\cf20 }\par
00102 {\cf20 /**}\par
00103 {\cf20  * @brief Default Initialisation of Timer.}\par
00104 {\cf20  *}\par
00105 {\cf20  * Initializes the Timer Peripheral to a value ~4sek.}\par
00106 {\cf20  * This is just for demonstration and could be changed to your needs}\par
00107 {\cf20  **/}\par
00108 {\cf18 void} timer_init(Timer timer);\par
00109 {\cf20 }\par
00110 {\cf20 /**}\par
00111 {\cf20  * @brief Initialises the Timer.}\par
00112 {\cf20  *}\par
00113 {\cf20  * Compare Value set is for CC[0]}\par
00114 {\cf20  *}\par
00115 {\cf20  * @param[in] prescaler}\par
00116 {\cf20  *   Register value according to `Table 147: PRESCALER`.}\par
00117 {\cf20  *   value 0..9 is valid ==> 2^0 .. 2^9}\par
00118 {\cf20  * @param[in] bitmode Bit Mode.}\par
00119 {\cf20  **/}\par
00120 {\cf18 void} timer_init_detailed(Timer timer, uint8_t prescaler, TimerBitMode bitMode);\par
00121 {\cf20 }\par
00122 {\cf20 /**}\par
00123 {\cf20  * @brief Set the Capture/ Compare Register of the Timer.}\par
00124 {\cf20  *}\par
00125 {\cf20  * It also enables the shortcut between CC[0] and CLEAR, so that the timer is cleared, when the}\par
00126 {\cf20  *compared value is reached.}\par
00127 {\cf20  *}\par
00128 {\cf20  * @param[in] timer Timer}\par
00129 {\cf20  * @param[in] captureCompare Capture Compare Register}\par
00130 {\cf20  * @param[in] value New Value}\par
00131 {\cf20  * @param[in] shortcutClear}\par
00132 {\cf20  **/}\par
00133 {\cf18 void} timer_captureCompareSet(\par
00134     Timer timer,\par
00135     TimerCaptureCompare captureCompare,\par
00136     uint32_t value,\par
00137     {\cf18 bool} shortcutClear);\par
00138 {\cf20 }\par
00139 {\cf20 /**}\par
00140 {\cf20  * @brief Gets the Capture Compare Register of Timer.}\par
00141 {\cf20  *}\par
00142 {\cf20  * @param timer Timer}\par
00143 {\cf20  * @param captureCompare}\par
00144 {\cf20  *}\par
00145 {\cf20  * @return}\par
00146 {\cf20  **/}\par
00147 uint32_t timer_captureCompareGet(Timer timer, TimerCaptureCompare captureCompare);\par
00148 {\cf20 }\par
00149 {\cf20 /**}\par
00150 {\cf20  * @brief Starts the given timer}\par
00151 {\cf20  * @param [in] timer Timer}\par
00152 {\cf20  */}\par
00153 {\cf18 void} timer_start(Timer timer);\par
00154 {\cf20 }\par
00155 {\cf20 /**}\par
00156 {\cf20  * @brief Stops the given timer}\par
00157 {\cf20  * @param [in] timer}\par
00158 {\cf20  * Number of the timer}\par
00159 {\cf20  */}\par
00160 {\cf18 void} timer_stop(Timer timer);\par
00161 {\cf20 }\par
00162 {\cf20 /**}\par
00163 {\cf20  * @brief Activate counting on the given timer}\par
00164 {\cf20  * @param [in] timer}\par
00165 {\cf20  * Number of the timer}\par
00166 {\cf20  */}\par
00167 {\cf18 void} timer_count(Timer timer);\par
00168 {\cf20 }\par
00169 {\cf20 /**}\par
00170 {\cf20  * @brief Clear the time of the given timer}\par
00171 {\cf20  * @param [in] timer Number of the timer}\par
00172 {\cf20  */}\par
00173 {\cf18 void} timer_clear(Timer timer);\par
00174 {\cf20 }\par
00175 {\cf20 /**}\par
00176 {\cf20  * @brief Capture the time of the given timer}\par
00177 {\cf20  * @param [in] timer Number of the timer}\par
00178 {\cf20  * @param [in] capture Number of the Capture Compare}\par
00179 {\cf20  */}\par
00180 {\cf18 void} timer_capture(Timer timer, TimerCaptureCompare capture);\par
00181 {\cf20 }\par
00182 {\cf20 /**}\par
00183 {\cf20  * @brief Clears the Compare Event for CC[0]}\par
00184 {\cf20  *}\par
00185 {\cf20  * This could be useful for stopping the}\par
00186 {\cf20  * timer from pulling the interrupt-line.}\par
00187 {\cf20  */}\par
00188 {\cf18 void} timer_clearCompareEvent(Timer timer);\par
00189 \par
00190 {\cf21 #endif}{\cf20 // TIMER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/uart.h File Reference\par \pard\plain 
{\tc\tcl2 \v hal/uart.h}
{\xe \v hal/uart.h}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the UART device. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "def.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for uart.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d4e/uart_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d48/uart_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BASE_ADDRESS}\~ 0x40002000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address for UART registers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_STARTRX}\~ 0x000\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start UART receiver. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_STOPRX}\~ 0x004\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop UART receiver. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_STARTTX}\~ 0x008\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start UART transmitter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_STOPTX}\~ 0x00C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop UART transmitter. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_SUSPEND}\~ 0x01C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_CTS}\~ 0x100\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS is activated (set low). Clear To Send. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_NCTS}\~ 0x104\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS is deactivated (set high). Not Clear To Send. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_RXDRDY}\~ 0x108\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data received in RXD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_TXDRDY}\~ 0x11C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data sent from TXD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_ERROR}\~ 0x124\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error detected. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_RXTO}\~ 0x144\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver timeout. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_INTEN}\~ 0x300\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_INTENSET}\~ 0x304\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_INTENCLR}\~ 0x308\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_ERRORSRC}\~ 0x480\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error source. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_ENABLE}\~ 0x500\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable UART. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_PSELRTS}\~ 0x508\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for RTS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_PSELTXD}\~ 0x50C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for TXD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_PSELCTS}\~ 0x510\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for CTS. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_PSELRXD}\~ 0x514\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for RXD. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_RXD}\~ 0x518\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_TXD}\~ 0x51C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_BAUDRATE}\~ 0x524\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Baud rate. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_CONFIG}\~ 0x56C\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration of parity and hardware flow control. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_TASK_START}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for starting a Task. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_EVENT_TRIGGER}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for setting/starting an Event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_EVENT_CLEAR}\~ 0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for clearing/stopping an Event. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UART_INT_RXDRDY}\~ (1 << 2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt bit for RXDRDY event. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_init} ({\b bool} with_interrupts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the UART with the following settings: 115200-8-N-1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_writeByte} (uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes/Sends a byte over the serial port. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b uart_readByte} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads/Receives a byte from the serial port. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and abstraction functions for the UART device. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides macros for UART register offsets, tasks, events, and other configurations. It also declares functions for initializing the UART, sending, and receiving data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b uart.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v UART_BASE_ADDRESS\:uart.h}
{\xe \v uart.h\:UART_BASE_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_BASE_ADDRESS\~ 0x40002000}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Base address for UART registers. }}\par
{
Definition at line {\b 31} of file {\b uart.h}.}\par
}
{\xe \v UART_BAUDRATE\:uart.h}
{\xe \v uart.h\:UART_BAUDRATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_BAUDRATE\~ 0x524}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Baud rate. }}\par
{
Definition at line {\b 61} of file {\b uart.h}.}\par
}
{\xe \v UART_CONFIG\:uart.h}
{\xe \v uart.h\:UART_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_CONFIG\~ 0x56C}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Configuration of parity and hardware flow control. }}\par
{
Definition at line {\b 62} of file {\b uart.h}.}\par
}
{\xe \v UART_CTS\:uart.h}
{\xe \v uart.h\:UART_CTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_CTS\~ 0x100}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS is activated (set low). Clear To Send. }}\par
{
Definition at line {\b 42} of file {\b uart.h}.}\par
}
{\xe \v UART_ENABLE\:uart.h}
{\xe \v uart.h\:UART_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_ENABLE\~ 0x500}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable UART. }}\par
{
Definition at line {\b 54} of file {\b uart.h}.}\par
}
{\xe \v UART_ERROR\:uart.h}
{\xe \v uart.h\:UART_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_ERROR\~ 0x124}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error detected. }}\par
{
Definition at line {\b 46} of file {\b uart.h}.}\par
}
{\xe \v UART_ERRORSRC\:uart.h}
{\xe \v uart.h\:UART_ERRORSRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_ERRORSRC\~ 0x480}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Error source. }}\par
{
Definition at line {\b 53} of file {\b uart.h}.}\par
}
{\xe \v UART_EVENT_CLEAR\:uart.h}
{\xe \v uart.h\:UART_EVENT_CLEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_EVENT_CLEAR\~ 0}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for clearing/stopping an Event. }}\par
{
Definition at line {\b 67} of file {\b uart.h}.}\par
}
{\xe \v UART_EVENT_TRIGGER\:uart.h}
{\xe \v uart.h\:UART_EVENT_TRIGGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_EVENT_TRIGGER\~ 1}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for setting/starting an Event. }}\par
{
Definition at line {\b 66} of file {\b uart.h}.}\par
}
{\xe \v UART_INT_RXDRDY\:uart.h}
{\xe \v uart.h\:UART_INT_RXDRDY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_INT_RXDRDY\~ (1 << 2)}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Interrupt bit for RXDRDY event. }}\par
{
Definition at line {\b 69} of file {\b uart.h}.}\par
}
{\xe \v UART_INTEN\:uart.h}
{\xe \v uart.h\:UART_INTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_INTEN\~ 0x300}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable interrupt. }}\par
{
Definition at line {\b 50} of file {\b uart.h}.}\par
}
{\xe \v UART_INTENCLR\:uart.h}
{\xe \v uart.h\:UART_INTENCLR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_INTENCLR\~ 0x308}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disable interrupt. }}\par
{
Definition at line {\b 52} of file {\b uart.h}.}\par
}
{\xe \v UART_INTENSET\:uart.h}
{\xe \v uart.h\:UART_INTENSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_INTENSET\~ 0x304}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable interrupt. }}\par
{
Definition at line {\b 51} of file {\b uart.h}.}\par
}
{\xe \v UART_NCTS\:uart.h}
{\xe \v uart.h\:UART_NCTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_NCTS\~ 0x104}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CTS is deactivated (set high). Not Clear To Send. }}\par
{
Definition at line {\b 43} of file {\b uart.h}.}\par
}
{\xe \v UART_PSELCTS\:uart.h}
{\xe \v uart.h\:UART_PSELCTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_PSELCTS\~ 0x510}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for CTS. }}\par
{
Definition at line {\b 57} of file {\b uart.h}.}\par
}
{\xe \v UART_PSELRTS\:uart.h}
{\xe \v uart.h\:UART_PSELRTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_PSELRTS\~ 0x508}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for RTS. }}\par
{
Definition at line {\b 55} of file {\b uart.h}.}\par
}
{\xe \v UART_PSELRXD\:uart.h}
{\xe \v uart.h\:UART_PSELRXD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_PSELRXD\~ 0x514}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for RXD. }}\par
{
Definition at line {\b 58} of file {\b uart.h}.}\par
}
{\xe \v UART_PSELTXD\:uart.h}
{\xe \v uart.h\:UART_PSELTXD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_PSELTXD\~ 0x50C}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pin select for TXD. }}\par
{
Definition at line {\b 56} of file {\b uart.h}.}\par
}
{\xe \v UART_RXD\:uart.h}
{\xe \v uart.h\:UART_RXD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_RXD\~ 0x518}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RXD register. }}\par
{
Definition at line {\b 59} of file {\b uart.h}.}\par
}
{\xe \v UART_RXDRDY\:uart.h}
{\xe \v uart.h\:UART_RXDRDY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_RXDRDY\~ 0x108}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data received in RXD. }}\par
{
Definition at line {\b 44} of file {\b uart.h}.}\par
}
{\xe \v UART_RXTO\:uart.h}
{\xe \v uart.h\:UART_RXTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_RXTO\~ 0x144}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Receiver timeout. }}\par
{
Definition at line {\b 47} of file {\b uart.h}.}\par
}
{\xe \v UART_STARTRX\:uart.h}
{\xe \v uart.h\:UART_STARTRX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_STARTRX\~ 0x000}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start UART receiver. }}\par
{
Definition at line {\b 35} of file {\b uart.h}.}\par
}
{\xe \v UART_STARTTX\:uart.h}
{\xe \v uart.h\:UART_STARTTX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_STARTTX\~ 0x008}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start UART transmitter. }}\par
{
Definition at line {\b 37} of file {\b uart.h}.}\par
}
{\xe \v UART_STOPRX\:uart.h}
{\xe \v uart.h\:UART_STOPRX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_STOPRX\~ 0x004}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop UART receiver. }}\par
{
Definition at line {\b 36} of file {\b uart.h}.}\par
}
{\xe \v UART_STOPTX\:uart.h}
{\xe \v uart.h\:UART_STOPTX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_STOPTX\~ 0x00C}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop UART transmitter. }}\par
{
Definition at line {\b 38} of file {\b uart.h}.}\par
}
{\xe \v UART_SUSPEND\:uart.h}
{\xe \v uart.h\:UART_SUSPEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_SUSPEND\~ 0x01C}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Suspend UART. }}\par
{
Definition at line {\b 39} of file {\b uart.h}.}\par
}
{\xe \v UART_TASK_START\:uart.h}
{\xe \v uart.h\:UART_TASK_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_TASK_START\~ 1}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Value for starting a Task. }}\par
{
Definition at line {\b 65} of file {\b uart.h}.}\par
}
{\xe \v UART_TXD\:uart.h}
{\xe \v uart.h\:UART_TXD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_TXD\~ 0x51C}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TXD register. }}\par
{
Definition at line {\b 60} of file {\b uart.h}.}\par
}
{\xe \v UART_TXDRDY\:uart.h}
{\xe \v uart.h\:UART_TXDRDY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UART_TXDRDY\~ 0x11C}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data sent from TXD. }}\par
{
Definition at line {\b 45} of file {\b uart.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v uart_init\:uart.h}
{\xe \v uart.h\:uart_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_init ({\b bool} with_interrupts)}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the UART with the following settings: 115200-8-N-1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i with_interrupts} \cell }{Whether or not interrupts should be triggered. \cell }
{\row }
}
}{
Definition at line {\b 20} of file {\b uart.c}.}\par
{
\ql
References {\b Interrupt_ID2}, {\b Interrupt_Set_Enable}, {\b register_write()}, {\b UART_BASE_ADDRESS}, {\b UART_ENABLE}, {\b UART_INT_RXDRDY}, {\b UART_INTENSET}, {\b UART_STARTRX}, {\b UART_STARTTX}, and {\b UART_TASK_START}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a3606fcc4d5cdadc08d4b6e7df7f34f69_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a3606fcc4d5cdadc08d4b6e7df7f34f69_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v uart_readByte\:uart.h}
{\xe \v uart.h\:uart_readByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t uart_readByte ()}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads/Receives a byte from the serial port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t Received byte or 0 (zero) if nothing was received. \par
}}}{
Definition at line {\b 62} of file {\b uart.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b UART_BASE_ADDRESS}, {\b UART_EVENT_CLEAR}, {\b UART_RXD}, and {\b UART_RXDRDY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a991a6e99e9369a11dcf02bdf1d1ba6ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a991a6e99e9369a11dcf02bdf1d1ba6ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v uart_writeByte\:uart.h}
{\xe \v uart.h\:uart_writeByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_writeByte (uint8_t data)}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes/Sends a byte over the serial port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i data} \cell }{Byte to send. \cell }
{\row }
}
}{
Definition at line {\b 54} of file {\b uart.c}.}\par
{
\ql
References {\b register_write()}, {\b UART_BASE_ADDRESS}, and {\b UART_TXD}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a71bfcaa34f4c6ac6233d39ed5f8c87b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d86/uart_8h_a71bfcaa34f4c6ac6233d39ed5f8c87b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
uart.h\par \pard\plain 
{\tc\tcl2 \v hal/uart.h}
{\xe \v hal/uart.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file uart.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains constants and abstraction functions for the UART device.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides macros for UART register offsets, tasks, events, and other}\par
00008 {\cf20  * configurations. It also declares functions for initializing the UART, sending,}\par
00009 {\cf20  * and receiving data.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup HAL}\par
00012 {\cf20  *}\par
00013 {\cf20  * @see uart.c}\par
00014 {\cf20  *}\par
00015 {\cf20  * @note}\par
00016 {\cf20  * Based on version by Thomas Vogt}\par
00017 {\cf20  *}\par
00018 {\cf20  * @copyright}\par
00019 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00020 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00021 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00022 {\cf20  */}\par
00023 \par
00024 {\cf21 #ifndef UART_H}\par
00025 {\cf21 #define UART_H}\par
00026 \par
00027 {\cf21 #include "def.h"}\par
00028 {\cf21 #include <stdint.h>}\par
00029 \par
00030 {\cf20 // Base Address (Instance)}\par
00031 {\cf21 #define UART_BASE_ADDRESS 0x40002000}{\cf20 ///< Base address for UART registers.}\par
00032 \par
00033 {\cf20 // Register Offsets (from Table 275, page 154)}\par
00034 {\cf20 // Tasks:}\par
00035 {\cf21 #define UART_STARTRX 0x000}{\cf20 ///< Start UART receiver.}\par
00036 {\cf21 #define UART_STOPRX 0x004 }{\cf20 ///< Stop UART receiver.}\par
00037 {\cf21 #define UART_STARTTX 0x008}{\cf20 ///< Start UART transmitter.}\par
00038 {\cf21 #define UART_STOPTX 0x00C }{\cf20 ///< Stop UART transmitter.}\par
00039 {\cf21 #define UART_SUSPEND 0x01C}{\cf20 ///< Suspend UART.}\par
00040 \par
00041 {\cf20 // Events:}\par
00042 {\cf21 #define UART_CTS 0x100   }{\cf20 ///< CTS is activated (set low). Clear To Send.}\par
00043 {\cf21 #define UART_NCTS 0x104  }{\cf20 ///< CTS is deactivated (set high). Not Clear To Send.}\par
00044 {\cf21 #define UART_RXDRDY 0x108}{\cf20 ///< Data received in RXD.}\par
00045 {\cf21 #define UART_TXDRDY 0x11C}{\cf20 ///< Data sent from TXD.}\par
00046 {\cf21 #define UART_ERROR 0x124 }{\cf20 ///< Error detected.}\par
00047 {\cf21 #define UART_RXTO 0x144  }{\cf20 ///< Receiver timeout.}\par
00048 \par
00049 {\cf20 // Registers:}\par
00050 {\cf21 #define UART_INTEN 0x300   }{\cf20 ///< Enable or disable interrupt.}\par
00051 {\cf21 #define UART_INTENSET 0x304}{\cf20 ///< Enable interrupt.}\par
00052 {\cf21 #define UART_INTENCLR 0x308}{\cf20 ///< Disable interrupt.}\par
00053 {\cf21 #define UART_ERRORSRC 0x480}{\cf20 ///< Error source.}\par
00054 {\cf21 #define UART_ENABLE 0x500  }{\cf20 ///< Enable UART.}\par
00055 {\cf21 #define UART_PSELRTS 0x508 }{\cf20 ///< Pin select for RTS.}\par
00056 {\cf21 #define UART_PSELTXD 0x50C }{\cf20 ///< Pin select for TXD.}\par
00057 {\cf21 #define UART_PSELCTS 0x510 }{\cf20 ///< Pin select for CTS.}\par
00058 {\cf21 #define UART_PSELRXD 0x514 }{\cf20 ///< Pin select for RXD.}\par
00059 {\cf21 #define UART_RXD 0x518     }{\cf20 ///< RXD register.}\par
00060 {\cf21 #define UART_TXD 0x51C     }{\cf20 ///< TXD register.}\par
00061 {\cf21 #define UART_BAUDRATE 0x524}{\cf20 ///< Baud rate.}\par
00062 {\cf21 #define UART_CONFIG 0x56C  }{\cf20 ///< Configuration of parity and hardware flow control.}\par
00063 \par
00064 {\cf20 // Other:}\par
00065 {\cf21 #define UART_TASK_START 1   }{\cf20 ///< Value for starting a Task.}\par
00066 {\cf21 #define UART_EVENT_TRIGGER 1}{\cf20 ///< Value for setting/starting an Event.}\par
00067 {\cf21 #define UART_EVENT_CLEAR 0  }{\cf20 ///< Value for clearing/stopping an Event.}\par
00068 \par
00069 {\cf21 #define UART_INT_RXDRDY (1 << 2)}{\cf20 ///< Interrupt bit for RXDRDY event.}\par
00070 {\cf20 }\par
00071 {\cf20 /**}\par
00072 {\cf20  * @brief Initializes the UART with the following settings: 115200-8-N-1.}\par
00073 {\cf20  *}\par
00074 {\cf20  * @param[in] with_interrupts Whether or not interrupts should be triggered.}\par
00075 {\cf20  */}\par
00076 {\cf18 void} uart_init({\cf18 bool} with_interrupts);\par
00077 {\cf20 }\par
00078 {\cf20 /**}\par
00079 {\cf20  * @brief Writes/Sends a byte over the serial port.}\par
00080 {\cf20  *}\par
00081 {\cf20  * @param[in] data Byte to send.}\par
00082 {\cf20  */}\par
00083 {\cf18 void} uart_writeByte(uint8_t data);\par
00084 {\cf20 }\par
00085 {\cf20 /**}\par
00086 {\cf20  * @brief Reads/Receives a byte from the serial port.}\par
00087 {\cf20  *}\par
00088 {\cf20  * @return uint8_t Received byte or 0 (zero) if nothing was received.}\par
00089 {\cf20  */}\par
00090 uint8_t uart_readByte();\par
00091 \par
00092 {\cf21 #endif}{\cf20 // UART_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/bot.h File Reference\par \pard\plain 
{\tc\tcl2 \v logic/bot.h}
{\xe \v logic/bot.h}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bot logic for Tic-Tac-Toe game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include "presentation/field.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for bot.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/daa/bot_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d32/bot_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} * {\b bot_markRandomCell} ({\b Cell} cells[{\b CELLS_PER_COL}][{\b CELLS_PER_ROW}], {\b Player} marked_by)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark a random unmarked cell on the game board. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bot logic for Tic-Tac-Toe game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the declaration of functions used to implement bot logic for the Tic-Tac-Toe game, such as marking a random cell.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b bot.c} {\b game.h} {\b field.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b bot.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bot_markRandomCell\:bot.h}
{\xe \v bot.h\:bot_markRandomCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell} * bot_markRandomCell ({\b Cell} cells[CELLS_PER_COL][CELLS_PER_ROW], {\b Player} marked_by)}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark a random unmarked cell on the game board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cells} \cell }{2D field of cells representing the game board. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i marked_by} \cell }{Player who should mark the cell.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to the marked cell.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Warning\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function assumes that there is at least one unmarked cell on the board. If there is not, the function will loop indefinitely. \par
}}}{
Definition at line {\b 20} of file {\b bot.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b None}, and {\b rng_getRandomValue_waiting()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/de8/bot_8h_a54e3d0f1283055e089a09213936f5c43_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/de8/bot_8h_a54e3d0f1283055e089a09213936f5c43_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bot.h\par \pard\plain 
{\tc\tcl2 \v logic/bot.h}
{\xe \v logic/bot.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file bot.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Bot logic for Tic-Tac-Toe game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the declaration of functions used to implement bot logic}\par
00008 {\cf20  * for the Tic-Tac-Toe game, such as marking a random cell.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Logic}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see}\par
00013 {\cf20  *  bot.c}\par
00014 {\cf20  *  game.h}\par
00015 {\cf20  *  field.h}\par
00016 {\cf20  *}\par
00017 {\cf20  * @copyright}\par
00018 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00019 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00020 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00021 {\cf20  */}\par
00022 \par
00023 {\cf21 #ifndef BOT_H}\par
00024 {\cf21 #define BOT_H}\par
00025 \par
00026 {\cf21 #include "logic/game.h"}\par
00027 {\cf21 #include "presentation/field.h"}\par
00028 {\cf20 }\par
00029 {\cf20 /**}\par
00030 {\cf20  * @brief Mark a random unmarked cell on the game board.}\par
00031 {\cf20  *}\par
00032 {\cf20  * @param[inout] cells 2D field of cells representing the game board.}\par
00033 {\cf20  * @param[in] marked_by Player who should mark the cell.}\par
00034 {\cf20  *}\par
00035 {\cf20  * @return Pointer to the marked cell.}\par
00036 {\cf20  *}\par
00037 {\cf20  * @warning This function assumes that there is at least one unmarked cell}\par
00038 {\cf20  * on the board. If there is not, the function will loop indefinitely.}\par
00039 {\cf20  */}\par
00040 Cell *bot_markRandomCell(Cell cells[CELLS_PER_COL][CELLS_PER_ROW], Player marked_by);\par
00041 \par
00042 {\cf21 #endif}{\cf20 // BOT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/game.h File Reference\par \pard\plain 
{\tc\tcl2 \v logic/game.h}
{\xe \v logic/game.h}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the game logic. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/field.h"}\par
{\f2 #include "util/input_buf.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for game.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d10/game_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcc/game_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Cell}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One cell on the field. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GameState}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current game state. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CellState}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The current state of the cells. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REMAINING_TIME}\~ ({\b TICKS_PER_TURN} - g_timer.ticks_turn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remaining time for the current turn. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRST_ROUND}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant representing the first round of the game. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Mode} \{ {\b PVE}
, {\b PVP}
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Possible game modes. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Player} \{ {\b Circle} = 0
, {\b Cross} = 1
, {\b None} = 2
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum describing a player. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_run} (const {\b Mode} mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start the main game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_onTimeOut} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically end a turn in case the turn time is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_endTurn} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the current turn. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the game logic. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the core logic for the TikTakToe game, including game state management, player handling, and cell state tracking.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b game.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FIRST_ROUND\:game.h}
{\xe \v game.h\:FIRST_ROUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRST_ROUND\~ 1}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constant representing the first round of the game. }}\par
{
Definition at line {\b 28} of file {\b game.h}.}\par
}
{\xe \v REMAINING_TIME\:game.h}
{\xe \v game.h\:REMAINING_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REMAINING_TIME\~ ({\b TICKS_PER_TURN} - g_timer.ticks_turn)}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remaining time for the current turn. }}\par
{
Definition at line {\b 27} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Mode\:game.h}
{\xe \v game.h\:Mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Mode}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Possible game modes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The game can be played in Player vs Computer (PVE) or Player vs Player (PVP) mode. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PVE\:game.h}
{\xe \v game.h\:PVE}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid PVE{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player vs Computer. \par
}\cell }{\row }
{\xe \v PVP\:game.h}
{\xe \v game.h\:PVP}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid PVP{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player vs Player. \par
}\cell }{\row }
}
{
Definition at line {\b 35} of file {\b game.h}.}\par
}
{\xe \v Player\:game.h}
{\xe \v game.h\:Player}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Player}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum describing a player. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the two players (Circle and Cross) and an unmarked state (None). \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Circle\:game.h}
{\xe \v game.h\:Circle}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Circle{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player Circle. \par
}\cell }{\row }
{\xe \v Cross\:game.h}
{\xe \v game.h\:Cross}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Cross{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Player Cross. \par
}\cell }{\row }
{\xe \v None\:game.h}
{\xe \v game.h\:None}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid None{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No player (unmarked) \par
}\cell }{\row }
}
{
Definition at line {\b 46} of file {\b game.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v game_endTurn\:game.h}
{\xe \v game.h\:game_endTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_endTurn ()}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the current turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the game state and switches to the next player or round. \par
}{
Definition at line {\b 169} of file {\b game.c}.}\par
{
\ql
References {\b cell_state}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b GameState::fields_marked}, {\b game_state}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b GameState::mode}, {\b PVE}, {\b GameState::round}, {\b CellState::selected}, and {\b time_finishTurn()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a729e60fc5298c74e80423c136d1f6a5a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a729e60fc5298c74e80423c136d1f6a5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v game_onTimeOut\:game.h}
{\xe \v game.h\:game_onTimeOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_onTimeOut ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically end a turn in case the turn time is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time_onInterrupt} \par
}}}{
Definition at line {\b 149} of file {\b game.c}.}\par
{
\ql
References {\b CellState::all}, {\b bot_markRandomCell()}, {\b cell_state}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b force_ui_update}, {\b game_endTurn()}, {\b game_state}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b GameState::mode}, and {\b PVE}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a664affa156a0a5fa033bad0b88bb6c72_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a664affa156a0a5fa033bad0b88bb6c72_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v game_run\:game.h}
{\xe \v game.h\:game_run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_run (const {\b Mode} mode)}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start the main game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the game and enters the main game loop.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i mode} \cell }{Which mode the game should be played in. \cell }
{\row }
}
}{
Definition at line {\b 82} of file {\b game.c}.}\par
{
\ql
References {\b __WFI}, {\b CellState::all}, {\b BOLD}, {\b bot_markRandomCell()}, {\b calculateSummary()}, {\b cell_redraw_withModifier()}, {\b cell_redrawAll()}, {\b cell_select()}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b GameState::fields_marked}, {\b force_ui_update}, {\b g_input_buf}, {\b g_timer}, {\b game_state}, {\b handleForcedMoveUpdate()}, {\b init()}, {\b input_getNext()}, {\b input_handleByte()}, {\b GameTimer::is_running}, {\b CellState::last_circle}, {\b max}, {\b menu_showGameOver()}, {\b GameState::mode}, {\b None}, {\b PVE}, {\b redrawField()}, {\b REMAINING_TIME}, {\b GameState::round}, {\b CellState::selected}, {\b TICKS_PER_TURN}, {\b TIMER0}, {\b timer_stop()}, {\b ui_updateTimer()}, {\b ui_updateTurn()}, {\b GameState::winner}, and {\b winning_checkForWinner()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a99a6ceced9c8b9648cc11a086603d66e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dd5/game_8h_a99a6ceced9c8b9648cc11a086603d66e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
game.h\par \pard\plain 
{\tc\tcl2 \v logic/game.h}
{\xe \v logic/game.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file game.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains the game logic}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the core logic for the TikTakToe game, including}\par
00008 {\cf20  * game state management, player handling, and cell state tracking.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Logic}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see game.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 {\cf21 #ifndef GAME_H}\par
00020 {\cf21 #define GAME_H}\par
00021 \par
00022 {\cf21 #include "presentation/field.h"}\par
00023 {\cf21 #include "util/input_buf.h"}\par
00024 \par
00025 {\cf21 #include <stdint.h>}\par
00026 \par
00027 {\cf21 #define REMAINING_TIME (TICKS_PER_TURN - g_timer.ticks_turn)}{\cf20 ///< Remaining time for the current turn}\par
00028 {\cf21 #define FIRST_ROUND 1}{\cf20 ///< Constant representing the first round of the game}\par
00029 {\cf20 }\par
00030 {\cf20 /**}\par
00031 {\cf20  * @brief Possible game modes}\par
00032 {\cf20  *}\par
00033 {\cf20  * The game can be played in Player vs Computer (PVE) or Player vs Player (PVP) mode.}\par
00034 {\cf20  */}\par
00035 {\cf17 typedef} {\cf17 enum}\par
00036 \{\par
00037     PVE,{\cf20 ///< Player vs Computer}\par
00038     PVP,{\cf20 ///< Player vs Player}\par
00039 \} Mode;\par
00040 {\cf20 }\par
00041 {\cf20 /**}\par
00042 {\cf20  * @brief Enum describing a player}\par
00043 {\cf20  *}\par
00044 {\cf20  * Represents the two players (Circle and Cross) and an unmarked state (None).}\par
00045 {\cf20  */}\par
00046 {\cf17 typedef} {\cf17 enum}\par
00047 \{\par
00048     Circle = 0,{\cf20 ///< Player Circle}\par
00049     Cross = 1, {\cf20 ///< Player Cross}\par
00050     None = 2,  {\cf20 ///< No player (unmarked)}\par
00051 \} Player;\par
00052 {\cf20 }\par
00053 {\cf20 /**}\par
00054 {\cf20  * @brief One cell on the field}\par
00055 {\cf20  *}\par
00056 {\cf20  * Contains coordinates and information about which player marked the cell.}\par
00057 {\cf20  */}\par
00058 {\cf17 typedef} {\cf17 struct}\par
00059 \{\par
00060         uint16_t col;    {\cf20 ///< Column index of the cell}\par
00061         uint16_t row;    {\cf20 ///< Row index of the cell}\par
00062         Player marked_by;{\cf20 ///< Player who marked the cell}\par
00063 \} Cell;\par
00064 {\cf20 }\par
00065 {\cf20 /**}\par
00066 {\cf20  * @brief The current game state}\par
00067 {\cf20  *}\par
00068 {\cf20  * Contains important game information and several metrics for tracking the game's progress.}\par
00069 {\cf20  *}\par
00070 {\cf20  * @note Some of the fields are only calculated once the game is over.}\par
00071 {\cf20  */}\par
00072 {\cf17 typedef} {\cf17 struct}\par
00073 \{\par
00074         Player winner;                 {\cf20 ///< None if tie or game not over}\par
00075         Mode mode;                     {\cf20 ///< Current game mode}\par
00076         {\cf17 volatile} uint8_t round;        {\cf20 ///< Current round number}\par
00077         {\cf17 volatile} uint8_t fields_marked;{\cf20 ///< Number of fields marked so far}\par
00078         Player current_player;         {\cf20 ///< Player whose turn it is}\par
00079 \par
00080         {\cf20 // Relevant for summary}\par
00081         uint32_t total_ticks;  {\cf20 ///< Total ticks elapsed in the game}\par
00082         uint32_t average_ticks;{\cf20 ///< Average ticks per turn}\par
00083 \par
00084         uint32_t cross_total_ticks;  {\cf20 ///< Total ticks for Player Cross}\par
00085         uint32_t cross_average_ticks;{\cf20 ///< Average ticks for Player Cross}\par
00086 \par
00087         uint32_t circle_total_ticks;  {\cf20 ///< Total ticks for Player Circle}\par
00088         uint32_t circle_average_ticks;{\cf20 ///< Average ticks for Player Circle}\par
00089 \} GameState;\par
00090 {\cf20 }\par
00091 {\cf20 /**}\par
00092 {\cf20  * @brief The current state of the cells}\par
00093 {\cf20  *}\par
00094 {\cf20  * Tracks all cells on the field and pointers to specific cells for easier access.}\par
00095 {\cf20  */}\par
00096 {\cf17 typedef} {\cf17 struct}\par
00097 \{\par
00098         Cell all[CELLS_PER_COL][CELLS_PER_ROW];{\cf20 ///< All cells of the match}\par
00099         Cell *selected;                        {\cf20 ///< Pointer to the currently selected cell}\par
00100         Cell *last_cross;                      {\cf20 ///< Pointer to the cell last marked by Cross}\par
00101         Cell *last_circle;                     {\cf20 ///< Pointer to the last cell marked by Circle}\par
00102 \} CellState;\par
00103 {\cf20 }\par
00104 {\cf20 /**}\par
00105 {\cf20  * @brief Start the main game}\par
00106 {\cf20  *}\par
00107 {\cf20  * @details}\par
00108 {\cf20  * Initializes the game and enters the main game loop.}\par
00109 {\cf20  *}\par
00110 {\cf20  * @param[in] mode Which mode the game should be played in.}\par
00111 {\cf20  */}\par
00112 {\cf18 void} game_run({\cf17 const} Mode mode);\par
00113 {\cf20 }\par
00114 {\cf20 /**}\par
00115 {\cf20  * @brief Automatically end a turn in case the turn time is over}\par
00116 {\cf20  *}\par
00117 {\cf20  * @see time_onInterrupt}\par
00118 {\cf20  */}\par
00119 {\cf18 void} game_onTimeOut();\par
00120 {\cf20 }\par
00121 {\cf20 /**}\par
00122 {\cf20  * @brief Finish the current turn}\par
00123 {\cf20  *}\par
00124 {\cf20  * @details}\par
00125 {\cf20  * Updates the game state and switches to the next player or round.}\par
00126 {\cf20  */}\par
00127 {\cf18 void} game_endTurn();\par
00128 \par
00129 {\cf21 #endif}{\cf20 // GAME_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/input.h File Reference\par \pard\plain 
{\tc\tcl2 \v logic/input.h}
{\xe \v logic/input.h}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the input handling of the game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "def.h"}\par
{\f2 #include "logic/game.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for input.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d9b/input_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d01/input_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_handleByte} (const uint8_t *byte, {\b GameState} *{\b game_state}, {\b CellState} *{\b cell_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles an input byte and updates game and cell states. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the input handling of the game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides the interface for handling user input during the game, including processing key presses and updating game and cell states.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b input.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b input.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v input_handleByte\:input.h}
{\xe \v input.h\:input_handleByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_handleByte (const uint8_t * byte, {\b GameState} * game_state, {\b CellState} * cell_state)}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles an input byte and updates game and cell states. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processes the input byte to determine the appropriate action, such as marking a cell, navigating the board, or pausing the game. Updates the game state and cell state accordingly.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i byte} \cell }{The input byte to process. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i game_state} \cell }{Pointer to the current game state. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cell_state} \cell }{Pointer to the current cell state.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a field redraw is needed, false otherwise. \par
}}}{
Definition at line {\b 79} of file {\b input.c}.}\par
{
\ql
References {\b cell_decreaseSize()}, {\b cell_increaseSize()}, {\b cell_state}, {\b g_timer}, {\b game_state}, {\b handleEscapeSequence()}, {\b handlePauseResume()}, {\b handleSetMark()}, {\b GameTimer::is_running}, and {\b openControls()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/ded/input_8h_a3082ccbda618aa1099677e2e7ac9d5f6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/ded/input_8h_a3082ccbda618aa1099677e2e7ac9d5f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input.h\par \pard\plain 
{\tc\tcl2 \v logic/input.h}
{\xe \v logic/input.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file input.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains the input handling of the game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides the interface for handling user input during the game,}\par
00008 {\cf20  * including processing key presses and updating game and cell states.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Logic}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see input.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 \par
00020 {\cf21 #ifndef INPUT_H}\par
00021 {\cf21 #define INPUT_H}\par
00022 \par
00023 {\cf21 #include "def.h"}\par
00024 {\cf21 #include "logic/game.h"}\par
00025 {\cf20 }\par
00026 {\cf20 /**}\par
00027 {\cf20  * @brief Handles an input byte and updates game and cell states.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @details}\par
00030 {\cf20  * Processes the input byte to determine the appropriate action, such as}\par
00031 {\cf20  * marking a cell, navigating the board, or pausing the game. Updates the}\par
00032 {\cf20  * game state and cell state accordingly.}\par
00033 {\cf20  *}\par
00034 {\cf20  * @param[in] byte The input byte to process.}\par
00035 {\cf20  * @param[inout] game_state Pointer to the current game state.}\par
00036 {\cf20  * @param[inout] cell_state Pointer to the current cell state.}\par
00037 {\cf20  *}\par
00038 {\cf20  * @return True if a field redraw is needed, false otherwise.}\par
00039 {\cf20  */}\par
00040 {\cf18 bool} input_handleByte({\cf17 const} uint8_t *{\cf18 byte}, GameState *game_state, CellState *cell_state);\par
00041 \par
00042 {\cf21 #endif}{\cf20 // INPUT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/time.h File Reference\par \pard\plain 
{\tc\tcl2 \v logic/time.h}
{\xe \v logic/time.h}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains time functions needed for the game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for time.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d13/time_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dd9/time_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b GameTimer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time information of the current game. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_onInterrupt} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the ticks and can finish the round. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_finishTurn} ({\b GameState} *{\b game_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_pause} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause the timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_resume} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume the timer when paused. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameTimer} {\b g_timer}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global game timer instance. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains time functions needed for the game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the declarations for managing the game timer, including initialization, pausing, resuming, and handling turn-based timing.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b time.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v time_finishTurn\:time.h}
{\xe \v time.h\:time_finishTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_finishTurn ({\b GameState} * game_state)}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the ticks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the turn-specific tick counter and updates the game state with the elapsed time for the current player.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i game_state} \cell }{Current state of the game \cell }
{\row }
}
}{
Definition at line {\b 43} of file {\b time.c}.}\par
{
\ql
References {\b GameState::circle_total_ticks}, {\b Cross}, {\b GameState::cross_total_ticks}, {\b GameState::current_player}, {\b g_timer}, {\b game_state}, and {\b GameTimer::ticks_turn}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_a90e96cefd66715b9740be8f0dbab0042_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_init\:time.h}
{\xe \v time.h\:time_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_init ()}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the hardware timer with the appropriate configuration for the game. \par
}{
Definition at line {\b 26} of file {\b time.c}.}\par
{
\ql
References {\b CC0}, {\b TICK_SPEED}, {\b TIMER0}, {\b TIMER_BIT_MODE_32}, {\b timer_captureCompareSet()}, {\b timer_init_detailed()}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_a04352ea8ee003992baa1d4e993b50dae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_a04352ea8ee003992baa1d4e993b50dae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_onInterrupt\:time.h}
{\xe \v time.h\:time_onInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_onInterrupt ()}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the ticks and can finish the round. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is called on a timer interrupt. It increments the total and turn-specific tick counters and triggers a timeout if the turn duration is exceeded. \par
}{
Definition at line {\b 33} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b game_onTimeOut()}, {\b TICKS_PER_TURN}, {\b GameTimer::ticks_total}, and {\b GameTimer::ticks_turn}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_ac55568b0a64c8b18a2d2ffc7d50eacaa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_ac55568b0a64c8b18a2d2ffc7d50eacaa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_pause\:time.h}
{\xe \v time.h\:time_pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_pause ()}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause the timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the hardware timer and marks the timer as not running. \par
}{
Definition at line {\b 59} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b GameTimer::is_running}, {\b TIMER0}, and {\b timer_stop()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_a5ad5fe91a14f332c6acc40870c980fae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_a5ad5fe91a14f332c6acc40870c980fae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_resume\:time.h}
{\xe \v time.h\:time_resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_resume ()}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume the timer when paused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restarts the hardware timer and marks the timer as running. \par
}{
Definition at line {\b 65} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b GameTimer::is_running}, {\b TIMER0}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_aa626af1fe4486ff2f05529894b807e5a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df7/time_8h_aa626af1fe4486ff2f05529894b807e5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_timer\:time.h}
{\xe \v time.h\:g_timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GameTimer} g_timer{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global game timer instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This global variable tracks the timer state and tick counts for the game. \par
}{
Definition at line {\b 19} of file {\b time.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time.h\par \pard\plain 
{\tc\tcl2 \v logic/time.h}
{\xe \v logic/time.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file time.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains time functions needed for the game}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the declarations for managing the game timer, including}\par
00008 {\cf20  * initialization, pausing, resuming, and handling turn-based timing.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Logic}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see time.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 {\cf21 #ifndef TIME_H}\par
00020 {\cf21 #define TIME_H}\par
00021 \par
00022 {\cf21 #include "logic/game.h"}\par
00023 {\cf21 #include <stdint.h>}\par
00024 {\cf20 }\par
00025 {\cf20 /**}\par
00026 {\cf20  * @brief Time information of the current game}\par
00027 {\cf20  *}\par
00028 {\cf20  * @details}\par
00029 {\cf20  * This struct tracks whether the timer is running and the number of ticks}\par
00030 {\cf20  * elapsed in total and during the current turn.}\par
00031 {\cf20  */}\par
00032 {\cf17 typedef} {\cf17 struct}\par
00033 \{\par
00034         {\cf18 bool} is_running;              {\cf20 ///< Indicates if the timer is currently running}\par
00035         {\cf17 volatile} uint32_t ticks_total;{\cf20 ///< Total ticks since the game started}\par
00036         {\cf17 volatile} uint32_t ticks_turn; {\cf20 ///< Ticks elapsed during the current turn}\par
00037 \} GameTimer;\par
00038 {\cf20 }\par
00039 {\cf20 /**}\par
00040 {\cf20  * @brief Global game timer instance}\par
00041 {\cf20  *}\par
00042 {\cf20  * @details}\par
00043 {\cf20  * This global variable tracks the timer state and tick counts for the game.}\par
00044 {\cf20  */}\par
00045 {\cf17 extern} GameTimer g_timer;\par
00046 {\cf20 }\par
00047 {\cf20 /**}\par
00048 {\cf20  * @brief Initializes the timer}\par
00049 {\cf20  *}\par
00050 {\cf20  * @details}\par
00051 {\cf20  * Sets up the hardware timer with the appropriate configuration for the game.}\par
00052 {\cf20  */}\par
00053 {\cf18 void} time_init();\par
00054 {\cf20 }\par
00055 {\cf20 /**}\par
00056 {\cf20  * @brief Increments the ticks and can finish the round}\par
00057 {\cf20  *}\par
00058 {\cf20  * @details}\par
00059 {\cf20  * This function is called on a timer interrupt. It increments the total and}\par
00060 {\cf20  * turn-specific tick counters and triggers a timeout if the turn duration is}\par
00061 {\cf20  * exceeded.}\par
00062 {\cf20  */}\par
00063 {\cf18 void} time_onInterrupt();\par
00064 {\cf20 }\par
00065 {\cf20 /**}\par
00066 {\cf20  * @brief Resets the ticks}\par
00067 {\cf20  *}\par
00068 {\cf20  * @details}\par
00069 {\cf20  * Resets the turn-specific tick counter and updates the game state with the}\par
00070 {\cf20  * elapsed time for the current player.}\par
00071 {\cf20  *}\par
00072 {\cf20  * @param[inout] game_state Current state of the game}\par
00073 {\cf20  */}\par
00074 {\cf18 void} time_finishTurn(GameState *game_state);\par
00075 {\cf20 }\par
00076 {\cf20 /**}\par
00077 {\cf20  * @brief Pause the timer}\par
00078 {\cf20  *}\par
00079 {\cf20  * @details}\par
00080 {\cf20  * Stops the hardware timer and marks the timer as not running.}\par
00081 {\cf20  */}\par
00082 {\cf18 void} time_pause();\par
00083 {\cf20 }\par
00084 {\cf20 /**}\par
00085 {\cf20  * @brief Resume the timer when paused}\par
00086 {\cf20  *}\par
00087 {\cf20  * @details}\par
00088 {\cf20  * Restarts the hardware timer and marks the timer as running.}\par
00089 {\cf20  */}\par
00090 {\cf18 void} time_resume();\par
00091 \par
00092 {\cf21 #endif}{\cf20 // TIME_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/winning.h File Reference\par \pard\plain 
{\tc\tcl2 \v logic/winning.h}
{\xe \v logic/winning.h}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the function for checking if someone has won. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include "util/math.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for winning.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/dd6/winning_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dbc/winning_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b winning_checkForWinner} ({\b CellState} *{\b cell_state}, {\b Cell} *winner_cells[{\b max}({\b CELLS_PER_COL}, {\b CELLS_PER_ROW})])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks at the end of the round if someone has won. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains the function for checking if someone has won. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the declaration of the function used to check if a player has won in the game.\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
VICTORY ALGORITHM
\par}
{\tc\tcl3 \v VICTORY ALGORITHM}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Vertical / Horizontal:
\par}
{\tc\tcl4 \v Vertical / Horizontal:}
The algorithm starts at the border and iterates to the other side. It goes in 2 different directions and counts on 2 axes. It runs in one of the directions till a cell is reached that is not marked by our player. Diagonal: The algorithm starts at the given cell coordinates. It goes in 4 different direction and counts on 2 axes. Every step in one of the directions increments the dedicated axis until a cell is reached that is not marked by our player.\par
The return value is true when one axis or more axes has / have reached the win condition (line to the other side). {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid  UP      UP     UP          | axis       | direction 1 | direction 2 |\par
LEFT           RIGHT        |------------+-------------+-------------|\par
       \\ | /                | vertical   | down        |             |\par
LEFT  ---+---> RIGHT        | horizontal | right       |             |\par
       / | \\                | diagonal_1 | up right    | down left   |\par
DOWN     v     DOWN         | diagonal_2 | up left     | down right  |\par
LEFT    DOWN   RIGHT\par
}
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b winning.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}\par}
\par}
}{
Definition in file {\b winning.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v winning_checkForWinner\:winning.h}
{\xe \v winning.h\:winning_checkForWinner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} winning_checkForWinner ({\b CellState} * cell_state, {\b Cell} * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks at the end of the round if someone has won. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function evaluates the current state of the game board to determine if a player has won. If a player has won, the relevant cells are written to the provided buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell_state} \cell }{Current state of the cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i winner_cells} \cell }{If a player won, the relevant cells will be written to this buffer\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The player who won, or {\f2 None}  if no player has won \par
}}}{
Definition at line {\b 46} of file {\b winning.c}.}\par
{
\ql
References {\b cell_state}, {\b checkIfPlayerWon()}, {\b Circle}, {\b Cross}, {\b CellState::last_circle}, {\b CellState::last_cross}, and {\b None}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df5/winning_8h_af938c2e846f22abb47204c30c0bc316c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df5/winning_8h_af938c2e846f22abb47204c30c0bc316c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
winning.h\par \pard\plain 
{\tc\tcl2 \v logic/winning.h}
{\xe \v logic/winning.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file winning.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains the function for checking if someone has won}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the declaration of the function used to check if a player has won}\par
00008 {\cf20  * in the game.}\par
00009 {\cf20 }\par
00010 {\cf20  * # VICTORY ALGORITHM}\par
00011 {\cf20  * ## Vertical / Horizontal:}\par
00012 {\cf20  * The algorithm starts at the border and iterates to the other side. It goes in 2 different}\par
00013 {\cf20  * directions and counts on 2 axes. It runs in one of the directions till a cell is reached that}\par
00014 {\cf20  * is not marked by our player. Diagonal: The algorithm starts at the given cell coordinates. It}\par
00015 {\cf20  * goes in 4 different direction and counts on 2 axes. Every step in one of the directions}\par
00016 {\cf20  * increments the dedicated axis until a cell is reached that is not marked by our player.}\par
00017 {\cf20  *}\par
00018 {\cf20  * The return value is true when one axis or more axes has / have reached the win condition}\par
00019 {\cf20  * (line to the other side).}\par
00020 {\cf20  * ```text}\par
00021 {\cf20  *  UP      UP     UP          | axis       | direction 1 | direction 2 |}\par
00022 {\cf20  * LEFT           RIGHT        |------------+-------------+-------------|}\par
00023 {\cf20  *        \\ | /                | vertical   | down        |             |}\par
00024 {\cf20  * LEFT  ---+---> RIGHT        | horizontal | right       |             |}\par
00025 {\cf20  *        / | \\                | diagonal_1 | up right    | down left   |}\par
00026 {\cf20  * DOWN     v     DOWN         | diagonal_2 | up left     | down right  |}\par
00027 {\cf20  * LEFT    DOWN   RIGHT}\par
00028 {\cf20  * ```}\par
00029 {\cf20  *}\par
00030 {\cf20  * @ingroup Logic}\par
00031 {\cf20  *}\par
00032 {\cf20  * @see winning.c}\par
00033 {\cf20  *}\par
00034 {\cf20  * @copyright}\par
00035 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00036 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00037 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00038 {\cf20  */}\par
00039 {\cf21 #ifndef WINNING_H}\par
00040 {\cf21 #define WINNING_H}\par
00041 \par
00042 {\cf21 #include "logic/game.h"}\par
00043 {\cf21 #include "util/math.h"}\par
00044 {\cf20 }\par
00045 {\cf20 /**}\par
00046 {\cf20  * @brief Checks at the end of the round if someone has won}\par
00047 {\cf20  *}\par
00048 {\cf20  * @details}\par
00049 {\cf20  * This function evaluates the current state of the game board to determine if a player}\par
00050 {\cf20  * has won. If a player has won, the relevant cells are written to the provided buffer.}\par
00051 {\cf20  *}\par
00052 {\cf20  * @param[in] cell_state Current state of the cells}\par
00053 {\cf20  * @param[out] winner_cells If a player won, the relevant cells will be written to this buffer}\par
00054 {\cf20  *}\par
00055 {\cf20  * @return The player who won, or `None` if no player has won}\par
00056 {\cf20  */}\par
00057 Player winning_checkForWinner(\par
00058     CellState *cell_state,\par
00059     Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]);\par
00060 \par
00061 {\cf21 #endif}{\cf20 // WINNING_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/ascii_art.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/ascii_art.h}
{\xe \v presentation/ascii_art.h}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains ASCII art constants for the TikTakToe game. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d89/ascii__art_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEADING_LINES}\~ 3\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of lines in the heading ASCII art for plain text mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEADING}\~ "\\n TikTakToe \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text heading for the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CROSS_WINS}\~ "\\n {\b Cross} Wins! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the cross player wins. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIRCLE_WINS}\~ "\\n {\b Circle} Wins! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the circle player wins. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ITS_A_TIE}\~ "\\n It's a Tie! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the game ends in a tie. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLAYER_STARTS}\~ "\\n {\b Player} starts! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the player starts the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPUTER_STARTS}\~ "\\n Computer starts! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the computer starts the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CIRCLE_STARTS}\~ "\\n {\b Circle} starts! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the circle player starts the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CROSS_STARTS}\~ "\\n {\b Cross} starts! \\n"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the cross player starts the game. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains ASCII art constants for the TikTakToe game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file defines macros for ASCII art used in the TikTakToe game, including headings, win messages, and start messages. The ASCII art adapts based on whether Unicode or plain text is enabled.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ensure that ENABLE_ASCII_ART and ENABLE_UNICODE are defined appropriately to use the desired ASCII art format.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b ascii_art.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CIRCLE_STARTS\:ascii_art.h}
{\xe \v ascii_art.h\:CIRCLE_STARTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIRCLE_STARTS\~ "\\n {\b Circle} starts! \\n"}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the circle player starts the game. }}\par
{
Definition at line {\b 207} of file {\b ascii_art.h}.}\par
}
{\xe \v CIRCLE_WINS\:ascii_art.h}
{\xe \v ascii_art.h\:CIRCLE_WINS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CIRCLE_WINS\~ "\\n {\b Circle} Wins! \\n"}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the circle player wins. }}\par
{
Definition at line {\b 183} of file {\b ascii_art.h}.}\par
}
{\xe \v COMPUTER_STARTS\:ascii_art.h}
{\xe \v ascii_art.h\:COMPUTER_STARTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPUTER_STARTS\~ "\\n Computer starts! \\n"}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the computer starts the game. }}\par
{
Definition at line {\b 201} of file {\b ascii_art.h}.}\par
}
{\xe \v CROSS_STARTS\:ascii_art.h}
{\xe \v ascii_art.h\:CROSS_STARTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CROSS_STARTS\~ "\\n {\b Cross} starts! \\n"}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the cross player starts the game. }}\par
{
Definition at line {\b 213} of file {\b ascii_art.h}.}\par
}
{\xe \v CROSS_WINS\:ascii_art.h}
{\xe \v ascii_art.h\:CROSS_WINS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CROSS_WINS\~ "\\n {\b Cross} Wins! \\n"}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the cross player wins. }}\par
{
Definition at line {\b 177} of file {\b ascii_art.h}.}\par
}
{\xe \v HEADING\:ascii_art.h}
{\xe \v ascii_art.h\:HEADING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEADING\~ "\\n TikTakToe \\n"}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text heading for the game. }}\par
{
Definition at line {\b 171} of file {\b ascii_art.h}.}\par
}
{\xe \v HEADING_LINES\:ascii_art.h}
{\xe \v ascii_art.h\:HEADING_LINES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEADING_LINES\~ 3}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of lines in the heading ASCII art for plain text mode. }}\par
{
Definition at line {\b 165} of file {\b ascii_art.h}.}\par
}
{\xe \v ITS_A_TIE\:ascii_art.h}
{\xe \v ascii_art.h\:ITS_A_TIE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ITS_A_TIE\~ "\\n It's a Tie! \\n"}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the game ends in a tie. }}\par
{
Definition at line {\b 189} of file {\b ascii_art.h}.}\par
}
{\xe \v PLAYER_STARTS\:ascii_art.h}
{\xe \v ascii_art.h\:PLAYER_STARTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLAYER_STARTS\~ "\\n {\b Player} starts! \\n"}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plain text message displayed when the player starts the game. }}\par
{
Definition at line {\b 195} of file {\b ascii_art.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ascii_art.h\par \pard\plain 
{\tc\tcl2 \v presentation/ascii_art.h}
{\xe \v presentation/ascii_art.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file ascii_art.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains ASCII art constants for the TikTakToe game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file defines macros for ASCII art used in the TikTakToe game, including}\par
00008 {\cf20  * headings, win messages, and start messages. The ASCII art adapts based on}\par
00009 {\cf20  * whether Unicode or plain text is enabled.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup Presentation}\par
00012 {\cf20  *}\par
00013 {\cf20  * @note}\par
00014 {\cf20  * Ensure that ENABLE_ASCII_ART and ENABLE_UNICODE are defined appropriately}\par
00015 {\cf20  * to use the desired ASCII art format.}\par
00016 {\cf20  *}\par
00017 {\cf20  * @copyright}\par
00018 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00019 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00020 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00021 {\cf20  */}\par
00022 \par
00023 {\cf21 #ifndef ASCII_ART_H}\par
00024 {\cf21 #define ASCII_ART_H}\par
00025 \par
00026 {\cf21 #ifdef ENABLE_ASCII_ART}\par
00027 {\cf20 }\par
00028 {\cf20 /**}\par
00029 {\cf20  * @def HEADING_LINES}\par
00030 {\cf20  * @brief Number of lines in the heading ASCII art.}\par
00031 {\cf20  */}\par
00032 {\cf21 #define HEADING_LINES 9}\par
00033 \par
00034 {\cf21 #ifdef ENABLE_UNICODE}{\cf20 }\par
00035 {\cf20 /**}\par
00036 {\cf20  * @def HEADING}\par
00037 {\cf20  * @brief ASCII art for the game heading with Unicode support.}\par
00038 {\cf20  */}{\cf21 }\par
00039 {\cf21 #define HEADING \\}\par
00040 {\cf21     "\\}\par
00041 {\cf21 .___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______  \\n\\}\par
00042 {\cf21 |           ||  | |  |/  / |           |   /   \\\\     |  |/  / |           | /  __  \\\\  |   ____| \\n\\}\par
00043 {\cf21 `---|  |----`|  | |  '  /  `---|  |----`  /  ^  \\\\    |  '  /  `---|  |----`|  |  |  | |  |__    \\n\\}\par
00044 {\cf21     |  |     |  | |    <       |  |      /  /_\\\\  \\\\   |    <       |  |     |  |  |  | |   __|   \\n\\}\par
00045 {\cf21     |  |     |  | |  .  \\\\      |  |     /  _____  \\\\  |  .  \\\\      |  |     |  `--'  | |  |____  \\n\\}\par
00046 {\cf21     |__|     |__| |__|\\\\__\\\\     |__|    /__/     \\\\__\\\\ |__|\\\\__\\\\     |__|      \\\\______/  |_______| \\n\\}\par
00047 {\cfn\\}\par
00048 {\cf21 "}\par
00049 {\cf21 #else}{\cf20 }\par
00050 {\cf20 /**}\par
00051 {\cf20  * @def HEADING}\par
00052 {\cf20  * @brief ASCII art for the game heading without Unicode support.}\par
00053 {\cf20  */}{\cf21 }\par
00054 {\cf21 #define HEADING \\}\par
00055 {\cf21     "\\}\par
00056 {\cf21 .___________. __   __  ___ .___________.    ___       __  ___ .___________.  ______    _______  \\n\\}\par
00057 {\cf21 |           ||  | |  |/  / |           |   /   \\\\     |  |/  / |           | /  __  \\\\  |   ____| \\n\\}\par
00058 {\cf21 `---|  |----`|  | |  '  /  `---|  |----`  /  ^  \\\\    |  '  /  `---|  |----`|  |  |  | |  |__    \\n\\}\par
00059 {\cf21     |  |     |  | |    <       |  |      /  /_\\\\  \\\\   |    <       |  |     |  |  |  | |   __|   \\n\\}\par
00060 {\cf21     |  |     |  | |  .  \\\\      |  |     /  _____  \\\\  |  .  \\\\      |  |     |  `--'  | |  |____  \\n\\}\par
00061 {\cf21     |__|     |__| |__|\\\\__\\\\     |__|    /__/     \\\\__\\\\ |__|\\\\__\\\\     |__|      \\\\______/  |_______| \\n\\}\par
00062 {\cf21 _______________________________________________________________________________________________\\n\\}\par
00063 {\cf21 "}\par
00064 {\cf21 #endif}\par
00065 {\cf20 }\par
00066 {\cf20 /**}\par
00067 {\cf20  * @def CROSS_WINS}\par
00068 {\cf20  * @brief ASCII art displayed when the cross player wins.}\par
00069 {\cf20  */}\par
00070 {\cf21 #define CROSS_WINS \\}\par
00071 {\cf21     "\\}\par
00072 {\cf21   ____                    __        ___           _ \\n\\}\par
00073 {\cf21  / ___|_ __ ___  ___ ___  \\\\ \\\\      / (_)_ __  ___| |\\n\\}\par
00074 {\cf21 | |   | '__/ _ \\\\/ __/ __|  \\\\ \\\\ /\\\\ / /| | '_ \\\\/ __| |\\n\\}\par
00075 {\cf21 | |___| | | (_) \\\\__ \\\\__ \\\\   \\\\ V  V / | | | | \\\\__ \\\\_|\\n\\}\par
00076 {\cf21  \\\\____|_|  \\\\___/|___/___/    \\\\_/\\\\_/  |_|_| |_|___(_)\\n\\}\par
00077 {\cf21 "}\par
00078 {\cf20 }\par
00079 {\cf20 /**}\par
00080 {\cf20  * @def CIRCLE_WINS}\par
00081 {\cf20  * @brief ASCII art displayed when the circle player wins.}\par
00082 {\cf20  */}\par
00083 {\cf21 #define CIRCLE_WINS \\}\par
00084 {\cf21     "\\}\par
00085 {\cf21   ____ _          _       __        ___           _ \\n\\}\par
00086 {\cf21  / ___(_)_ __ ___| | ___  \\\\ \\\\      / (_)_ __  ___| |\\n\\}\par
00087 {\cf21 | |   | | '__/ __| |/ _ \\\\  \\\\ \\\\ /\\\\ / /| | '_ \\\\/ __| |\\n\\}\par
00088 {\cf21 | |___| | | | (__| |  __/   \\\\ V  V / | | | | \\\\__ \\\\_|\\n\\}\par
00089 {\cf21  \\\\____|_|_|  \\\\___|_|\\\\___|    \\\\_/\\\\_/  |_|_| |_|___(_)\\n\\}\par
00090 {\cf21 "}\par
00091 {\cf20 }\par
00092 {\cf20 /**}\par
00093 {\cf20  * @def ITS_A_TIE}\par
00094 {\cf20  * @brief ASCII art displayed when the game ends in a tie.}\par
00095 {\cf20  */}\par
00096 {\cf21 #define ITS_A_TIE \\}\par
00097 {\cf21     "\\}\par
00098 {\cf21  ___ _   _               _____ _      _ \\n\\}\par
00099 {\cf21 |_ _| |_( )___    __ _  |_   _(_) ___| |\\n\\}\par
00100 {\cf21  | || __|// __|  / _` |   | | | |/ _ \\\\ |\\n\\}\par
00101 {\cf21  | || |_  \\\\__ \\\\ | (_| |   | | | |  __/_|\\n\\}\par
00102 {\cf21 |___|\\\\__| |___/  \\\\__,_|   |_| |_|\\\\___(_)\\n\\}\par
00103 {\cf21 "}\par
00104 {\cf20 }\par
00105 {\cf20 /**}\par
00106 {\cf20  * @def PLAYER_STARTS}\par
00107 {\cf20  * @brief ASCII art displayed when the player starts the game.}\par
00108 {\cf20  */}\par
00109 {\cf21 #define PLAYER_STARTS \\}\par
00110 {\cf21     "\\}\par
00111 {\cf21  ____  _                             _             _       _ \\n\\}\par
00112 {\cf21 |  _ \\\\| | __ _ _   _  ___ _ __   ___| |_ __ _ _ __| |_ ___| |\\n\\}\par
00113 {\cf21 | |_) | |/ _` | | | |/ _ \\\\ '__| / __| __/ _` | '__| __/ __| |\\n\\}\par
00114 {\cf21 |  __/| | (_| | |_| |  __/ |    \\\\__ \\\\ || (_| | |  | |_\\\\__ \\\\_|\\n\\}\par
00115 {\cf21 |_|   |_|\\\\__,_|\\\\__, |\\\\___|_|    |___/\\\\__\\\\__,_|_|   \\\\__|___(_)\\n\\}\par
00116 {\cf21                |___/                                         \\n\\}\par
00117 {\cf21 "}\par
00118 {\cf20 }\par
00119 {\cf20 /**}\par
00120 {\cf20  * @def COMPUTER_STARTS}\par
00121 {\cf20  * @brief ASCII art displayed when the computer starts the game.}\par
00122 {\cf20  */}\par
00123 {\cf21 #define COMPUTER_STARTS \\}\par
00124 {\cf21     "\\}\par
00125 {\cf21   ____                            _                  _             _       _ \\n\\}\par
00126 {\cf21  / ___|___  _ __ ___  _ __  _   _| |_ ___ _ __   ___| |_ __ _ _ __| |_ ___| |\\n\\}\par
00127 {\cf21 | |   / _ \\\\| '_ ` _ \\\\| '_ \\\\| | | | __/ _ \\\\ '__| / __| __/ _` | '__| __/ __| |\\n\\}\par
00128 {\cf21 | |__| (_) | | | | | | |_) | |_| | ||  __/ |    \\\\__ \\\\ || (_| | |  | |_\\\\__ \\\\_|\\n\\}\par
00129 {\cf21  \\\\____\\\\___/|_| |_| |_| .__/ \\\\__,_|\\\\__\\\\___|_|    |___/\\\\__\\\\__,_|_|   \\\\__|___(_)\\n\\}\par
00130 {\cf21                      |_|                                                     \\n\\}\par
00131 {\cf21 "}\par
00132 {\cf20 }\par
00133 {\cf20 /**}\par
00134 {\cf20  * @def CIRCLE_STARTS}\par
00135 {\cf20  * @brief ASCII art displayed when the circle player starts the game.}\par
00136 {\cf20  */}\par
00137 {\cf21 #define CIRCLE_STARTS \\}\par
00138 {\cf21     "\\}\par
00139 {\cf21   ____ _          _            _             _       _ \\n\\}\par
00140 {\cf21  / ___(_)_ __ ___| | ___   ___| |_ __ _ _ __| |_ ___| |\\n\\}\par
00141 {\cf21 | |   | | '__/ __| |/ _ \\\\ / __| __/ _` | '__| __/ __| |\\n\\}\par
00142 {\cf21 | |___| | | | (__| |  __/ \\\\__ \\\\ || (_| | |  | |_\\\\__ \\\\_|\\n\\}\par
00143 {\cf21  \\\\____|_|_|  \\\\___|_|\\\\___| |___/\\\\__\\\\__,_|_|   \\\\__|___(_)\\n\\}\par
00144 {\cf21 "}\par
00145 {\cf20 }\par
00146 {\cf20 /**}\par
00147 {\cf20  * @def CROSS_STARTS}\par
00148 {\cf20  * @brief ASCII art displayed when the cross player starts the game.}\par
00149 {\cf20  */}\par
00150 {\cf21 #define CROSS_STARTS \\}\par
00151 {\cf21     "\\}\par
00152 {\cf21   ____                         _             _       _ \\n\\}\par
00153 {\cf21  / ___|_ __ ___  ___ ___   ___| |_ __ _ _ __| |_ ___| |\\n\\}\par
00154 {\cf21 | |   | '__/ _ \\\\/ __/ __| / __| __/ _` | '__| __/ __| |\\n\\}\par
00155 {\cf21 | |___| | | (_) \\\\__ \\\\__ \\\\ \\\\__ \\\\ || (_| | |  | |_\\\\__ \\\\_|\\n\\}\par
00156 {\cf21  \\\\____|_|  \\\\___/|___/___/ |___/\\\\__\\\\__,_|_|   \\\\__|___(_)\\n\\}\par
00157 {\cf21 "}\par
00158 \par
00159 {\cf21 #else}\par
00160 {\cf20 }\par
00161 {\cf20 /**}\par
00162 {\cf20  * @def HEADING_LINES}\par
00163 {\cf20  * @brief Number of lines in the heading ASCII art for plain text mode.}\par
00164 {\cf20  */}\par
00165 {\cf21 #define HEADING_LINES 3}\par
00166 {\cf20 }\par
00167 {\cf20 /**}\par
00168 {\cf20  * @def HEADING}\par
00169 {\cf20  * @brief Plain text heading for the game.}\par
00170 {\cf20  */}\par
00171 {\cf21 #define HEADING "\\n TikTakToe \\n"}\par
00172 {\cf20 }\par
00173 {\cf20 /**}\par
00174 {\cf20  * @def CROSS_WINS}\par
00175 {\cf20  * @brief Plain text message displayed when the cross player wins.}\par
00176 {\cf20  */}\par
00177 {\cf21 #define CROSS_WINS "\\n Cross Wins! \\n"}\par
00178 {\cf20 }\par
00179 {\cf20 /**}\par
00180 {\cf20  * @def CIRCLE_WINS}\par
00181 {\cf20  * @brief Plain text message displayed when the circle player wins.}\par
00182 {\cf20  */}\par
00183 {\cf21 #define CIRCLE_WINS "\\n Circle Wins! \\n"}\par
00184 {\cf20 }\par
00185 {\cf20 /**}\par
00186 {\cf20  * @def ITS_A_TIE}\par
00187 {\cf20  * @brief Plain text message displayed when the game ends in a tie.}\par
00188 {\cf20  */}\par
00189 {\cf21 #define ITS_A_TIE "\\n It's a Tie! \\n"}\par
00190 {\cf20 }\par
00191 {\cf20 /**}\par
00192 {\cf20  * @def PLAYER_STARTS}\par
00193 {\cf20  * @brief Plain text message displayed when the player starts the game.}\par
00194 {\cf20  */}\par
00195 {\cf21 #define PLAYER_STARTS "\\n Player starts! \\n"}\par
00196 {\cf20 }\par
00197 {\cf20 /**}\par
00198 {\cf20  * @def COMPUTER_STARTS}\par
00199 {\cf20  * @brief Plain text message displayed when the computer starts the game.}\par
00200 {\cf20  */}\par
00201 {\cf21 #define COMPUTER_STARTS "\\n Computer starts! \\n"}\par
00202 {\cf20 }\par
00203 {\cf20 /**}\par
00204 {\cf20  * @def CIRCLE_STARTS}\par
00205 {\cf20  * @brief Plain text message displayed when the circle player starts the game.}\par
00206 {\cf20  */}\par
00207 {\cf21 #define CIRCLE_STARTS "\\n Circle starts! \\n"}\par
00208 {\cf20 }\par
00209 {\cf20 /**}\par
00210 {\cf20  * @def CROSS_STARTS}\par
00211 {\cf20  * @brief Plain text message displayed when the cross player starts the game.}\par
00212 {\cf20  */}\par
00213 {\cf21 #define CROSS_STARTS "\\n Cross starts! \\n"}\par
00214 \par
00215 {\cf21 #endif}\par
00216 \par
00217 {\cf21 #endif}{\cf20 // ASCII_ART_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/cell.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/cell.h}
{\xe \v presentation/cell.h}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions and definitions for managing the presentation of cells. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include "presentation/field.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cell.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/df1/cell_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d7e/cell_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CellSize}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct representing the dimensions of a cell. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_OF_SIZES}\~ 3\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of available cell sizes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INITIAL_INDEX}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial index for cell size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INITIAL_WIDTH}\~ 8\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial width of a cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INITIAL_HEIGHT}\~ 5\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial height of a cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INITIAL_SIZE}\~ {\b Medium}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial size of a cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIELD_HEIGHT}\~     ({\b CELLS_PER_COL} * g_cell_size.height)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the field based on cell size. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Size} \{ {\b Small} = 0
, {\b Medium} = 1
, {\b Large} = 2
 \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum representing the available cell sizes. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redraw} (const {\b Cell} *cell)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redraw_withModifier} (const {\b Cell} *cell, const char *modifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell with a modifier. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redrawAll} ({\b Cell} all_cells[][{\b CELLS_PER_ROW}], const char *modifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the entire field of cells. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_select} (const {\b Cell} *cell)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the given cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_increaseSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the size of the cells. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_decreaseSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the size of the cells. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CellSize} {\b g_cell_size}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global variable representing the current cell size. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions and definitions for managing the presentation of cells. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides functions to redraw cells, manage cell selection, and adjust cell sizes. It also defines the {\f2 {\b CellSize}}  struct and {\f2 Size}  enum for handling cell dimensions.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b cell.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b cell.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FIELD_HEIGHT\:cell.h}
{\xe \v cell.h\:FIELD_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIELD_HEIGHT\~     ({\b CELLS_PER_COL} * g_cell_size.height)}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Height of the field based on cell size. }}\par
{
Definition at line {\b 33} of file {\b cell.h}.}\par
}
{\xe \v INITIAL_HEIGHT\:cell.h}
{\xe \v cell.h\:INITIAL_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INITIAL_HEIGHT\~ 5}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial height of a cell. }}\par
{
Definition at line {\b 31} of file {\b cell.h}.}\par
}
{\xe \v INITIAL_INDEX\:cell.h}
{\xe \v cell.h\:INITIAL_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INITIAL_INDEX\~ 1}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial index for cell size. }}\par
{
Definition at line {\b 29} of file {\b cell.h}.}\par
}
{\xe \v INITIAL_SIZE\:cell.h}
{\xe \v cell.h\:INITIAL_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INITIAL_SIZE\~ {\b Medium}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial size of a cell. }}\par
{
Definition at line {\b 32} of file {\b cell.h}.}\par
}
{\xe \v INITIAL_WIDTH\:cell.h}
{\xe \v cell.h\:INITIAL_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INITIAL_WIDTH\~ 8}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial width of a cell. }}\par
{
Definition at line {\b 30} of file {\b cell.h}.}\par
}
{\xe \v NUM_OF_SIZES\:cell.h}
{\xe \v cell.h\:NUM_OF_SIZES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_OF_SIZES\~ 3}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of available cell sizes. }}\par
{
Definition at line {\b 28} of file {\b cell.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Size\:cell.h}
{\xe \v cell.h\:Size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Size}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enum representing the available cell sizes. }}\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Small\:cell.h}
{\xe \v cell.h\:Small}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Small{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Small cell size. \par
}\cell }{\row }
{\xe \v Medium\:cell.h}
{\xe \v cell.h\:Medium}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Medium{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Medium cell size. \par
}\cell }{\row }
{\xe \v Large\:cell.h}
{\xe \v cell.h\:Large}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid Large{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Large cell size. \par
}\cell }{\row }
}
{
Definition at line {\b 39} of file {\b cell.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cell_decreaseSize\:cell.h}
{\xe \v cell.h\:cell_decreaseSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_decreaseSize ()}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the size of the cells. }}\par
{
Definition at line {\b 160} of file {\b cell.c}.}\par
{
\ql
References {\b g_cell_size}, {\b CellSize::height}, {\b CellSize::size}, {\b Small}, {\b VALID_SIZES}, and {\b CellSize::width}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_ac37a7db30665215c6cafea5b9b0d6788_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_increaseSize\:cell.h}
{\xe \v cell.h\:cell_increaseSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_increaseSize ()}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the size of the cells. }}\par
{
Definition at line {\b 149} of file {\b cell.c}.}\par
{
\ql
References {\b g_cell_size}, {\b CellSize::height}, {\b Large}, {\b CellSize::size}, {\b VALID_SIZES}, and {\b CellSize::width}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_ab9e31dcd2aaecf6c26bba4fc29a2e882_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redraw\:cell.h}
{\xe \v cell.h\:cell_redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redraw (const {\b Cell} * cell)}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to redraw. \cell }
{\row }
}
}{
Definition at line {\b 101} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a3945952c9b76c87175d1ae905f01b07a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a3945952c9b76c87175d1ae905f01b07a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redraw_withModifier\:cell.h}
{\xe \v cell.h\:cell_redraw_withModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redraw_withModifier (const {\b Cell} * cell, const char * modifier)}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell with a modifier. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to redraw. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i modifier} \cell }{Modifier to apply during redraw. \cell }
{\row }
}
}{
Definition at line {\b 106} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_abd511bd7897b645ef9cb3a62583959e6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_abd511bd7897b645ef9cb3a62583959e6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redrawAll\:cell.h}
{\xe \v cell.h\:cell_redrawAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redrawAll ({\b Cell} all_cells[][CELLS_PER_ROW], const char * modifier)}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the entire field of cells. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i all_cells} \cell }{2D array of cells representing the field. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i modifier} \cell }{Modifier to apply during redraw. \cell }
{\row }
}
}{
Definition at line {\b 136} of file {\b cell.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a58542af15ec3ebf1a4e50c34789aa317_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a58542af15ec3ebf1a4e50c34789aa317_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_select\:cell.h}
{\xe \v cell.h\:cell_select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_select (const {\b Cell} * cell)}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the given cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to select. \cell }
{\row }
}
}{
Definition at line {\b 111} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b INVERSE}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a457332dae4bea1ebce89e8d8379dd3ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/ddd/cell_8h_a457332dae4bea1ebce89e8d8379dd3ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_cell_size\:cell.h}
{\xe \v cell.h\:g_cell_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CellSize} g_cell_size{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global variable representing the current cell size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialized with default values for size, height, and width.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b VALID_SIZES} \par
{\b INITIAL_SIZE} \par
{\b INITIAL_HEIGHT} \par
{\b INITIAL_WIDTH} \par
}}}{
Definition at line {\b 22} of file {\b cell.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cell.h\par \pard\plain 
{\tc\tcl2 \v presentation/cell.h}
{\xe \v presentation/cell.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file cell.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains functions and definitions for managing the presentation of cells.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides functions to redraw cells, manage cell selection, and adjust cell sizes.}\par
00008 {\cf20  * It also defines the `CellSize` struct and `Size` enum for handling cell dimensions.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Presentation}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see cell.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 \par
00020 {\cf21 #ifndef CELL_H}\par
00021 {\cf21 #define CELL_H}\par
00022 \par
00023 {\cf21 #include "logic/game.h"}\par
00024 {\cf21 #include "presentation/field.h"}\par
00025 \par
00026 {\cf21 #include <stdint.h>}\par
00027 \par
00028 {\cf21 #define NUM_OF_SIZES 3     }{\cf20 ///< Number of available cell sizes.}\par
00029 {\cf21 #define INITIAL_INDEX 1    }{\cf20 ///< Initial index for cell size.}\par
00030 {\cf21 #define INITIAL_WIDTH 8    }{\cf20 ///< Initial width of a cell.}\par
00031 {\cf21 #define INITIAL_HEIGHT 5   }{\cf20 ///< Initial height of a cell.}\par
00032 {\cf21 #define INITIAL_SIZE Medium}{\cf20 ///< Initial size of a cell.}\par
00033 {\cf21 #define FIELD_HEIGHT \\}\par
00034 {\cf21     (CELLS_PER_COL * g_cell_size.height)}{\cf20 ///< Height of the field based on cell size.}\par
00035 {\cf20 }\par
00036 {\cf20 /**}\par
00037 {\cf20  * @brief Enum representing the available cell sizes.}\par
00038 {\cf20  */}\par
00039 {\cf17 typedef} {\cf17 enum}\par
00040 \{\par
00041     Small = 0, {\cf20 ///< Small cell size.}\par
00042     Medium = 1,{\cf20 ///< Medium cell size.}\par
00043     Large = 2, {\cf20 ///< Large cell size.}\par
00044 \} Size;\par
00045 {\cf20 }\par
00046 {\cf20 /**}\par
00047 {\cf20  * @brief Struct representing the dimensions of a cell.}\par
00048 {\cf20  */}\par
00049 {\cf17 typedef} {\cf17 struct}\par
00050 \{\par
00051         Size size;     {\cf20 ///< Current size of the cell.}\par
00052         uint8_t width; {\cf20 ///< Width of the cell.}\par
00053         uint8_t height;{\cf20 ///< Height of the cell.}\par
00054 \} CellSize;\par
00055 {\cf20 }\par
00056 {\cf20 /**}\par
00057 {\cf20  * @brief Global variable representing the current cell size.}\par
00058 {\cf20  *}\par
00059 {\cf20  * @details}\par
00060 {\cf20  * Initialized with default values for size, height, and width.}\par
00061 {\cf20  *}\par
00062 {\cf20  * @see VALID_SIZES}\par
00063 {\cf20  * @see INITIAL_SIZE}\par
00064 {\cf20  * @see INITIAL_HEIGHT}\par
00065 {\cf20  * @see INITIAL_WIDTH}\par
00066 {\cf20  */}\par
00067 {\cf17 extern} CellSize g_cell_size;\par
00068 {\cf20 }\par
00069 {\cf20 /**}\par
00070 {\cf20  * @brief Redraws the given cell.}\par
00071 {\cf20  *}\par
00072 {\cf20  * @param[in] cell Cell to redraw.}\par
00073 {\cf20  */}\par
00074 {\cf18 void} cell_redraw({\cf17 const} Cell *cell);\par
00075 {\cf20 }\par
00076 {\cf20 /**}\par
00077 {\cf20  * @brief Redraws the given cell with a modifier.}\par
00078 {\cf20  *}\par
00079 {\cf20  * @param[in] cell Cell to redraw.}\par
00080 {\cf20  * @param[in] modifier Modifier to apply during redraw.}\par
00081 {\cf20  */}\par
00082 {\cf18 void} cell_redraw_withModifier({\cf17 const} Cell *cell, {\cf17 const} {\cf18 char} *modifier);\par
00083 {\cf20 }\par
00084 {\cf20 /**}\par
00085 {\cf20  * @brief Redraws the entire field of cells.}\par
00086 {\cf20  *}\par
00087 {\cf20  * @param[in] all_cells 2D array of cells representing the field.}\par
00088 {\cf20  * @param[in] modifier Modifier to apply during redraw.}\par
00089 {\cf20  */}\par
00090 {\cf18 void} cell_redrawAll(Cell all_cells[][CELLS_PER_ROW], {\cf17 const} {\cf18 char} *modifier);\par
00091 {\cf20 }\par
00092 {\cf20 /**}\par
00093 {\cf20  * @brief Selects the given cell.}\par
00094 {\cf20  *}\par
00095 {\cf20  * @param[in] cell Cell to select.}\par
00096 {\cf20  */}\par
00097 {\cf18 void} cell_select({\cf17 const} Cell *cell);\par
00098 {\cf20 }\par
00099 {\cf20 /**}\par
00100 {\cf20  * @brief Increases the size of the cells.}\par
00101 {\cf20  */}\par
00102 {\cf18 void} cell_increaseSize();\par
00103 {\cf20 }\par
00104 {\cf20 /**}\par
00105 {\cf20  * @brief Decreases the size of the cells.}\par
00106 {\cf20  */}\par
00107 {\cf18 void} cell_decreaseSize();\par
00108 \par
00109 {\cf21 #endif}{\cf20 // CELL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/cursor.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/cursor.h}
{\xe \v presentation/cursor.h}
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for moving the presentation of the cursor. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cursor.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d19/cursor_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd2/cursor_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cursor_moveTo} (uint8_t x, uint8_t y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the cursor to the given coordinates. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for moving the presentation of the cursor. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides the interface for cursor movement in the presentation layer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b cursor.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b cursor.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cursor_moveTo\:cursor.h}
{\xe \v cursor.h\:cursor_moveTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cursor_moveTo (uint8_t x, uint8_t y)}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the cursor to the given coordinates. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function generates an escape sequence to move the cursor to the specified (x, y) position on the terminal.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i x} \cell }{X-coordinate of the cursor position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i y} \cell }{Y-coordinate of the cursor position.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function can be improved by using new functions found in the conversion module and directly writing the string representation of the number to the target buffer. \par
}}}{
Definition at line {\b 34} of file {\b cursor.c}.}\par
{
\ql
References {\b int_to_str()}, {\b print()}, and {\b writeNumToBuf()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d08/cursor_8h_aa36eaa7b26325e08eddb0a25cc7f1f5e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d08/cursor_8h_aa36eaa7b26325e08eddb0a25cc7f1f5e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cursor.h\par \pard\plain 
{\tc\tcl2 \v presentation/cursor.h}
{\xe \v presentation/cursor.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file cursor.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains functions for moving the presentation of the cursor.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides the interface for cursor movement in the presentation layer.}\par
00008 {\cf20  *}\par
00009 {\cf20  * @ingroup Presentation}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see cursor.c}\par
00012 {\cf20  *}\par
00013 {\cf20  * @copyright}\par
00014 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00015 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00016 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00017 {\cf20  */}\par
00018 {\cf21 #ifndef CURSOR_H}\par
00019 {\cf21 #define CURSOR_H}\par
00020 \par
00021 {\cf21 #include <stdint.h>}\par
00022 {\cf20 }\par
00023 {\cf20 /**}\par
00024 {\cf20  * @brief Move the cursor to the given coordinates.}\par
00025 {\cf20  *}\par
00026 {\cf20  * @details}\par
00027 {\cf20  * This function generates an escape sequence to move the cursor to the specified}\par
00028 {\cf20  * (x, y) position on the terminal.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @param[in] x X-coordinate of the cursor position.}\par
00031 {\cf20  * @param[in] y Y-coordinate of the cursor position.}\par
00032 {\cf20  *}\par
00033 {\cf20  * @note}\par
00034 {\cf20  * This function can be improved by using new functions found in the conversion module}\par
00035 {\cf20  * and directly writing the string representation of the number to the target buffer.}\par
00036 {\cf20  */}\par
00037 {\cf18 void} cursor_moveTo(uint8_t x, uint8_t y);\par
00038 \par
00039 {\cf21 #endif}{\cf20 // CURSOR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/field.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/field.h}
{\xe \v presentation/field.h}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and one function to draw the whole field. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "config.h"}\par
{\f2 #include "presentation/ascii_art.h"}\par
{\f2 #include <stddef.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for field.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d64/field_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d8f/field_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIELD_X_OFFSET}\~ 1\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Horizontal offset for the field rendering. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIELD_Y_OFFSET}\~ 2 + {\b HEADING_LINES}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vertical offset for the field rendering, including heading lines. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CORNER_TOP_LEFT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CORNER_BOT_LEFT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CORNER_TOP_RIGHT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CORNER_BOT_RIGHT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b T_LEFT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b T_RIGHT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b T_TOP}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b T_BOT}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CROSS}\~ "+"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIDE}\~ "|"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TOP_BOTTOM}\~ "-"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMPTY}\~ " "\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIAGONAL_FW}\~ "/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIAGONAL_BW}\~ "\\\\"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIAGONAL_MID}\~ "X"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b field_redraw} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraw the whole 2D field. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains constants and one function to draw the whole field. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file defines constants for rendering the tic-tac-toe field, including offsets, Unicode or ASCII characters for the field's borders, and the {\f2 field_redraw}  function to render the field.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b field.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b field.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CORNER_BOT_LEFT\:field.h}
{\xe \v field.h\:CORNER_BOT_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CORNER_BOT_LEFT\~ "+"}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b field.h}.}\par
}
{\xe \v CORNER_BOT_RIGHT\:field.h}
{\xe \v field.h\:CORNER_BOT_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CORNER_BOT_RIGHT\~ "+"}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b field.h}.}\par
}
{\xe \v CORNER_TOP_LEFT\:field.h}
{\xe \v field.h\:CORNER_TOP_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CORNER_TOP_LEFT\~ "+"}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b field.h}.}\par
}
{\xe \v CORNER_TOP_RIGHT\:field.h}
{\xe \v field.h\:CORNER_TOP_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CORNER_TOP_RIGHT\~ "+"}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b field.h}.}\par
}
{\xe \v CROSS\:field.h}
{\xe \v field.h\:CROSS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CROSS\~ "+"}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b field.h}.}\par
}
{\xe \v DIAGONAL_BW\:field.h}
{\xe \v field.h\:DIAGONAL_BW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIAGONAL_BW\~ "\\\\"}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b field.h}.}\par
}
{\xe \v DIAGONAL_FW\:field.h}
{\xe \v field.h\:DIAGONAL_FW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIAGONAL_FW\~ "/"}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b field.h}.}\par
}
{\xe \v DIAGONAL_MID\:field.h}
{\xe \v field.h\:DIAGONAL_MID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIAGONAL_MID\~ "X"}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b field.h}.}\par
}
{\xe \v EMPTY\:field.h}
{\xe \v field.h\:EMPTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMPTY\~ " "}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b field.h}.}\par
}
{\xe \v FIELD_X_OFFSET\:field.h}
{\xe \v field.h\:FIELD_X_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIELD_X_OFFSET\~ 1}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Horizontal offset for the field rendering. }}\par
{
Definition at line {\b 32} of file {\b field.h}.}\par
}
{\xe \v FIELD_Y_OFFSET\:field.h}
{\xe \v field.h\:FIELD_Y_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIELD_Y_OFFSET\~ 2 + {\b HEADING_LINES}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Vertical offset for the field rendering, including heading lines. }}\par
{
Definition at line {\b 38} of file {\b field.h}.}\par
}
{\xe \v SIDE\:field.h}
{\xe \v field.h\:SIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIDE\~ "|"}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b field.h}.}\par
}
{\xe \v T_BOT\:field.h}
{\xe \v field.h\:T_BOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define T_BOT\~ "+"}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b field.h}.}\par
}
{\xe \v T_LEFT\:field.h}
{\xe \v field.h\:T_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define T_LEFT\~ "+"}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b field.h}.}\par
}
{\xe \v T_RIGHT\:field.h}
{\xe \v field.h\:T_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define T_RIGHT\~ "+"}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b field.h}.}\par
}
{\xe \v T_TOP\:field.h}
{\xe \v field.h\:T_TOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define T_TOP\~ "+"}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b field.h}.}\par
}
{\xe \v TOP_BOTTOM\:field.h}
{\xe \v field.h\:TOP_BOTTOM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TOP_BOTTOM\~ "-"}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b field.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v field_redraw\:field.h}
{\xe \v field.h\:field_redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void field_redraw ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraw the whole 2D field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function renders the entire tic-tac-toe field, including borders and empty cells, based on the current configuration. \par
}{
Definition at line {\b 35} of file {\b field.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b CORNER_BOT_LEFT}, {\b CORNER_BOT_RIGHT}, {\b CORNER_TOP_LEFT}, {\b CORNER_TOP_RIGHT}, {\b CROSS}, {\b cursor_moveTo()}, {\b EMPTY}, {\b FIELD_X_OFFSET}, {\b FIELD_Y_OFFSET}, {\b g_cell_size}, {\b CellSize::height}, {\b printRow()}, {\b SIDE}, {\b T_BOT}, {\b T_LEFT}, {\b T_RIGHT}, {\b T_TOP}, {\b TOP_BOTTOM}, and {\b CellSize::width}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d5a/field_8h_a3d0c2012ab22c49c338449956fc0dd68_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d5a/field_8h_a3d0c2012ab22c49c338449956fc0dd68_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
field.h\par \pard\plain 
{\tc\tcl2 \v presentation/field.h}
{\xe \v presentation/field.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file field.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains constants and one function to draw the whole field.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file defines constants for rendering the tic-tac-toe field, including}\par
00008 {\cf20  * offsets, Unicode or ASCII characters for the field's borders, and the}\par
00009 {\cf20  * `field_redraw` function to render the field.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup Presentation}\par
00012 {\cf20  *}\par
00013 {\cf20  * @see field.c}\par
00014 {\cf20  *}\par
00015 {\cf20  * @copyright}\par
00016 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00017 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00018 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00019 {\cf20  */}\par
00020 \par
00021 {\cf21 #ifndef FIELD_H}\par
00022 {\cf21 #define FIELD_H}\par
00023 \par
00024 {\cf21 #include "config.h"}\par
00025 {\cf21 #include "presentation/ascii_art.h"}\par
00026 {\cf21 #include <stddef.h>}\par
00027 {\cf20 }\par
00028 {\cf20 /**}\par
00029 {\cf20  * @def FIELD_X_OFFSET}\par
00030 {\cf20  * @brief Horizontal offset for the field rendering.}\par
00031 {\cf20  */}\par
00032 {\cf21 #define FIELD_X_OFFSET 1}\par
00033 {\cf20 }\par
00034 {\cf20 /**}\par
00035 {\cf20  * @def FIELD_Y_OFFSET}\par
00036 {\cf20  * @brief Vertical offset for the field rendering, including heading lines.}\par
00037 {\cf20  */}\par
00038 {\cf21 #define FIELD_Y_OFFSET 2 + HEADING_LINES}\par
00039 \par
00040 {\cf21 #ifdef ENABLE_UNICODE}\par
00041 \par
00042 {\cf21 #define CORNER_TOP_LEFT "\'E2\'95\'AD"}\par
00043 {\cf21 #define CORNER_BOT_LEFT "\'E2\'95\'B0"}\par
00044 {\cf21 #define CORNER_TOP_RIGHT "\'E2\'95\'AE"}\par
00045 {\cf21 #define CORNER_BOT_RIGHT "\'E2\'95\'AF"}\par
00046 \par
00047 {\cf21 #define T_LEFT "\'E2\'94\'9C"}\par
00048 {\cf21 #define T_RIGHT "\'E2\'94\'A4"}\par
00049 {\cf21 #define T_TOP "\'E2\'94\'AC"}\par
00050 {\cf21 #define T_BOT "\'E2\'94\'B4"}\par
00051 \par
00052 {\cf21 #define CROSS "\'E2\'94\'BC"}\par
00053 \par
00054 {\cf21 #define SIDE "\'E2\'94\'82"}\par
00055 {\cf21 #define TOP_BOTTOM "\'E2\'94\'80"}\par
00056 {\cf21 #define EMPTY " "}\par
00057 \par
00058 {\cf21 #define DIAGONAL_FW "\'E2\'95\'B1"}\par
00059 {\cf21 #define DIAGONAL_BW "\'E2\'95\'B2"}\par
00060 {\cf21 #define DIAGONAL_MID "\'E2\'95\'B3"}\par
00061 \par
00062 {\cf21 #else}\par
00063 \par
00064 {\cf21 #define CORNER_TOP_LEFT "+"}\par
00065 {\cf21 #define CORNER_BOT_LEFT "+"}\par
00066 {\cf21 #define CORNER_TOP_RIGHT "+"}\par
00067 {\cf21 #define CORNER_BOT_RIGHT "+"}\par
00068 \par
00069 {\cf21 #define T_LEFT "+"}\par
00070 {\cf21 #define T_RIGHT "+"}\par
00071 {\cf21 #define T_TOP "+"}\par
00072 {\cf21 #define T_BOT "+"}\par
00073 \par
00074 {\cf21 #define CROSS "+"}\par
00075 \par
00076 {\cf21 #define SIDE "|"}\par
00077 {\cf21 #define TOP_BOTTOM "-"}\par
00078 {\cf21 #define EMPTY " "}\par
00079 \par
00080 {\cf21 #define DIAGONAL_FW "/"}\par
00081 {\cf21 #define DIAGONAL_BW "\\\\"}\par
00082 {\cf21 #define DIAGONAL_MID "X"}\par
00083 {\cf21 #endif}\par
00084 {\cf20 }\par
00085 {\cf20 /**}\par
00086 {\cf20  * @brief Redraw the whole 2D field.}\par
00087 {\cf20  *}\par
00088 {\cf20  * @details}\par
00089 {\cf20  * This function renders the entire tic-tac-toe field, including borders}\par
00090 {\cf20  * and empty cells, based on the current configuration.}\par
00091 {\cf20  */}\par
00092 {\cf18 void} field_redraw();\par
00093 \par
00094 {\cf21 #endif}{\cf20 // FIELD_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/menu.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/menu.h}
{\xe \v presentation/menu.h}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for presentation of the menu. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for menu.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dbb/menu_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d2a/menu_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RETURN_MENU_HINT}\~ "\\nPress any key to return to the menu..."\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hint message displayed to return to the menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARROW_LEFT}\~ "<LEFT>"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARROW_UP}\~ "<UP>"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARROW_RIGHT}\~ "<RIGHT>"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARROW_DOWN}\~ "<DOWN>"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b menu_showMainMenu} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the main menu and handles user input. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showControls} (const char *continue_hint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the controls menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showCredits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the credits screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showGameOver} (const {\b GameState} *game_info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the game over screen and game summary. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_anyKeyToContinue} (const char *continue_hint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for any key press to continue. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions for presentation of the menu. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the declarations for menu-related functions and macros used in the presentation layer of the application.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b menu.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b menu.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ARROW_DOWN\:menu.h}
{\xe \v menu.h\:ARROW_DOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARROW_DOWN\~ "<DOWN>"}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b menu.h}.}\par
}
{\xe \v ARROW_LEFT\:menu.h}
{\xe \v menu.h\:ARROW_LEFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARROW_LEFT\~ "<LEFT>"}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b menu.h}.}\par
}
{\xe \v ARROW_RIGHT\:menu.h}
{\xe \v menu.h\:ARROW_RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARROW_RIGHT\~ "<RIGHT>"}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b menu.h}.}\par
}
{\xe \v ARROW_UP\:menu.h}
{\xe \v menu.h\:ARROW_UP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARROW_UP\~ "<UP>"}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b menu.h}.}\par
}
{\xe \v RETURN_MENU_HINT\:menu.h}
{\xe \v menu.h\:RETURN_MENU_HINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RETURN_MENU_HINT\~ "\\nPress any key to return to the menu..."}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hint message displayed to return to the menu. }}\par
{
Definition at line {\b 28} of file {\b menu.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v menu_anyKeyToContinue\:menu.h}
{\xe \v menu.h\:menu_anyKeyToContinue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_anyKeyToContinue (const char * continue_hint)}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for any key press to continue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i continue_hint} \cell }{Hint message displayed to prompt the user. \cell }
{\row }
}
}{
Definition at line {\b 222} of file {\b menu.c}.}\par
{
\ql
References {\b __WFI}, {\b g_input_buf}, {\b input_getNext()}, {\b ITALIC_DIM}, and {\b println_styled()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_aa8ce93493c2adb2ce4240b95e852793c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_aa8ce93493c2adb2ce4240b95e852793c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showControls\:menu.h}
{\xe \v menu.h\:menu_showControls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showControls (const char * continue_hint)}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the controls menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i continue_hint} \cell }{Hint message displayed to return to the menu. \cell }
{\row }
}
}{
Definition at line {\b 174} of file {\b menu.c}.}\par
{
\ql
References {\b ARROW_DOWN}, {\b ARROW_LEFT}, {\b ARROW_RIGHT}, {\b ARROW_UP}, {\b BOLD_CROSS}, {\b DEFAULT_BOLD}, {\b ITALIC_DIM}, {\b menu_anyKeyToContinue()}, {\b print()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println()}, {\b println_styled()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a23ef48917f29c7ba37351342e66a636f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a23ef48917f29c7ba37351342e66a636f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showCredits\:menu.h}
{\xe \v menu.h\:menu_showCredits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showCredits ()}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the credits screen. }}\par
{
Definition at line {\b 143} of file {\b menu.c}.}\par
{
\ql
References {\b BOLD_CROSS}, {\b DEFAULT_BOLD}, {\b ITALIC_DIM}, {\b menu_anyKeyToContinue()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println()}, {\b println_styled()}, {\b RETURN_MENU_HINT}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a54a22faf156830dd16ee4e3c52835881_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a54a22faf156830dd16ee4e3c52835881_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showGameOver\:menu.h}
{\xe \v menu.h\:menu_showGameOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showGameOver (const {\b GameState} * game_info)}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the game over screen and game summary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i game_info} \cell }{Pointer to the game state containing game statistics. \cell }
{\row }
}
}{
Definition at line {\b 86} of file {\b menu.c}.}\par
{
\ql
References {\b GameState::average_ticks}, {\b BOLD_CIRCLE}, {\b BOLD_CROSS}, {\b CELLS_PER_COL}, {\b GameState::circle_average_ticks}, {\b GameState::circle_total_ticks}, {\b GameState::cross_average_ticks}, {\b GameState::cross_total_ticks}, {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b DEFAULT_ITALIC}, {\b ERASE_LINE_FROM_CURSOR}, {\b GameState::fields_marked}, {\b g_cell_size}, {\b HEADING_LINES}, {\b CellSize::height}, {\b menu_anyKeyToContinue()}, {\b print()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println_int()}, {\b println_styled()}, {\b printWinnerBanner()}, {\b RESET}, {\b RETURN_MENU_HINT}, {\b GameState::round}, {\b TIMER_ROW}, {\b GameState::total_ticks}, {\b ui_gameOver()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_ab82b49f40989dd1c5b11264bca838492_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_ab82b49f40989dd1c5b11264bca838492_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showMainMenu\:menu.h}
{\xe \v menu.h\:menu_showMainMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} menu_showMainMenu ()}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the main menu and handles user input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the game should reset, {\f2 false}  if the game should quit. \par
}}}{
Definition at line {\b 42} of file {\b menu.c}.}\par
{
\ql
References {\b __WFI}, {\b g_input_buf}, {\b game_run()}, {\b HIDE_CURSOR}, {\b input_getNext()}, {\b menu_showControls()}, {\b menu_showCredits()}, {\b print()}, {\b printMainMenu()}, {\b PVE}, {\b PVP}, and {\b RETURN_MENU_HINT}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a1692d3cd85ed442706f90d6b6f60613f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d54/menu_8h_a1692d3cd85ed442706f90d6b6f60613f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
menu.h\par \pard\plain 
{\tc\tcl2 \v presentation/menu.h}
{\xe \v presentation/menu.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file menu.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains functions for presentation of the menu.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the declarations for menu-related functions and macros}\par
00008 {\cf20  * used in the presentation layer of the application.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Presentation}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see menu.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 {\cf21 #ifndef MENU_H}\par
00020 {\cf21 #define MENU_H}\par
00021 \par
00022 {\cf21 #include "logic/game.h"}\par
00023 {\cf20 }\par
00024 {\cf20 /**}\par
00025 {\cf20  * @def RETURN_MENU_HINT}\par
00026 {\cf20  * @brief Hint message displayed to return to the menu.}\par
00027 {\cf20  */}\par
00028 {\cf21 #define RETURN_MENU_HINT "\\nPress any key to return to the menu..."}\par
00029 \par
00030 {\cf21 #ifdef ENABLE_UNICODE}\par
00031 \par
00032 {\cf21 #define ARROW_LEFT "\'E2\'86\'90"}\par
00033 {\cf21 #define ARROW_UP "\'E2\'86\'91"}\par
00034 {\cf21 #define ARROW_RIGHT "\'E2\'86\'92"}\par
00035 {\cf21 #define ARROW_DOWN "\'E2\'86\'93"}\par
00036 \par
00037 {\cf21 #else}\par
00038 \par
00039 {\cf21 #define ARROW_LEFT "<LEFT>"}\par
00040 {\cf21 #define ARROW_UP "<UP>"}\par
00041 {\cf21 #define ARROW_RIGHT "<RIGHT>"}\par
00042 {\cf21 #define ARROW_DOWN "<DOWN>"}\par
00043 \par
00044 {\cf21 #endif}\par
00045 {\cf20 }\par
00046 {\cf20 /**}\par
00047 {\cf20  * @brief Displays the main menu and handles user input.}\par
00048 {\cf20  *}\par
00049 {\cf20  * @return `true` if the game should reset, `false` if the game should quit.}\par
00050 {\cf20  */}\par
00051 {\cf18 bool} menu_showMainMenu();\par
00052 {\cf20 }\par
00053 {\cf20 /**}\par
00054 {\cf20  * @brief Displays the controls menu.}\par
00055 {\cf20  *}\par
00056 {\cf20  * @param[in] continue_hint Hint message displayed to return to the menu.}\par
00057 {\cf20  */}\par
00058 {\cf18 void} menu_showControls({\cf17 const} {\cf18 char} *continue_hint);\par
00059 {\cf20 }\par
00060 {\cf20 /**}\par
00061 {\cf20  * @brief Displays the credits screen.}\par
00062 {\cf20  */}\par
00063 {\cf18 void} menu_showCredits();\par
00064 {\cf20 }\par
00065 {\cf20 /**}\par
00066 {\cf20  * @brief Displays the game over screen and game summary.}\par
00067 {\cf20  *}\par
00068 {\cf20  * @param[in] game_info Pointer to the game state containing game statistics.}\par
00069 {\cf20  */}\par
00070 {\cf18 void} menu_showGameOver({\cf17 const} GameState *game_info);\par
00071 {\cf20 }\par
00072 {\cf20 /**}\par
00073 {\cf20  * @brief Waits for any key press to continue.}\par
00074 {\cf20  *}\par
00075 {\cf20  * @param[in] continue_hint Hint message displayed to prompt the user.}\par
00076 {\cf20  */}\par
00077 {\cf18 void} menu_anyKeyToContinue({\cf17 const} {\cf18 char} *continue_hint);\par
00078 \par
00079 {\cf21 #endif}{\cf20 // MENU_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/print.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/print.h}
{\xe \v presentation/print.h}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different high level functions for printing to UART. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/style.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for print.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d10/print_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/dd0/print_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LINE_SEPERATOR}\~ '\\n'\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_clearConsole} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the whole terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_int} (const uint32_t number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println_int} (const uint32_t number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer with a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_styled} (const char *string, const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println_styled} (const char *string, const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style and a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_style} (const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given style attributes. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different high level functions for printing to UART. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains functions for printing strings, integers, and styled text to the UART interface. It also includes utility functions for clearing the console.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b print.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b print.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LINE_SEPERATOR\:print.h}
{\xe \v print.h\:LINE_SEPERATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LINE_SEPERATOR\~ '\\n'}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b print.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v print\:print.h}
{\xe \v print.h\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print (const char * string)}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
}
}{
Definition at line {\b 25} of file {\b print.c}.}\par
{
\ql
References {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_ae2dd7886efd463e815dadf10eb54777e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_ae2dd7886efd463e815dadf10eb54777e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_clearConsole\:print.h}
{\xe \v print.h\:print_clearConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_clearConsole ()}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the whole terminal. }}\par
{
Definition at line {\b 20} of file {\b print.c}.}\par
{
\ql
References {\b CLEAR_SCREEN}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_aa1dd7679332aa803a3febb63dc5dd825_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_aa1dd7679332aa803a3febb63dc5dd825_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_int\:print.h}
{\xe \v print.h\:print_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_int (const uint32_t number)}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i number} \cell }{The integer to print \cell }
{\row }
}
}{
Definition at line {\b 34} of file {\b print.c}.}\par
{
\ql
References {\b int_to_str()}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a351314bfb5d5cfeaac8ffaea06ca6e8c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a351314bfb5d5cfeaac8ffaea06ca6e8c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_style\:print.h}
{\xe \v print.h\:print_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_style (const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given style attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to print \cell }
{\row }
}
}{
Definition at line {\b 66} of file {\b print.c}.}\par
{
\ql
References {\b Style::bg_color}, {\b Style::fg_color}, {\b Style::font_style}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a9e731fe6687d1daac66269c94765a45b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a9e731fe6687d1daac66269c94765a45b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_styled\:print.h}
{\xe \v print.h\:print_styled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_styled (const char * string, const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to apply \cell }
{\row }
}
}{
Definition at line {\b 53} of file {\b print.c}.}\par
{
\ql
References {\b print()}, {\b print_style()}, and {\b RESET}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a334f851ea1e7bad8e04d74dbb5e6ed44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a334f851ea1e7bad8e04d74dbb5e6ed44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println\:print.h}
{\xe \v print.h\:println}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println (const char * string)}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a0955e0c88609d4769ade150a1834b22a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a0955e0c88609d4769ade150a1834b22a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println_int\:print.h}
{\xe \v print.h\:println_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println_int (const uint32_t number)}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer with a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i number} \cell }{The integer to print \cell }
{\row }
}
}{
Definition at line {\b 47} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print_int()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a5ec3fe142f65005eea1c8400632aae78_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a5ec3fe142f65005eea1c8400632aae78_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println_styled\:print.h}
{\xe \v print.h\:println_styled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println_styled (const char * string, const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style and a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to apply \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print_styled()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a02a20f9ab0165b4cbac365bb9e9aa823_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d77/print_8h_a02a20f9ab0165b4cbac365bb9e9aa823_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
print.h\par \pard\plain 
{\tc\tcl2 \v presentation/print.h}
{\xe \v presentation/print.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file print.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains several different high level functions for printing to UART}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains functions for printing strings, integers, and styled text}\par
00008 {\cf20  * to the UART interface. It also includes utility functions for clearing the}\par
00009 {\cf20  * console.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup Presentation}\par
00012 {\cf20  *}\par
00013 {\cf20  * @see print.c}\par
00014 {\cf20  *}\par
00015 {\cf20  * @copyright}\par
00016 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00017 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00018 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00019 {\cf20  */}\par
00020 {\cf21 #ifndef PRINT_H}\par
00021 {\cf21 #define PRINT_H}\par
00022 \par
00023 {\cf21 #include "presentation/style.h"}\par
00024 {\cf21 #include <stdint.h>}\par
00025 \par
00026 {\cf21 #define LINE_SEPERATOR '\\n'}\par
00027 {\cf20 }\par
00028 {\cf20 /**}\par
00029 {\cf20  * @brief Clear the whole terminal}\par
00030 {\cf20  */}\par
00031 {\cf18 void} print_clearConsole();\par
00032 {\cf20 }\par
00033 {\cf20 /**}\par
00034 {\cf20  * @brief Prints the given string}\par
00035 {\cf20  * @param [in] string The string to print}\par
00036 {\cf20  */}\par
00037 {\cf18 void} print({\cf17 const} {\cf18 char} *{\cf18 string});\par
00038 {\cf20 }\par
00039 {\cf20 /**}\par
00040 {\cf20  * @brief Prints the given integer}\par
00041 {\cf20  * @param [in] number The integer to print}\par
00042 {\cf20  */}\par
00043 {\cf18 void} print_int({\cf17 const} uint32_t number);\par
00044 {\cf20 }\par
00045 {\cf20 /**}\par
00046 {\cf20  * @brief Prints the given string with a new line character}\par
00047 {\cf20  * @param [in] string The string to print}\par
00048 {\cf20  */}\par
00049 {\cf18 void} println({\cf17 const} {\cf18 char} *{\cf18 string});\par
00050 {\cf20 }\par
00051 {\cf20 /**}\par
00052 {\cf20  * @brief Prints the given integer with a new line character}\par
00053 {\cf20  * @param [in] number The integer to print}\par
00054 {\cf20  */}\par
00055 {\cf18 void} println_int({\cf17 const} uint32_t number);\par
00056 {\cf20 }\par
00057 {\cf20 /**}\par
00058 {\cf20  * @brief Prints the given string with a predefined style}\par
00059 {\cf20  * @param [in] string The string to print}\par
00060 {\cf20  * @param [in] style The style to apply}\par
00061 {\cf20  */}\par
00062 {\cf18 void} print_styled({\cf17 const} {\cf18 char} *{\cf18 string}, {\cf17 const} Style *style);\par
00063 {\cf20 }\par
00064 {\cf20 /**}\par
00065 {\cf20  * @brief Prints the given string with a predefined style and a new line character}\par
00066 {\cf20  * @param [in] string The string to print}\par
00067 {\cf20  * @param [in] style The style to apply}\par
00068 {\cf20  */}\par
00069 {\cf18 void} println_styled({\cf17 const} {\cf18 char} *{\cf18 string}, {\cf17 const} Style *style);\par
00070 {\cf20 }\par
00071 {\cf20 /**}\par
00072 {\cf20  * @brief Prints the given style attributes}\par
00073 {\cf20  * @param [in] style The style to print}\par
00074 {\cf20  */}\par
00075 {\cf18 void} print_style({\cf17 const} Style *style);\par
00076 \par
00077 {\cf21 #endif}{\cf20 // PRINT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/style.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/style.h}
{\xe \v presentation/style.h}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several constants to simplify the styling of output. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d4d/style_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Style}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents a style with foreground color, background color, and font style. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CLEAR_SCREEN}\~ "\\e[1;1H\\e[2J"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to clear the terminal screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT}\~ ""\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with no attributes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RESET}\~ "\\e[0m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to reset all styling attributes. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FG_RED}\~ "\\e[31m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to red. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FG_GREEN}\~ "\\e[32m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to green. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FG_YELLOW}\~ "\\e[33m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to yellow. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FG_BLUE}\~ "\\e[34m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to blue. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FG_MAGENTA}\~ "\\e[35m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to magenta. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BG_GREEN}\~ "\\e[42m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the background color to green. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BG_YELLOW}\~ "\\e[43m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the background color to yellow. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BOLD}\~ "\\e[1m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply bold font style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIM}\~ "\\e[2m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply dim font style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ITALIC}\~ "\\e[3m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply italic font style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INVERSE}\~ "\\e[7m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply inverse font style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HIDDEN}\~ "\\e[8m"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply hidden font style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HIDE_CURSOR}\~ "\\e[?25l"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to hide the terminal cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHOW_CURSOR}\~ "\\e[?25h"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to show the terminal cursor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERASE_LINE_FROM_CURSOR}\~ "\\e[0K"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to erase the line from the cursor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_BOLD}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with bold font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_ITALIC}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with italic font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining bold and dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b ITALIC_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining italic and dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_CIRCLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for circles with magenta foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_CIRCLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for circles with magenta foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_CROSS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for crosses with green foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_CROSS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for crosses with green foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b HEADING_STYLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} for headings with blue foreground and bold font. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several constants to simplify the styling of output. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file defines macros for terminal styling, a {\f2 {\b Style}}  struct for grouping style attributes, and several predefined style constants.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b style.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b style.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BG_GREEN\:style.h}
{\xe \v style.h\:BG_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BG_GREEN\~ "\\e[42m"}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the background color to green. }}\par
{
Definition at line {\b 52} of file {\b style.h}.}\par
}
{\xe \v BG_YELLOW\:style.h}
{\xe \v style.h\:BG_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BG_YELLOW\~ "\\e[43m"}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the background color to yellow. }}\par
{
Definition at line {\b 54} of file {\b style.h}.}\par
}
{\xe \v BOLD\:style.h}
{\xe \v style.h\:BOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BOLD\~ "\\e[1m"}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply bold font style. }}\par
{
Definition at line {\b 56} of file {\b style.h}.}\par
}
{\xe \v CLEAR_SCREEN\:style.h}
{\xe \v style.h\:CLEAR_SCREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CLEAR_SCREEN\~ "\\e[1;1H\\e[2J"}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to clear the terminal screen. }}\par
{
Definition at line {\b 36} of file {\b style.h}.}\par
}
{\xe \v DEFAULT\:style.h}
{\xe \v style.h\:DEFAULT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT\~ ""}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with no attributes. }}\par
{
Definition at line {\b 38} of file {\b style.h}.}\par
}
{\xe \v DIM\:style.h}
{\xe \v style.h\:DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIM\~ "\\e[2m"}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply dim font style. }}\par
{
Definition at line {\b 58} of file {\b style.h}.}\par
}
{\xe \v ERASE_LINE_FROM_CURSOR\:style.h}
{\xe \v style.h\:ERASE_LINE_FROM_CURSOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERASE_LINE_FROM_CURSOR\~ "\\e[0K"}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to erase the line from the cursor. }}\par
{
Definition at line {\b 70} of file {\b style.h}.}\par
}
{\xe \v FG_BLUE\:style.h}
{\xe \v style.h\:FG_BLUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FG_BLUE\~ "\\e[34m"}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to blue. }}\par
{
Definition at line {\b 48} of file {\b style.h}.}\par
}
{\xe \v FG_GREEN\:style.h}
{\xe \v style.h\:FG_GREEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FG_GREEN\~ "\\e[32m"}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to green. }}\par
{
Definition at line {\b 44} of file {\b style.h}.}\par
}
{\xe \v FG_MAGENTA\:style.h}
{\xe \v style.h\:FG_MAGENTA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FG_MAGENTA\~ "\\e[35m"}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to magenta. }}\par
{
Definition at line {\b 50} of file {\b style.h}.}\par
}
{\xe \v FG_RED\:style.h}
{\xe \v style.h\:FG_RED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FG_RED\~ "\\e[31m"}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to red. }}\par
{
Definition at line {\b 42} of file {\b style.h}.}\par
}
{\xe \v FG_YELLOW\:style.h}
{\xe \v style.h\:FG_YELLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FG_YELLOW\~ "\\e[33m"}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to set the foreground color to yellow. }}\par
{
Definition at line {\b 46} of file {\b style.h}.}\par
}
{\xe \v HIDDEN\:style.h}
{\xe \v style.h\:HIDDEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HIDDEN\~ "\\e[8m"}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply hidden font style. }}\par
{
Definition at line {\b 64} of file {\b style.h}.}\par
}
{\xe \v HIDE_CURSOR\:style.h}
{\xe \v style.h\:HIDE_CURSOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HIDE_CURSOR\~ "\\e[?25l"}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to hide the terminal cursor. }}\par
{
Definition at line {\b 66} of file {\b style.h}.}\par
}
{\xe \v INVERSE\:style.h}
{\xe \v style.h\:INVERSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INVERSE\~ "\\e[7m"}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply inverse font style. }}\par
{
Definition at line {\b 62} of file {\b style.h}.}\par
}
{\xe \v ITALIC\:style.h}
{\xe \v style.h\:ITALIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ITALIC\~ "\\e[3m"}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to apply italic font style. }}\par
{
Definition at line {\b 60} of file {\b style.h}.}\par
}
{\xe \v RESET\:style.h}
{\xe \v style.h\:RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RESET\~ "\\e[0m"}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to reset all styling attributes. }}\par
{
Definition at line {\b 40} of file {\b style.h}.}\par
}
{\xe \v SHOW_CURSOR\:style.h}
{\xe \v style.h\:SHOW_CURSOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHOW_CURSOR\~ "\\e[?25h"}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escape sequence to show the terminal cursor. }}\par
{
Definition at line {\b 68} of file {\b style.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v BOLD_CIRCLE\:style.h}
{\xe \v style.h\:BOLD_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_CIRCLE{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for circles with magenta foreground. }}\par
{
Definition at line {\b 42} of file {\b style.c}.}\par
}
{\xe \v BOLD_CROSS\:style.h}
{\xe \v style.h\:BOLD_CROSS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_CROSS{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for crosses with green foreground. }}\par
{
Definition at line {\b 51} of file {\b style.c}.}\par
}
{\xe \v BOLD_DIM\:style.h}
{\xe \v style.h\:BOLD_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_DIM{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining bold and dim font. }}\par
{
Definition at line {\b 28} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_BOLD\:style.h}
{\xe \v style.h\:DEFAULT_BOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_BOLD{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with bold font. }}\par
{
Definition at line {\b 16} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_CIRCLE\:style.h}
{\xe \v style.h\:DEFAULT_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_CIRCLE{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for circles with magenta foreground. }}\par
{
Definition at line {\b 38} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_CROSS\:style.h}
{\xe \v style.h\:DEFAULT_CROSS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_CROSS{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for crosses with green foreground. }}\par
{
Definition at line {\b 47} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_DIM\:style.h}
{\xe \v style.h\:DEFAULT_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_DIM{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with dim font. }}\par
{
Definition at line {\b 24} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_ITALIC\:style.h}
{\xe \v style.h\:DEFAULT_ITALIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_ITALIC{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with italic font. }}\par
{
Definition at line {\b 20} of file {\b style.c}.}\par
}
{\xe \v HEADING_STYLE\:style.h}
{\xe \v style.h\:HEADING_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} HEADING_STYLE{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} for headings with blue foreground and bold font. }}\par
{
Definition at line {\b 56} of file {\b style.c}.}\par
}
{\xe \v ITALIC_DIM\:style.h}
{\xe \v style.h\:ITALIC_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} ITALIC_DIM{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining italic and dim font. }}\par
{
Definition at line {\b 33} of file {\b style.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
style.h\par \pard\plain 
{\tc\tcl2 \v presentation/style.h}
{\xe \v presentation/style.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file style.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains several constants to simplify the styling of output.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file defines macros for terminal styling, a `Style` struct for grouping}\par
00008 {\cf20  * style attributes, and several predefined style constants.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Presentation}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see style.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 \par
00020 {\cf21 #ifndef STYLE_H}\par
00021 {\cf21 #define STYLE_H}\par
00022 {\cf20 }\par
00023 {\cf20 /**}\par
00024 {\cf20  * @brief Represents a style with foreground color, background color, and font style.}\par
00025 {\cf20  *}\par
00026 {\cf20  * @details}\par
00027 {\cf20  * This struct is used to define a combination of terminal styling attributes.}\par
00028 {\cf20  */}\par
00029 {\cf17 typedef} {\cf17 struct}\par
00030 \{\par
00031         {\cf18 char} *fg_color;  {\cf20 ///< Foreground color escape sequence.}\par
00032         {\cf18 char} *bg_color;  {\cf20 ///< Background color escape sequence.}\par
00033         {\cf18 char} *font_style;{\cf20 ///< Font style escape sequence.}\par
00034 \} Style;\par
00035 \par
00036 {\cf21 #define CLEAR_SCREEN "\\e[1;1H\\e[2J"}{\cf20 ///< Escape sequence to clear the terminal screen.}\par
00037 \par
00038 {\cf21 #define DEFAULT ""}{\cf20 ///< Default style with no attributes.}\par
00039 \par
00040 {\cf21 #define RESET "\\e[0m"}{\cf20 ///< Escape sequence to reset all styling attributes.}\par
00041 \par
00042 {\cf21 #define FG_RED "\\e[31m"}{\cf20 ///< Escape sequence to set the foreground color to red.}\par
00043 \par
00044 {\cf21 #define FG_GREEN "\\e[32m"}{\cf20 ///< Escape sequence to set the foreground color to green.}\par
00045 \par
00046 {\cf21 #define FG_YELLOW "\\e[33m"}{\cf20 ///< Escape sequence to set the foreground color to yellow.}\par
00047 \par
00048 {\cf21 #define FG_BLUE "\\e[34m"}{\cf20 ///< Escape sequence to set the foreground color to blue.}\par
00049 \par
00050 {\cf21 #define FG_MAGENTA "\\e[35m"}{\cf20 ///< Escape sequence to set the foreground color to magenta.}\par
00051 \par
00052 {\cf21 #define BG_GREEN "\\e[42m"}{\cf20 ///< Escape sequence to set the background color to green.}\par
00053 \par
00054 {\cf21 #define BG_YELLOW "\\e[43m"}{\cf20 ///< Escape sequence to set the background color to yellow.}\par
00055 \par
00056 {\cf21 #define BOLD "\\e[1m"}{\cf20 ///< Escape sequence to apply bold font style.}\par
00057 \par
00058 {\cf21 #define DIM "\\e[2m"}{\cf20 ///< Escape sequence to apply dim font style.}\par
00059 \par
00060 {\cf21 #define ITALIC "\\e[3m"}{\cf20 ///< Escape sequence to apply italic font style.}\par
00061 \par
00062 {\cf21 #define INVERSE "\\e[7m"}{\cf20 ///< Escape sequence to apply inverse font style.}\par
00063 \par
00064 {\cf21 #define HIDDEN "\\e[8m"}{\cf20 ///< Escape sequence to apply hidden font style.}\par
00065 \par
00066 {\cf21 #define HIDE_CURSOR "\\e[?25l"}{\cf20 ///< Escape sequence to hide the terminal cursor.}\par
00067 \par
00068 {\cf21 #define SHOW_CURSOR "\\e[?25h"}{\cf20 ///< Escape sequence to show the terminal cursor.}\par
00069 \par
00070 {\cf21 #define ERASE_LINE_FROM_CURSOR "\\e[0K"}{\cf20 ///< Escape sequence to erase the line from the cursor.}\par
00071 {\cf20 }\par
00072 {\cf20 /**}\par
00073 {\cf20  * @brief Default style with bold font.}\par
00074 {\cf20  */}\par
00075 {\cf17 extern} {\cf17 const} Style DEFAULT_BOLD;\par
00076 {\cf20 }\par
00077 {\cf20 /**}\par
00078 {\cf20  * @brief Default style with italic font.}\par
00079 {\cf20  */}\par
00080 {\cf17 extern} {\cf17 const} Style DEFAULT_ITALIC;\par
00081 {\cf20 }\par
00082 {\cf20 /**}\par
00083 {\cf20  * @brief Default style with dim font.}\par
00084 {\cf20  */}\par
00085 {\cf17 extern} {\cf17 const} Style DEFAULT_DIM;\par
00086 {\cf20 }\par
00087 {\cf20 /**}\par
00088 {\cf20  * @brief Style combining bold and dim font.}\par
00089 {\cf20  */}\par
00090 {\cf17 extern} {\cf17 const} Style BOLD_DIM;\par
00091 {\cf20 }\par
00092 {\cf20 /**}\par
00093 {\cf20  * @brief Style combining italic and dim font.}\par
00094 {\cf20  */}\par
00095 {\cf17 extern} {\cf17 const} Style ITALIC_DIM;\par
00096 {\cf20 }\par
00097 {\cf20 /**}\par
00098 {\cf20  * @brief Default style for circles with magenta foreground.}\par
00099 {\cf20  */}\par
00100 {\cf17 extern} {\cf17 const} Style DEFAULT_CIRCLE;\par
00101 {\cf20 }\par
00102 {\cf20 /**}\par
00103 {\cf20  * @brief Bold style for circles with magenta foreground.}\par
00104 {\cf20  */}\par
00105 {\cf17 extern} {\cf17 const} Style BOLD_CIRCLE;\par
00106 {\cf20 }\par
00107 {\cf20 /**}\par
00108 {\cf20  * @brief Default style for crosses with green foreground.}\par
00109 {\cf20  */}\par
00110 {\cf17 extern} {\cf17 const} Style DEFAULT_CROSS;\par
00111 {\cf20 }\par
00112 {\cf20 /**}\par
00113 {\cf20  * @brief Bold style for crosses with green foreground.}\par
00114 {\cf20  */}\par
00115 {\cf17 extern} {\cf17 const} Style BOLD_CROSS;\par
00116 {\cf20 }\par
00117 {\cf20 /**}\par
00118 {\cf20  * @brief Style for headings with blue foreground and bold font.}\par
00119 {\cf20  */}\par
00120 {\cf17 extern} {\cf17 const} Style HEADING_STYLE;\par
00121 \par
00122 {\cf21 #endif}{\cf20 // STYLE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/ui.h File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/ui.h}
{\xe \v presentation/ui.h}
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains different functions for the presentation of the in-game user interface (everything besides the actual game field). }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include "presentation/ascii_art.h"}\par
{\f2 #include "presentation/cell.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ui.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d35/ui_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d75/ui_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TURN_ROW}\~ 1 + {\b HEADING_LINES}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row position for displaying the turn text. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TIMER_ROW}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row position for displaying the timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FULL_PROGRESS_ELEMENT}\~ "-"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full progress bar element. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HALF_PROGRESS_ELEMENT}\~ "_"\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Half progress bar element. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMPTY_PROGRESS_ELEMENT}\~ ""\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty progress bar element. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_displayTimer} (uint16_t remaining_time, uint16_t total_time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the timer text to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_updateTimer} (uint16_t remaining_time, uint16_t total_time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the time on the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_displayTurn} (uint8_t current_turn, {\b Player} player)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the turn text to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_updateTurn} (uint8_t current_turn, {\b Player} player)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the turn number on the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_printStartingPlayer} ({\b Player} starting_player, {\b Mode} mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the starting player and mode. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_printHeading} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the game heading to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_gameOver} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the "Game Over" message on the screen. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains different functions for the presentation of the in-game user interface (everything besides the actual game field). \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides functions to display and update the timer, turn text, and other UI elements for the game. It also includes macros for rendering progress elements and constants for positioning UI elements.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b ui.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b ui.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v EMPTY_PROGRESS_ELEMENT\:ui.h}
{\xe \v ui.h\:EMPTY_PROGRESS_ELEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMPTY_PROGRESS_ELEMENT\~ ""}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Empty progress bar element. }}\par
{
Definition at line {\b 51} of file {\b ui.h}.}\par
}
{\xe \v FULL_PROGRESS_ELEMENT\:ui.h}
{\xe \v ui.h\:FULL_PROGRESS_ELEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FULL_PROGRESS_ELEMENT\~ "-"}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full progress bar element. }}\par
{
Definition at line {\b 49} of file {\b ui.h}.}\par
}
{\xe \v HALF_PROGRESS_ELEMENT\:ui.h}
{\xe \v ui.h\:HALF_PROGRESS_ELEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HALF_PROGRESS_ELEMENT\~ "_"}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Half progress bar element. }}\par
{
Definition at line {\b 50} of file {\b ui.h}.}\par
}
{\xe \v TIMER_ROW\:ui.h}
{\xe \v ui.h\:TIMER_ROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TIMER_ROW}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (CELLS_PER_COL == 2 ? FIELD_HEIGHT + (FIELD_HEIGHT % 2) + 1 + HEADING_LINES \\\par
                        : FIELD_HEIGHT + (FIELD_HEIGHT % 2) - 1 + HEADING_LINES)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row position for displaying the timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The timer row position is calculated based on the number of cells per column. If the number of cells per column is 2, the calculation has to be adjusted \par
}{
Definition at line {\b 40} of file {\b ui.h}.}\par
}
{\xe \v TURN_ROW\:ui.h}
{\xe \v ui.h\:TURN_ROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TURN_ROW\~ 1 + {\b HEADING_LINES}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Row position for displaying the turn text. }}\par
{
Definition at line {\b 30} of file {\b ui.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ui_displayTimer\:ui.h}
{\xe \v ui.h\:ui_displayTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_displayTimer (uint16_t remaining_time, uint16_t total_time)}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the timer text to the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i remaining_time} \cell }{The remaining time in seconds. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i total_time} \cell }{The total time in seconds. \cell }
{\row }
}
}{
Definition at line {\b 24} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b ITALIC_DIM}, {\b print()}, {\b print_styled()}, {\b TIMER_ROW}, and {\b ui_updateTimer()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ae4fe2414f32031d11e9c73b538bf1343_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ae4fe2414f32031d11e9c73b538bf1343_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_displayTurn\:ui.h}
{\xe \v ui.h\:ui_displayTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_displayTurn (uint8_t current_turn, {\b Player} player)}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the turn text to the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i current_turn} \cell }{The current turn number. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i player} \cell }{The player whose turn it is (Circle or Cross). \cell }
{\row }
}
}{
Definition at line {\b 89} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b DEFAULT_ITALIC}, {\b print_styled()}, {\b TURN_ROW}, and {\b ui_updateTurn()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_a2b115d6ebc0e14751195c93efd7aafdb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_a2b115d6ebc0e14751195c93efd7aafdb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_gameOver\:ui.h}
{\xe \v ui.h\:ui_gameOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_gameOver ()}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the "Game Over" message on the screen. }}\par
{
Definition at line {\b 117} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b ERASE_LINE_FROM_CURSOR}, {\b print()}, {\b print_styled()}, {\b TIMER_ROW}, and {\b TURN_ROW}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_aa7c37f269bcee19a98aea573289d9877_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_aa7c37f269bcee19a98aea573289d9877_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_printHeading\:ui.h}
{\xe \v ui.h\:ui_printHeading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_printHeading ()}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the game heading to the screen. }}\par
{
Definition at line {\b 127} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b HEADING}, {\b HEADING_STYLE}, and {\b print_styled()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ad7ec4b5965543c400031e14183eee496_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ad7ec4b5965543c400031e14183eee496_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_printStartingPlayer\:ui.h}
{\xe \v ui.h\:ui_printStartingPlayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_printStartingPlayer ({\b Player} starting_player, {\b Mode} mode)}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the starting player and mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i starting_player} \cell }{The player who starts the game. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i mode} \cell }{The game mode (e.g., PVE or PVP). \cell }
{\row }
}
}{
Definition at line {\b 133} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD}, {\b Circle}, {\b CIRCLE_STARTS}, {\b COMPUTER_STARTS}, {\b Cross}, {\b CROSS_STARTS}, {\b DEFAULT_CIRCLE}, {\b DEFAULT_CROSS}, {\b FG_RED}, {\b menu_anyKeyToContinue()}, {\b None}, {\b PLAYER_STARTS}, {\b print_clearConsole()}, {\b print_styled()}, {\b PVE}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ae1c1dad8845af014a8e35894e8842fb5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_ae1c1dad8845af014a8e35894e8842fb5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_updateTimer\:ui.h}
{\xe \v ui.h\:ui_updateTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_updateTimer (uint16_t remaining_time, uint16_t total_time)}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the time on the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i remaining_time} \cell }{The remaining time in seconds. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i total_time} \cell }{The total time in seconds. \cell }
{\row }
}
}{
Definition at line {\b 34} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD}, {\b cursor_moveTo()}, {\b DIM}, {\b EMPTY_PROGRESS_ELEMENT}, {\b ERASE_LINE_FROM_CURSOR}, {\b FG_GREEN}, {\b FG_RED}, {\b FG_YELLOW}, {\b FULL_PROGRESS_ELEMENT}, {\b g_timer}, {\b HALF_PROGRESS_ELEMENT}, {\b GameTimer::is_running}, {\b ITALIC_DIM}, {\b print()}, {\b print_styled()}, {\b println_styled()}, {\b TIMER_ROW}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_aeb1f8edc41404d3650def3e0c4b8d700_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_aeb1f8edc41404d3650def3e0c4b8d700_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_updateTurn\:ui.h}
{\xe \v ui.h\:ui_updateTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_updateTurn (uint8_t current_turn, {\b Player} player)}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the turn number on the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i current_turn} \cell }{The current turn number. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i player} \cell }{The player whose turn it is (Circle or Cross). \cell }
{\row }
}
}{
Definition at line {\b 99} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD_CIRCLE}, {\b BOLD_CROSS}, {\b Circle}, {\b Cross}, {\b cursor_moveTo()}, {\b FG_GREEN}, {\b FG_MAGENTA}, {\b print()}, {\b print_int()}, {\b print_styled()}, and {\b TURN_ROW}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_a358e03c0e369343f9beab07d771f0bcb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d3b/ui_8h_a358e03c0e369343f9beab07d771f0bcb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ui.h\par \pard\plain 
{\tc\tcl2 \v presentation/ui.h}
{\xe \v presentation/ui.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file ui.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains different functions for the presentation of the in-game}\par
00005 {\cf20  *        user interface (everything besides the actual game field).}\par
00006 {\cf20  *}\par
00007 {\cf20  * @details}\par
00008 {\cf20  * This file provides functions to display and update the timer, turn text,}\par
00009 {\cf20  * and other UI elements for the game. It also includes macros for rendering}\par
00010 {\cf20  * progress elements and constants for positioning UI elements.}\par
00011 {\cf20  *}\par
00012 {\cf20  * @ingroup Presentation}\par
00013 {\cf20  *}\par
00014 {\cf20  * @see ui.c}\par
00015 {\cf20  *}\par
00016 {\cf20  * @copyright}\par
00017 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00018 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00019 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00020 {\cf20  */}\par
00021 \par
00022 {\cf21 #ifndef UI_H}\par
00023 {\cf21 #define UI_H}\par
00024 \par
00025 {\cf21 #include "logic/game.h"}\par
00026 {\cf21 #include "presentation/ascii_art.h"}\par
00027 {\cf21 #include "presentation/cell.h"}\par
00028 {\cf21 #include <stdint.h>}\par
00029 \par
00030 {\cf21 #define TURN_ROW 1 + HEADING_LINES}{\cf20 ///< Row position for displaying the turn text.}{\cf20 }\par
00031 {\cf20 /**}\par
00032 {\cf20  * @def TIMER_ROW}\par
00033 {\cf20  *}\par
00034 {\cf20  * @brief Row position for displaying the timer.}\par
00035 {\cf20  *}\par
00036 {\cf20  * @details}\par
00037 {\cf20  * The timer row position is calculated based on the number of cells per column.}\par
00038 {\cf20  * If the number of cells per column is 2, the calculation has to be adjusted}\par
00039 {\cf20  */}{\cf21 }\par
00040 {\cf21 #define TIMER_ROW \\}\par
00041 {\cf21     (CELLS_PER_COL == 2 ? FIELD_HEIGHT + (FIELD_HEIGHT % 2) + 1 + HEADING_LINES \\}\par
00042 {\cf21                         : FIELD_HEIGHT + (FIELD_HEIGHT % 2) - 1 + HEADING_LINES)}\par
00043 \par
00044 {\cf21 #ifdef ENABLE_UNICODE}\par
00045 {\cf21 #define FULL_PROGRESS_ELEMENT "\'E2\'96\'88" }{\cf20 ///< Full progress bar element}\par
00046 {\cf21 #define HALF_PROGRESS_ELEMENT "\'E2\'96\'86" }{\cf20 ///< Half progress bar element}\par
00047 {\cf21 #define EMPTY_PROGRESS_ELEMENT "\'E2\'96\'81"}{\cf20 ///< Empty progress bar element}\par
00048 {\cf21 #else}\par
00049 {\cf21 #define FULL_PROGRESS_ELEMENT "-"}{\cf20 ///< Full progress bar element}\par
00050 {\cf21 #define HALF_PROGRESS_ELEMENT "_"}{\cf20 ///< Half progress bar element}\par
00051 {\cf21 #define EMPTY_PROGRESS_ELEMENT ""}{\cf20 ///< Empty progress bar element}\par
00052 {\cf21 #endif}\par
00053 {\cf20 }\par
00054 {\cf20 /**}\par
00055 {\cf20  * @brief Writes the timer text to the screen.}\par
00056 {\cf20  *}\par
00057 {\cf20  * @param[in] remaining_time The remaining time in seconds.}\par
00058 {\cf20  * @param[in] total_time The total time in seconds.}\par
00059 {\cf20  */}\par
00060 {\cf18 void} ui_displayTimer(uint16_t remaining_time, uint16_t total_time);\par
00061 {\cf20 }\par
00062 {\cf20 /**}\par
00063 {\cf20  * @brief Updates the time on the screen.}\par
00064 {\cf20  *}\par
00065 {\cf20  * @param[in] remaining_time The remaining time in seconds.}\par
00066 {\cf20  * @param[in] total_time The total time in seconds.}\par
00067 {\cf20  */}\par
00068 {\cf18 void} ui_updateTimer(uint16_t remaining_time, uint16_t total_time);\par
00069 {\cf20 }\par
00070 {\cf20 /**}\par
00071 {\cf20  * @brief Writes the turn text to the screen.}\par
00072 {\cf20  *}\par
00073 {\cf20  * @param[in] current_turn The current turn number.}\par
00074 {\cf20  * @param[in] player The player whose turn it is (Circle or Cross).}\par
00075 {\cf20  */}\par
00076 {\cf18 void} ui_displayTurn(uint8_t current_turn, Player player);\par
00077 {\cf20 }\par
00078 {\cf20 /**}\par
00079 {\cf20  * @brief Updates the turn number on the screen.}\par
00080 {\cf20  *}\par
00081 {\cf20  * @param[in] current_turn The current turn number.}\par
00082 {\cf20  * @param[in] player The player whose turn it is (Circle or Cross).}\par
00083 {\cf20  */}\par
00084 {\cf18 void} ui_updateTurn(uint8_t current_turn, Player player);\par
00085 {\cf20 }\par
00086 {\cf20 /**}\par
00087 {\cf20  * @brief Displays the starting player and mode.}\par
00088 {\cf20  *}\par
00089 {\cf20  * @param[in] starting_player The player who starts the game.}\par
00090 {\cf20  * @param[in] mode The game mode (e.g., PVE or PVP).}\par
00091 {\cf20  */}\par
00092 {\cf18 void} ui_printStartingPlayer(Player starting_player, Mode mode);\par
00093 {\cf20 }\par
00094 {\cf20 /**}\par
00095 {\cf20  * @brief Prints the game heading to the screen.}\par
00096 {\cf20  */}\par
00097 {\cf18 void} ui_printHeading();\par
00098 {\cf20 }\par
00099 {\cf20 /**}\par
00100 {\cf20  * @brief Displays the "Game Over" message on the screen.}\par
00101 {\cf20  */}\par
00102 {\cf18 void} ui_gameOver();\par
00103 \par
00104 {\cf21 #endif}{\cf20 // UI_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/conversion.h File Reference\par \pard\plain 
{\tc\tcl2 \v util/conversion.h}
{\xe \v util/conversion.h}
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent conversion functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for conversion.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/de1/conversion_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d5b/conversion_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASCII_NUM_OFFSET}\~ 48\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset to convert a digit to its ASCII representation. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b int_to_str} (uint32_t num, char *buf, const size_t buf_size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b int_to_char} (uint8_t num)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a character. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent conversion functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides utility functions for converting integers to strings or characters.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b conversion.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b conversion.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ASCII_NUM_OFFSET\:conversion.h}
{\xe \v conversion.h\:ASCII_NUM_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASCII_NUM_OFFSET\~ 48}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Offset to convert a digit to its ASCII representation. }}\par
{
Definition at line {\b 24} of file {\b conversion.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v int_to_char\:conversion.h}
{\xe \v conversion.h\:int_to_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char int_to_char (uint8_t num)}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a single-digit integer (0-9) to its corresponding ASCII character.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num} \cell }{The integer to convert (must be between 0 and 9).\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The ASCII character corresponding to the input integer. \par
}}}{
Definition at line {\b 55} of file {\b conversion.c}.}\par
{
\ql
References {\b ASCII_NUM_OFFSET}.}\par
}
{\xe \v int_to_str\:conversion.h}
{\xe \v conversion.h\:int_to_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t int_to_str (uint32_t num, char * buf, const size_t buf_size)}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a given unsigned integer to its string representation and stores it in the provided buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num} \cell }{The integer to convert. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i buf} \cell }{The buffer to store the resulting string. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i buf_size} \cell }{The size of the buffer.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 on success, -1 if an error occurred (e.g., buffer is NULL or too small). \par
}}}{
Definition at line {\b 20} of file {\b conversion.c}.}\par
{
\ql
References {\b ASCII_NUM_OFFSET}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d79/conversion_8h_a10b90e654db54d6aad3fb7c1ba84b5db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
conversion.h\par \pard\plain 
{\tc\tcl2 \v util/conversion.h}
{\xe \v util/conversion.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file conversion.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains several different simple and independent conversion functions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides utility functions for converting integers to strings or characters.}\par
00008 {\cf20  *}\par
00009 {\cf20  * @ingroup Utility}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see conversion.c}\par
00012 {\cf20  *}\par
00013 {\cf20  * @copyright}\par
00014 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00015 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00016 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00017 {\cf20  */}\par
00018 {\cf21 #ifndef CONVERSION_H}\par
00019 {\cf21 #define CONVERSION_H}\par
00020 \par
00021 {\cf21 #include <stddef.h>}\par
00022 {\cf21 #include <stdint.h>}\par
00023 \par
00024 {\cf21 #define ASCII_NUM_OFFSET 48}{\cf20 ///< Offset to convert a digit to its ASCII representation.}\par
00025 {\cf20 }\par
00026 {\cf20 /**}\par
00027 {\cf20  * @brief Converts an integer to a string.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @details}\par
00030 {\cf20  * Converts a given unsigned integer to its string representation and stores it in the provided}\par
00031 {\cf20  * buffer.}\par
00032 {\cf20  *}\par
00033 {\cf20  * @param[in] num The integer to convert.}\par
00034 {\cf20  * @param[out] buf The buffer to store the resulting string.}\par
00035 {\cf20  * @param[in] buf_size The size of the buffer.}\par
00036 {\cf20  *}\par
00037 {\cf20  * @return 0 on success, -1 if an error occurred (e.g., buffer is NULL or too small).}\par
00038 {\cf20  */}\par
00039 int8_t int_to_str(uint32_t num, {\cf18 char} *buf, {\cf17 const} {\cf18 size_t} buf_size);\par
00040 {\cf20 }\par
00041 {\cf20 /**}\par
00042 {\cf20  * @brief Converts an integer to a character.}\par
00043 {\cf20  *}\par
00044 {\cf20  * @details}\par
00045 {\cf20  * Converts a single-digit integer (0-9) to its corresponding ASCII character.}\par
00046 {\cf20  *}\par
00047 {\cf20  * @param[in] num The integer to convert (must be between 0 and 9).}\par
00048 {\cf20  *}\par
00049 {\cf20  * @return The ASCII character corresponding to the input integer.}\par
00050 {\cf20  */}\par
00051 {\cf18 char} int_to_char(uint8_t num);\par
00052 \par
00053 {\cf21 #endif}{\cf20 // CONVERSION_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/error_handling.h File Reference\par \pard\plain 
{\tc\tcl2 \v util/error_handling.h}
{\xe \v util/error_handling.h}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions to react on errors. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d03/error__handling_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HardFault_Handler} () __attribute__((interrupt))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles hard faults. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Default_Handler} () __attribute__((interrupt))\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles unexpected interrupts. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains functions to react on errors. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b error_handling.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b error_handling.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Default_Handler\:error_handling.h}
{\xe \v error_handling.h\:Default_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Default_Handler (void )}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles unexpected interrupts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when an unexpected interrupt occurs. It provides a mechanism to handle the interrupt and display an appropriate message.\par
Handles unexpected interrupts.\par
This is a weak symbol that can be overridden by a user-defined handler. \par
}{
Definition at line {\b 31} of file {\b error_handling.c}.}\par
{
\ql
References {\b handleError()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d11/error__handling_8h_a3c235ec4fcd11b5122f4fd56b9679b17_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HardFault_Handler\:error_handling.h}
{\xe \v error_handling.h\:HardFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HardFault_Handler (void )}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles hard faults. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a hard fault occurs. It provides a mechanism to handle the fault and display an appropriate message.\par
Handles hard faults.\par
This is a weak symbol that can be overridden by a user-defined handler. \par
}{
Definition at line {\b 25} of file {\b error_handling.c}.}\par
{
\ql
References {\b handleError()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d11/error__handling_8h_a143c30fa1037d6e6fda946559ecda6d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
error_handling.h\par \pard\plain 
{\tc\tcl2 \v util/error_handling.h}
{\xe \v util/error_handling.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file error_handling.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains functions to react on errors.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @ingroup Utility}\par
00007 {\cf20  *}\par
00008 {\cf20  * @see error_handling.c}\par
00009 {\cf20  *}\par
00010 {\cf20  * @copyright}\par
00011 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00012 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00013 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00014 {\cf20  */}\par
00015 {\cf21 #ifndef HARD_FAULT_H}\par
00016 {\cf21 #define HARD_FAULT_H}\par
00017 {\cf20 }\par
00018 {\cf20 /**}\par
00019 {\cf20  * @brief Handles hard faults.}\par
00020 {\cf20  *}\par
00021 {\cf20  * @details}\par
00022 {\cf20  * This function is triggered when a hard fault occurs. It provides}\par
00023 {\cf20  * a mechanism to handle the fault and display an appropriate message.}\par
00024 {\cf20  */}\par
00025 {\cf18 void} HardFault_Handler() __attribute__((interrupt));\par
00026 {\cf20 }\par
00027 {\cf20 /**}\par
00028 {\cf20  * @brief Handles unexpected interrupts.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @details}\par
00031 {\cf20  * This function is triggered when an unexpected interrupt occurs. It provides}\par
00032 {\cf20  * a mechanism to handle the interrupt and display an appropriate message.}\par
00033 {\cf20  */}\par
00034 {\cf18 void} Default_Handler() __attribute__((interrupt));\par
00035 \par
00036 {\cf21 #endif}{\cf20 // HARD_FAULT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/input_buf.h File Reference\par \pard\plain 
{\tc\tcl2 \v util/input_buf.h}
{\xe \v util/input_buf.h}
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains everything for the input buffer. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "def.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for input_buf.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d25/input__buf_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dfb/input__buf_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b InputBuffer}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RingBuffer for fixed memory footprint. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INPUT_BUF_SIZE}\~ 128\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the input buffer. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b input_onInterrupt} (uint8_t input)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to call in case of UART input interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b input_init} (volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the given {\b InputBuffer}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_isEmpty} (const volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is empty. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_isFull} (const volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is full. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_getNext} (volatile {\b InputBuffer} *ib, uint8_t *byte)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next byte from the buffer. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile {\b InputBuffer} {\b g_input_buf}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global input buffer instance. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains everything for the input buffer. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the definition of the {\b InputBuffer} struct and declarations of functions for managing the input buffer, including initialization, checking buffer state, and handling UART input interrupts.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b input_buf.c}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b input_buf.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v INPUT_BUF_SIZE\:input_buf.h}
{\xe \v input_buf.h\:INPUT_BUF_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INPUT_BUF_SIZE\~ 128}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Size of the input buffer. }}\par
{
Definition at line {\b 28} of file {\b input_buf.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v input_getNext\:input_buf.h}
{\xe \v input_buf.h\:input_getNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_getNext (volatile {\b InputBuffer} * ib, uint8_t * byte)}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next byte from the buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i ib} \cell }{{\b InputBuffer} to read from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i byte} \cell }{Pointer to store the next byte. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
False if the buffer is empty, true otherwise. \par
}}}{
Definition at line {\b 67} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::data}, {\b INPUT_BUF_SIZE}, {\b input_isEmpty()}, and {\b InputBuffer::tail}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_a3e03a367ae13ea8f68021a964efbef90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_a3e03a367ae13ea8f68021a964efbef90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_init\:input_buf.h}
{\xe \v input_buf.h\:input_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void input_init (volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the given {\b InputBuffer}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i ib} \cell }{{\b InputBuffer} to initialize. \cell }
{\row }
}
}{
Definition at line {\b 51} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_a9bb68967ad751f4b307afa735a3501ff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_isEmpty\:input_buf.h}
{\xe \v input_buf.h\:input_isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_isEmpty (const volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is empty. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ib} \cell }{{\b InputBuffer} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the buffer is empty, false otherwise. \par
}}}{
Definition at line {\b 57} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_aaec1348b29929f537c59bc6b5718bd4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_isFull\:input_buf.h}
{\xe \v input_buf.h\:input_isFull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_isFull (const volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is full. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ib} \cell }{{\b InputBuffer} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the buffer is full, false otherwise. \par
}}}{
Definition at line {\b 62} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, {\b INPUT_BUF_SIZE}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_a4401e9499819daae58c72b265d521374_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_onInterrupt\:input_buf.h}
{\xe \v input_buf.h\:input_onInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void input_onInterrupt (uint8_t input)}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to call in case of UART input interrupt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i input} \cell }{Pure input from UART. \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b input_buf.c}.}\par
{
\ql
References {\b g_input_buf}, and {\b putIntoBuf()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_ae603712ba6220d13a4389c08ea5fbed2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/db3/input__buf_8h_ae603712ba6220d13a4389c08ea5fbed2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_input_buf\:input_buf.h}
{\xe \v input_buf.h\:g_input_buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b InputBuffer} g_input_buf{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global input buffer instance. }}\par
{
Definition at line {\b 24} of file {\b input_buf.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input_buf.h\par \pard\plain 
{\tc\tcl2 \v util/input_buf.h}
{\xe \v util/input_buf.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file input_buf.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains everything for the input buffer.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the definition of the InputBuffer struct and declarations}\par
00008 {\cf20  * of functions for managing the input buffer, including initialization, checking}\par
00009 {\cf20  * buffer state, and handling UART input interrupts.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @ingroup Utility}\par
00012 {\cf20  *}\par
00013 {\cf20  * @see input_buf.c}\par
00014 {\cf20  *}\par
00015 {\cf20  * @copyright}\par
00016 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00017 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00018 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00019 {\cf20  */}\par
00020 \par
00021 {\cf21 #ifndef INPUT_BUF_H}\par
00022 {\cf21 #define INPUT_BUF_H}\par
00023 \par
00024 {\cf21 #include "def.h"}\par
00025 \par
00026 {\cf21 #include <stdint.h>}\par
00027 \par
00028 {\cf21 #define INPUT_BUF_SIZE 128}{\cf20 ///< Size of the input buffer}\par
00029 {\cf20 }\par
00030 {\cf20 /**}\par
00031 {\cf20  * @brief RingBuffer for fixed memory footprint.}\par
00032 {\cf20  *}\par
00033 {\cf20  * @details}\par
00034 {\cf20  * This struct represents a ring buffer with a fixed size, used for storing}\par
00035 {\cf20  * input data in a circular manner.}\par
00036 {\cf20  */}\par
00037 {\cf17 typedef} {\cf17 struct}\par
00038 \{\par
00039         uint8_t data[INPUT_BUF_SIZE];{\cf20 ///< Buffer data storage}\par
00040         {\cf17 volatile} uint16_t head;      {\cf20 ///< Index of the head (write position)}\par
00041         {\cf17 volatile} uint16_t tail;      {\cf20 ///< Index of the tail (read position)}\par
00042 \} InputBuffer;\par
00043 \par
00044 {\cf17 extern} {\cf17 volatile} InputBuffer g_input_buf;{\cf20 ///< Global input buffer instance}\par
00045 {\cf20 }\par
00046 {\cf20 /**}\par
00047 {\cf20  * @brief Function to call in case of UART input interrupt.}\par
00048 {\cf20  *}\par
00049 {\cf20  * @param[in] input Pure input from UART.}\par
00050 {\cf20  */}\par
00051 {\cf18 void} input_onInterrupt(uint8_t input);\par
00052 {\cf20 }\par
00053 {\cf20 /**}\par
00054 {\cf20  * @brief Initialize the given InputBuffer.}\par
00055 {\cf20  *}\par
00056 {\cf20  * @param[inout] ib InputBuffer to initialize.}\par
00057 {\cf20  */}\par
00058 {\cf18 void} input_init({\cf17 volatile} InputBuffer *ib);\par
00059 {\cf20 }\par
00060 {\cf20 /**}\par
00061 {\cf20  * @brief Check if the buffer is empty.}\par
00062 {\cf20  *}\par
00063 {\cf20  * @param[in] ib InputBuffer to check.}\par
00064 {\cf20  * @return True if the buffer is empty, false otherwise.}\par
00065 {\cf20  */}\par
00066 {\cf18 bool} input_isEmpty({\cf17 const} {\cf17 volatile} InputBuffer *ib);\par
00067 {\cf20 }\par
00068 {\cf20 /**}\par
00069 {\cf20  * @brief Check if the buffer is full.}\par
00070 {\cf20  *}\par
00071 {\cf20  * @param[in] ib InputBuffer to check.}\par
00072 {\cf20  * @return True if the buffer is full, false otherwise.}\par
00073 {\cf20  */}\par
00074 {\cf18 bool} input_isFull({\cf17 const} {\cf17 volatile} InputBuffer *ib);\par
00075 {\cf20 }\par
00076 {\cf20 /**}\par
00077 {\cf20  * @brief Get the next byte from the buffer.}\par
00078 {\cf20  *}\par
00079 {\cf20  * @param[inout] ib InputBuffer to read from.}\par
00080 {\cf20  * @param[out] byte Pointer to store the next byte.}\par
00081 {\cf20  * @return False if the buffer is empty, true otherwise.}\par
00082 {\cf20  */}\par
00083 {\cf18 bool} input_getNext({\cf17 volatile} InputBuffer *ib, uint8_t *{\cf18 byte});\par
00084 \par
00085 {\cf21 #endif}{\cf20 // INPUT_BUF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/math.h File Reference\par \pard\plain 
{\tc\tcl2 \v util/math.h}
{\xe \v util/math.h}
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent math functions. }}\par
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dcb/math_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b min}(a,  b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the minimum of two values. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b max}(a,  b)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the maximum of two values. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contains several different simple and independent math functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file provides utility macros for basic mathematical operations, such as finding the minimum or maximum of two values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
math.c\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b math.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v max\:math.h}
{\xe \v math.h\:max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define max( a,  b)}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid a > b ? a : b\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the maximum of two values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro evaluates to the larger of the two provided values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i a} \cell }{The first value. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i b} \cell }{The second value.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The larger of the two values.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This macro does not perform type checking and may evaluate its arguments multiple times. \par
}}}{
Definition at line {\b 52} of file {\b math.h}.}\par
}
{\xe \v min\:math.h}
{\xe \v math.h\:min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define min( a,  b)}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid a < b ? a : b\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the minimum of two values. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This macro evaluates to the smaller of the two provided values.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i a} \cell }{The first value. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i b} \cell }{The second value.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The smaller of the two values.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This macro does not perform type checking and may evaluate its arguments multiple times. \par
}}}{
Definition at line {\b 36} of file {\b math.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
math.h\par \pard\plain 
{\tc\tcl2 \v util/math.h}
{\xe \v util/math.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file math.h}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Contains several different simple and independent math functions}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file provides utility macros for basic mathematical operations, such as}\par
00008 {\cf20  * finding the minimum or maximum of two values.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @ingroup Utility}\par
00011 {\cf20  *}\par
00012 {\cf20  * @see math.c}\par
00013 {\cf20  *}\par
00014 {\cf20  * @copyright}\par
00015 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00016 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00017 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00018 {\cf20  */}\par
00019 {\cf21 #ifndef MATH_H}\par
00020 {\cf21 #define MATH_H}\par
00021 {\cf20 }\par
00022 {\cf20 /**}\par
00023 {\cf20  * @def min(a, b)}\par
00024 {\cf20  * @brief Get the minimum of two values.}\par
00025 {\cf20  *}\par
00026 {\cf20  * @details}\par
00027 {\cf20  * This macro evaluates to the smaller of the two provided values.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @param[in] a The first value.}\par
00030 {\cf20  * @param[in] b The second value.}\par
00031 {\cf20  *}\par
00032 {\cf20  * @return The smaller of the two values.}\par
00033 {\cf20  *}\par
00034 {\cf20  * @note This macro does not perform type checking and may evaluate its arguments multiple times.}\par
00035 {\cf20  */}\par
00036 {\cf21 #define min(a, b) a < b ? a : b}\par
00037 {\cf20 }\par
00038 {\cf20 /**}\par
00039 {\cf20  * @def max(a, b)}\par
00040 {\cf20  * @brief Get the maximum of two values.}\par
00041 {\cf20  *}\par
00042 {\cf20  * @details}\par
00043 {\cf20  * This macro evaluates to the larger of the two provided values.}\par
00044 {\cf20  *}\par
00045 {\cf20  * @param[in] a The first value.}\par
00046 {\cf20  * @param[in] b The second value.}\par
00047 {\cf20  *}\par
00048 {\cf20  * @return The larger of the two values.}\par
00049 {\cf20  *}\par
00050 {\cf20  * @note This macro does not perform type checking and may evaluate its arguments multiple times.}\par
00051 {\cf20  */}\par
00052 {\cf21 #define max(a, b) a > b ? a : b}\par
00053 \par
00054 {\cf21 #endif}{\cf20 // MATH_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/github/workspace/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v /github/workspace/README.md}
{\xe \v /github/workspace/README.md}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/interrupts.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/interrupts.c}
{\xe \v hal/interrupts.c}
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the interrupt handlers for UART and Timer interrupts. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/interrupts.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "hal/register_access.h"}\par
{\f2 #include "hal/timer.h"}\par
{\f2 #include "hal/uart.h"}\par
{\f2 #include "logic/time.h"}\par
{\f2 #include "util/input_buf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for interrupts.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d24/interrupts_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Interrupt2_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART interrupt handler. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Interrupt8_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer interrupt handler. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the interrupt handlers for UART and Timer interrupts. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b interrupts.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b interrupts.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Interrupt2_Handler\:interrupts.c}
{\xe \v interrupts.c\:Interrupt2_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Interrupt2_Handler ()}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UART interrupt handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a UART interrupt occurs. It reads a byte from the UART peripheral and processes it using the input buffer. The interrupt pending bit is cleared after handling the interrupt.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart_readByte} \par
}}}{
Definition at line {\b 23} of file {\b interrupts.c}.}\par
{
\ql
References {\b input_onInterrupt()}, {\b Interrupt_ICPR}, {\b Interrupt_ID2}, {\b register_write()}, and {\b uart_readByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d22/interrupts_8c_a0c135cb06b41d4db1ff45f59fd28dfb6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Interrupt8_Handler\:interrupts.c}
{\xe \v interrupts.c\:Interrupt8_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Interrupt8_Handler ()}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Timer interrupt handler. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a timer interrupt occurs. It resets the timer compare register and clears the interrupt pending bit. Additionally, it notifies the time module about the interrupt event.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time_onInterrupt} \par
}}}{
Definition at line {\b 29} of file {\b interrupts.c}.}\par
{
\ql
References {\b Interrupt_ICPR}, {\b Interrupt_ID8}, {\b register_write()}, {\b time_onInterrupt()}, {\b TIMER0_BASE_ADDRESS}, and {\b TIMER_COMPARE_0}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d22/interrupts_8c_a3e5a7488b98d542bdcb0e42adc2cf317_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
interrupts.c\par \pard\plain 
{\tc\tcl2 \v hal/interrupts.c}
{\xe \v hal/interrupts.c}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file interrupts.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements the interrupt handlers for UART and Timer interrupts.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see interrupts.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "hal/interrupts.h"}\par
00015 \par
00016 {\cf21 #include "hal/nvic.h"}\par
00017 {\cf21 #include "hal/register_access.h"}\par
00018 {\cf21 #include "hal/timer.h"}\par
00019 {\cf21 #include "hal/uart.h"}\par
00020 {\cf21 #include "logic/time.h"}\par
00021 {\cf21 #include "util/input_buf.h"}\par
00022 \par
00023 {\cf18 void} Interrupt2_Handler()\par
00024 \{\par
00025     input_onInterrupt(uart_readByte());\par
00026     register_write(Interrupt_ICPR, Interrupt_ID2);\par
00027 \}\par
00028 \par
00029 {\cf18 void} Interrupt8_Handler()\par
00030 \{\par
00031     register_write(TIMER0_BASE_ADDRESS | TIMER_COMPARE_0, 0);\par
00032     register_write(Interrupt_ICPR, Interrupt_ID8);\par
00033     time_onInterrupt();\par
00034 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/memset.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/memset.c}
{\xe \v hal/memset.c}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of a simple memset function. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/memset.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for memset.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/de1/memset_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b memset} (void *ptr, const int x, size_t n)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple implementation of memset. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of a simple memset function. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b memset.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b memset.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v memset\:memset.c}
{\xe \v memset.c\:memset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * memset (void * ptr, int x, size_t n)}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Simple implementation of memset. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the first {\b n}  bytes of the block of memory pointed to by {\b ptr}  to the specified value {\b x} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ptr} \cell }{Pointer to the block of memory to fill \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i x} \cell }{Value to be set. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i n} \cell }{Number of bytes to be set to the value\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the memory area\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Warning\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
While x is passed as an int, it is cast to a uint8_t (char) before being stored in the memory area. \par
}}}{
Definition at line {\b 18} of file {\b memset.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memset.c\par \pard\plain 
{\tc\tcl2 \v hal/memset.c}
{\xe \v hal/memset.c}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file memset.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of a simple memset function}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see memset.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "hal/memset.h"}\par
00015 \par
00016 {\cf21 #include <stdint.h>}\par
00017 \par
00018 {\cf18 void} *memset({\cf18 void} *ptr, {\cf17 const} {\cf18 int} x, {\cf18 size_t} n)\par
00019 \{\par
00020     uint8_t *p = ptr;\par
00021     {\cf19 while}(n--)\par
00022     \{\par
00023         *p++ = (uint8_t)x;\par
00024     \}\par
00025     {\cf19 return} ptr;\par
00026 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/random.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/random.c}
{\xe \v hal/random.c}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the RNG HAL for random number generation. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/random.h"}\par
{\f2 #include "hal/register_access.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for random.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d8a/random_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rng_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the generation of random numbers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b rng_getRandomValue_immediately} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator immediately. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b rng_getRandomValue_waiting} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator by polling and waiting. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the RNG HAL for random number generation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b random.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Based on version by Thomas Vogt\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b random.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rng_getRandomValue_immediately\:random.c}
{\xe \v random.c\:rng_getRandomValue_immediately}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t rng_getRandomValue_immediately ()}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator immediately. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function does not wait for the next value to be generated. It reads the current value from the RNG peripheral.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t A random byte. \par
}}}{
Definition at line {\b 27} of file {\b random.c}.}\par
{
\ql
References {\b register_read()}, {\b RNG_BASE_ADDRESS}, and {\b RNG_VALUE}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_ade0d5a07f6403292f21ff2b5f200f11f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_ade0d5a07f6403292f21ff2b5f200f11f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rng_getRandomValue_waiting\:random.c}
{\xe \v random.c\:rng_getRandomValue_waiting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t rng_getRandomValue_waiting ()}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the Random Value from the generator by polling and waiting. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function blocks until the RNG peripheral indicates that a new random value is ready. It then retrieves and returns the random byte.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t A random byte. \par
}}}{
Definition at line {\b 36} of file {\b random.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b RNG_BASE_ADDRESS}, {\b RNG_EVENT_CLEAR}, {\b rng_getRandomValue_immediately()}, and {\b RNG_VALRDY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_a0cc8207c13dfa65a8279450efa1751d3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_a0cc8207c13dfa65a8279450efa1751d3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rng_init\:random.c}
{\xe \v random.c\:rng_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void rng_init ()}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables the generation of random numbers. }}\par
{
Definition at line {\b 21} of file {\b random.c}.}\par
{
\ql
References {\b register_write()}, {\b RNG_BASE_ADDRESS}, {\b RNG_START}, and {\b RNG_TASK_START}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_a892aefef3ee12161a32838eb5c6e3087_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/de5/random_8c_a892aefef3ee12161a32838eb5c6e3087_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
random.c\par \pard\plain 
{\tc\tcl2 \v hal/random.c}
{\xe \v hal/random.c}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file random.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of the RNG HAL for random number generation.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see random.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @note}\par
00009 {\cf20  * Based on version by Thomas Vogt}\par
00010 {\cf20  *}\par
00011 {\cf20  * @copyright}\par
00012 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00013 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00014 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00015 {\cf20  */}\par
00016 \par
00017 {\cf21 #include "hal/random.h"}\par
00018 {\cf21 #include "hal/register_access.h"}\par
00019 {\cf21 #include <stdint.h>}\par
00020 \par
00021 {\cf18 void} rng_init()\par
00022 \{\par
00023     {\cf20 // Write a '1' to the Start Task, to start the generation of random numbers}\par
00024     register_write(RNG_BASE_ADDRESS | RNG_START, RNG_TASK_START);\par
00025 \}\par
00026 \par
00027 uint8_t rng_getRandomValue_immediately()\par
00028 \{\par
00029     {\cf20 // Read 32-Bit Register containing the RNG Value}\par
00030     {\cf17 const} uint32_t randomValue = register_read(RNG_BASE_ADDRESS | RNG_VALUE);\par
00031 \par
00032     {\cf20 // It's actually just 8-Bit, so cast it.}\par
00033     {\cf19 return} (uint8_t)randomValue;\par
00034 \}\par
00035 \par
00036 uint8_t rng_getRandomValue_waiting()\par
00037 \{\par
00038     {\cf20 // Wait until the Value Ready event is set}\par
00039     {\cf19 while}(register_read(RNG_BASE_ADDRESS | RNG_VALRDY) == 0)\par
00040     \{\par
00041         {\cf20 // Wait until the Value is ready}\par
00042     \}\par
00043 \par
00044     {\cf20 // Clear the Value Ready event}\par
00045     register_write(RNG_BASE_ADDRESS | RNG_VALRDY, RNG_EVENT_CLEAR);\par
00046 \par
00047     {\cf20 // Return the random value}\par
00048     {\cf19 return} rng_getRandomValue_immediately();\par
00049 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/register_access.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/register_access.c}
{\xe \v hal/register_access.c}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Implementation. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/register_access.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for register_access.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d33/register__access_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b register_write} (const uint32_t address, const uint32_t value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a value to a hardware register. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b register_read} (const uint32_t address)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from a hardware register. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Register Access Implementation. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b register_access.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Thomas Vogt \par
Sven Reis\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b register_access.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v register_read\:register_access.c}
{\xe \v register_access.c\:register_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t register_read (uint32_t address)}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a value from a hardware register. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{Memory address of the register.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Value read from the register. \par
}}}{
Definition at line {\b 29} of file {\b register_access.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d9f/register__access_8c_a5a3f22e14522fbf55469425a4a48a5cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v register_write\:register_access.c}
{\xe \v register_access.c\:register_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void register_write (uint32_t address, uint32_t value)}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a value to a hardware register. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i address} \cell }{Memory address of the register. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{Value to write to the register. \cell }
{\row }
}
}{
Definition at line {\b 20} of file {\b register_access.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d9f/register__access_8c_a53fb0d9bb1b0c3e72ab6760c69cad891_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
register_access.c\par \pard\plain 
{\tc\tcl2 \v hal/register_access.c}
{\xe \v hal/register_access.c}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file register_access.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Register Access Implementation}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see}\par
00007 {\cf20  *  register_access.h}\par
00008 {\cf20  *}\par
00009 {\cf20  * @author Thomas Vogt}\par
00010 {\cf20  * @author Sven Reis}\par
00011 {\cf20  *}\par
00012 {\cf20  * @copyright}\par
00013 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00014 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00015 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00016 {\cf20  */}\par
00017 \par
00018 {\cf21 #include "hal/register_access.h"}\par
00019 \par
00020 {\cf18 void} register_write({\cf17 const} uint32_t address, {\cf17 const} uint32_t value)\par
00021 \{\par
00022     {\cf20 // Assign pointer to given address:}\par
00023     uint32_t * {\cf17 const} pointer_to_address = (uint32_t *)address;\par
00024 \par
00025     {\cf20 // Write to the End of the Pointer}\par
00026     *pointer_to_address = value;\par
00027 \}\par
00028 \par
00029 uint32_t register_read({\cf17 const} uint32_t address)\par
00030 \{\par
00031     {\cf20 // Assign pointer to given address:}\par
00032     uint32_t {\cf17 const} * {\cf17 const} pointer_to_address = (uint32_t *)address;\par
00033 \par
00034     {\cf20 // Read from the End of the Pointer}\par
00035     {\cf17 const} uint32_t value = *pointer_to_address;\par
00036 \par
00037     {\cf20 // Return the read value}\par
00038     {\cf19 return} value;\par
00039 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/system.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/system.c}
{\xe \v hal/system.c}
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of system control functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/system.h"}\par
{\f2 #include "def.h"}\par
{\f2 #include "hal/register_access.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for system.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d4a/system_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b system_softReset} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger a soft reset of the system. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b system_offMode} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers "off" mode of the system. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of system control functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b system.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b system.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v system_offMode\:system.c}
{\xe \v system.c\:system_offMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void system_offMode ()}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Triggers "off" mode of the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Never returns}  \par
}}}{
Definition at line {\b 26} of file {\b system.c}.}\par
{
\ql
References {\b register_write()}, {\b SYS_POWER}, and {\b SYS_SYSTEMOFF}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dfd/system_8c_a077a1d054ddfb6fb237fb8d288b3b1d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dfd/system_8c_a077a1d054ddfb6fb237fb8d288b3b1d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v system_softReset\:system.c}
{\xe \v system.c\:system_softReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void system_softReset ()}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trigger a soft reset of the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b Never returns}  \par
}}}{
Definition at line {\b 18} of file {\b system.c}.}\par
{
\ql
References {\b register_write()}, {\b SYS_AIRCR}, {\b SYS_SYSRESETREQ}, and {\b SYS_VECTKEY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dfd/system_8c_a97bacc4493b8a3008bdbdd7a83e86642_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dfd/system_8c_a97bacc4493b8a3008bdbdd7a83e86642_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
system.c\par \pard\plain 
{\tc\tcl2 \v hal/system.c}
{\xe \v hal/system.c}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file system.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of system control functions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see system.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "hal/system.h"}\par
00015 {\cf21 #include "def.h"}\par
00016 {\cf21 #include "hal/register_access.h"}\par
00017 \par
00018 {\cf18 void} system_softReset()\par
00019 \{\par
00020     register_write(SYS_AIRCR, SYS_VECTKEY | SYS_SYSRESETREQ);\par
00021     {\cf20 // ReSharper disable once CppDFAEndlessLoop}\par
00022     {\cf19 while}({\cf17 true})\par
00023         ;\par
00024 \}\par
00025 \par
00026 {\cf18 void} system_offMode()\par
00027 \{\par
00028     register_write(SYS_POWER | SYS_SYSTEMOFF, 1);\par
00029     {\cf20 // ReSharper disable once CppDFAEndlessLoop}\par
00030     {\cf19 while}({\cf17 true})\par
00031         ;\par
00032 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/timer.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/timer.c}
{\xe \v hal/timer.c}
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/timer.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "hal/register_access.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for timer.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d56/timer_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_init} ({\b Timer} const timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Initialisation of Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_init_detailed} ({\b Timer} const timer, uint8_t const prescaler, {\b TimerBitMode} const bitMode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialises the Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_captureCompareSet} (const {\b Timer} timer, const {\b TimerCaptureCompare} captureCompare, const uint32_t value, const {\b bool} shortcutClear)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Capture/ Compare Register of the Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b timer_captureCompareGet} (const {\b Timer} timer, const {\b TimerCaptureCompare} captureCompare)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capture Compare Register of Timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_start} (const {\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_stop} (const {\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_count} (const {\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activate counting on the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_clear} (const {\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the time of the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_capture} (const {\b Timer} timer, const {\b TimerCaptureCompare} capture)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture the time of the given timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b timer_clearCompareEvent} (const {\b Timer} timer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the Compare Event for CC[0]. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const uint32_t {\b TimerBase} [3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const uint32_t {\b TimerCCOffset} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const uint32_t {\b TimerCaptureTaskOffset} [4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Author\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Date\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b timer.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v timer_capture\:timer.c}
{\xe \v timer.c\:timer_capture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_capture ({\b Timer} timer, {\b TimerCaptureCompare} capture)}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Capture the time of the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i capture} \cell }{Number of the Capture Compare \cell }
{\row }
}
}{
Definition at line {\b 120} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_TASK_START}, {\b TimerBase}, and {\b TimerCaptureTaskOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a3a07f4678518ae033c32482fd71486b8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_captureCompareGet\:timer.c}
{\xe \v timer.c\:timer_captureCompareGet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t timer_captureCompareGet ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare)}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the Capture Compare Register of Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i timer} \cell }{Timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i captureCompare} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 84} of file {\b timer.c}.}\par
{
\ql
References {\b register_read()}, {\b TimerBase}, and {\b TimerCCOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a0dd8b6bec01b35daa0f8ef5587c4ba23_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_captureCompareSet\:timer.c}
{\xe \v timer.c\:timer_captureCompareSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_captureCompareSet ({\b Timer} timer, {\b TimerCaptureCompare} captureCompare, uint32_t value, {\b bool} shortcutClear)}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the Capture/ Compare Register of the Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
It also enables the shortcut between CC[0] and CLEAR, so that the timer is cleared, when the compared value is reached.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Timer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i captureCompare} \cell }{Capture Compare Register \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{New Value \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i shortcutClear} \cell }{\cell }
{\row }
}
}{
Definition at line {\b 67} of file {\b timer.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b TIMER_SHORTS}, {\b TimerBase}, and {\b TimerCCOffset}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a6bb9bef52a6d01f72cbbb032d00f4929_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a6bb9bef52a6d01f72cbbb032d00f4929_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_clear\:timer.c}
{\xe \v timer.c\:timer_clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_clear ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the time of the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 113} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_CLEAR}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_aa9eb0af984435d40e0cbb14df0c73b2e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_clearCompareEvent\:timer.c}
{\xe \v timer.c\:timer_clearCompareEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_clearCompareEvent ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the Compare Event for CC[0]. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This could be useful for stopping the timer from pulling the interrupt-line. \par
}{
Definition at line {\b 128} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_COMPARE_0}, {\b TIMER_EVENT_CLEAR}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_ae3480983223f15ee07ab94146a958285_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_count\:timer.c}
{\xe \v timer.c\:timer_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_count ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Activate counting on the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 106} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_COUNT}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a787fcca546f80aacba0cbc2f755c9de4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_init\:timer.c}
{\xe \v timer.c\:timer_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_init ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default Initialisation of Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the Timer Peripheral to a value ~4sek. This is just for demonstration and could be changed to your needs \par
}{
Definition at line {\b 40} of file {\b timer.c}.}\par
{
\ql
References {\b CC0}, {\b TIMER_BIT_MODE_32}, {\b timer_captureCompareSet()}, {\b timer_init_detailed()}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_acd2972fffc78d5b8bfeda05701882565_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_init_detailed\:timer.c}
{\xe \v timer.c\:timer_init_detailed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_init_detailed ({\b Timer} timer, uint8_t prescaler, {\b TimerBitMode} bitMode)}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialises the Timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compare Value set is for CC[0]\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i prescaler} \cell }{Register value according to {\f2 Table 147: PRESCALER} . value 0..9 is valid ==> 2^0 .. 2^9 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i bitmode} \cell }{Bit Mode. \cell }
{\row }
}
}{
Definition at line {\b 48} of file {\b timer.c}.}\par
{
\ql
References {\b INT_COMPARE0}, {\b Interrupt_ID8}, {\b Interrupt_Set_Enable}, {\b register_write()}, {\b TIMER0_BASE_ADDRESS}, {\b TIMER_BITMODE}, {\b TIMER_INTENSET}, {\b TIMER_PRESCALER}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_ac628cc278108107135dc67d231b1f234_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_ac628cc278108107135dc67d231b1f234_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_start\:timer.c}
{\xe \v timer.c\:timer_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_start ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Starts the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Timer \cell }
{\row }
}
}{
Definition at line {\b 92} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_START}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_aa898170d23f3665396d10739d1e2bb0a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_aa898170d23f3665396d10739d1e2bb0a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v timer_stop\:timer.c}
{\xe \v timer.c\:timer_stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void timer_stop ({\b Timer} timer)}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the given timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i timer} \cell }{Number of the timer \cell }
{\row }
}
}{
Definition at line {\b 99} of file {\b timer.c}.}\par
{
\ql
References {\b register_write()}, {\b TIMER_STOP}, {\b TIMER_TASK_START}, and {\b TimerBase}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a6324e112e3cd853e8aafb3f4bb704bbd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d41/timer_8c_a6324e112e3cd853e8aafb3f4bb704bbd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v TimerBase\:timer.c}
{\xe \v timer.c\:TimerBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint32_t TimerBase[3]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    TIMER0_BASE_ADDRESS,\par
    TIMER1_BASE_ADDRESS,\par
    TIMER2_BASE_ADDRESS\}\par
}
{
Definition at line {\b 25} of file {\b timer.c}.}\par
}
{\xe \v TimerCaptureTaskOffset\:timer.c}
{\xe \v timer.c\:TimerCaptureTaskOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint32_t TimerCaptureTaskOffset[4]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
    \{TIMER_CAPTURE_0, TIMER_CAPTURE_1, TIMER_CAPTURE_2, TIMER_CAPTURE_3\}\par
}
{
Definition at line {\b 37} of file {\b timer.c}.}\par
}
{\xe \v TimerCCOffset\:timer.c}
{\xe \v timer.c\:TimerCCOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint32_t TimerCCOffset[4]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    TIMER_CC_0,\par
    TIMER_CC_1,\par
    TIMER_CC_2,\par
    TIMER_CC_3,\par
\}\par
}
{
Definition at line {\b 30} of file {\b timer.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
timer.c\par \pard\plain 
{\tc\tcl2 \v hal/timer.c}
{\xe \v hal/timer.c}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file}\par
00003 {\cf20  *}\par
00004 {\cf20  * @author}\par
00005 {\cf20  *}\par
00006 {\cf20  * @date}\par
00007 {\cf20  *}\par
00008 {\cf20  * @brief}\par
00009 {\cf20  *}\par
00010 {\cf20  * @see}\par
00011 {\cf20  *}\par
00012 {\cf20  * @copyright}\par
00013 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00014 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00015 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00016 {\cf20  *}\par
00017 {\cf20  */}\par
00018 {\cf21 #include "hal/timer.h"}\par
00019 \par
00020 {\cf21 #include "hal/nvic.h"}\par
00021 {\cf21 #include "hal/register_access.h"}\par
00022 \par
00023 {\cf21 #include <stdint.h>}\par
00024 \par
00025 {\cf17 static} {\cf17 const} uint32_t TimerBase[3] = \{\par
00026     TIMER0_BASE_ADDRESS,\par
00027     TIMER1_BASE_ADDRESS,\par
00028     TIMER2_BASE_ADDRESS\};\par
00029 \par
00030 {\cf17 static} {\cf17 const} uint32_t TimerCCOffset[4] = \{\par
00031     TIMER_CC_0,\par
00032     TIMER_CC_1,\par
00033     TIMER_CC_2,\par
00034     TIMER_CC_3,\par
00035 \};\par
00036 \par
00037 {\cf17 static} {\cf17 const} uint32_t TimerCaptureTaskOffset[4] =\par
00038     \{TIMER_CAPTURE_0, TIMER_CAPTURE_1, TIMER_CAPTURE_2, TIMER_CAPTURE_3\};\par
00039 \par
00040 {\cf18 void} timer_init(Timer {\cf17 const} timer)\par
00041 \{\par
00042     {\cf20 // Init Timer with an interval of ~4sek}\par
00043     timer_init_detailed(timer, 15, TIMER_BIT_MODE_32);\par
00044     timer_captureCompareSet(timer, CC0, 1953, {\cf17 true});\par
00045     timer_start(timer);\par
00046 \}\par
00047 \par
00048 {\cf18 void} timer_init_detailed(Timer {\cf17 const} timer, uint8_t {\cf17 const} prescaler, TimerBitMode {\cf17 const} bitMode)\par
00049 \{\par
00050     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00051     {\cf20 // Instance[0] of the Timer uses Peripheral ID: 8}\par
00052 \par
00053     {\cf20 // Prescaler}\par
00054     register_write(timerBase | TIMER_PRESCALER, prescaler);\par
00055 \par
00056     {\cf20 // BitMode}\par
00057     register_write(timerBase | TIMER_BITMODE, bitMode);\par
00058 \par
00059     {\cf20 // Enable Interrupt}\par
00060     register_write(TIMER0_BASE_ADDRESS | TIMER_INTENSET, INT_COMPARE0);{\cf20 // Interrupt on Compare[0]}\par
00061 \par
00062     {\cf20 // Enable User-Interrupt from Cortex-M0}\par
00063     {\cf20 // ID8 ist der Timer0}\par
00064     register_write(Interrupt_Set_Enable, Interrupt_ID8);\par
00065 \}\par
00066 \par
00067 {\cf18 void} timer_captureCompareSet(\par
00068     {\cf17 const} Timer timer,\par
00069     {\cf17 const} TimerCaptureCompare captureCompare,\par
00070     {\cf17 const} uint32_t value,\par
00071     {\cf17 const} {\cf18 bool} shortcutClear)\par
00072 \{\par
00073     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00074     {\cf17 const} uint32_t ccAddress = timerBase | TimerCCOffset[captureCompare];\par
00075 \par
00076     register_write(ccAddress, value);\par
00077 \par
00078     {\cf20 // Enable Shortcut between CC[0] and CLEAR}\par
00079     uint32_t oldValue = register_read(timerBase | TIMER_SHORTS);\par
00080     oldValue &= ~(1 << captureCompare);\par
00081     register_write(timerBase | TIMER_SHORTS, oldValue | (shortcutClear ? 1 : 0) << captureCompare);\par
00082 \}\par
00083 \par
00084 uint32_t timer_captureCompareGet({\cf17 const} Timer timer, {\cf17 const} TimerCaptureCompare captureCompare)\par
00085 \{\par
00086     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00087     {\cf17 const} uint32_t ccAddress = timerBase | TimerCCOffset[captureCompare];\par
00088 \par
00089     {\cf19 return} register_read(ccAddress);\par
00090 \}\par
00091 \par
00092 {\cf18 void} timer_start({\cf17 const} Timer timer)\par
00093 \{\par
00094     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00095 \par
00096     register_write(timerBase | TIMER_START, TIMER_TASK_START);\par
00097 \}\par
00098 \par
00099 {\cf18 void} timer_stop({\cf17 const} Timer timer)\par
00100 \{\par
00101     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00102 \par
00103     register_write(timerBase | TIMER_STOP, TIMER_TASK_START);\par
00104 \}\par
00105 \par
00106 {\cf18 void} timer_count({\cf17 const} Timer timer)\par
00107 \{\par
00108     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00109 \par
00110     register_write(timerBase | TIMER_COUNT, TIMER_TASK_START);\par
00111 \}\par
00112 \par
00113 {\cf18 void} timer_clear({\cf17 const} Timer timer)\par
00114 \{\par
00115     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00116 \par
00117     register_write(timerBase | TIMER_CLEAR, TIMER_TASK_START);\par
00118 \}\par
00119 \par
00120 {\cf18 void} timer_capture({\cf17 const} Timer timer, {\cf17 const} TimerCaptureCompare capture)\par
00121 \{\par
00122     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00123     {\cf17 const} uint32_t timerCaptureTaskOffset = timerBase | TimerCaptureTaskOffset[capture];\par
00124 \par
00125     register_write(timerCaptureTaskOffset, TIMER_TASK_START);\par
00126 \}\par
00127 \par
00128 {\cf18 void} timer_clearCompareEvent({\cf17 const} Timer timer)\par
00129 \{\par
00130     {\cf17 const} uint32_t timerBase = TimerBase[timer];\par
00131 \par
00132     register_write(timerBase | TIMER_COMPARE_0, TIMER_EVENT_CLEAR);\par
00133 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
hal/uart.c File Reference\par \pard\plain 
{\tc\tcl2 \v hal/uart.c}
{\xe \v hal/uart.c}
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements UART initialization and data transfer functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "hal/uart.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "hal/register_access.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for uart.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d56/uart_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_init} (const {\b bool} with_interrupts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the UART with the following settings: 115200-8-N-1. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b uart_writeByte} (const uint8_t data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes/Sends a byte over the serial port. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b uart_readByte} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads/Receives a byte from the serial port. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements UART initialization and data transfer functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b uart.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b uart.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v uart_init\:uart.c}
{\xe \v uart.c\:uart_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_init ({\b bool} with_interrupts)}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the UART with the following settings: 115200-8-N-1. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i with_interrupts} \cell }{Whether or not interrupts should be triggered. \cell }
{\row }
}
}{
Definition at line {\b 20} of file {\b uart.c}.}\par
{
\ql
References {\b Interrupt_ID2}, {\b Interrupt_Set_Enable}, {\b register_write()}, {\b UART_BASE_ADDRESS}, {\b UART_ENABLE}, {\b UART_INT_RXDRDY}, {\b UART_INTENSET}, {\b UART_STARTRX}, {\b UART_STARTTX}, and {\b UART_TASK_START}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_a4576a80256ec582cab4eb85919c0905a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_a4576a80256ec582cab4eb85919c0905a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v uart_readByte\:uart.c}
{\xe \v uart.c\:uart_readByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t uart_readByte ()}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads/Receives a byte from the serial port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
uint8_t Received byte or 0 (zero) if nothing was received. \par
}}}{
Definition at line {\b 62} of file {\b uart.c}.}\par
{
\ql
References {\b register_read()}, {\b register_write()}, {\b UART_BASE_ADDRESS}, {\b UART_EVENT_CLEAR}, {\b UART_RXD}, and {\b UART_RXDRDY}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_a991a6e99e9369a11dcf02bdf1d1ba6ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_a991a6e99e9369a11dcf02bdf1d1ba6ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v uart_writeByte\:uart.c}
{\xe \v uart.c\:uart_writeByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void uart_writeByte (uint8_t data)}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes/Sends a byte over the serial port. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i data} \cell }{Byte to send. \cell }
{\row }
}
}{
Definition at line {\b 54} of file {\b uart.c}.}\par
{
\ql
References {\b register_write()}, {\b UART_BASE_ADDRESS}, and {\b UART_TXD}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_ac0cdef9b393ad8c650295aba6aa5a7ea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d87/uart_8c_ac0cdef9b393ad8c650295aba6aa5a7ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
uart.c\par \pard\plain 
{\tc\tcl2 \v hal/uart.c}
{\xe \v hal/uart.c}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file uart.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements UART initialization and data transfer functions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see uart.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "hal/uart.h"}\par
00015 {\cf21 #include "hal/nvic.h"}\par
00016 {\cf21 #include "hal/register_access.h"}\par
00017 \par
00018 {\cf21 #include <stdint.h>}\par
00019 \par
00020 {\cf18 void} uart_init({\cf17 const} {\cf18 bool} with_interrupts)\par
00021 \{\par
00022     {\cf20 // Set Flow-Control and/or Parity (see Table 288, page 156).}\par
00023     {\cf20 // Hardware flow control: Disabled = 0 (default).}\par
00024     {\cf20 // Parity: Exclude parity bit = 0x0 (default).}\par
00025     {\cf20 // register_write((UART_BASE_ADDRESS + UART_CONFIG), 0); // Optional.}\par
00026 \par
00027     {\cf20 // Configure GPIO Pins for RXD, TXD.}\par
00028     {\cf20 // PSELRTS - disconnected (default).}\par
00029     {\cf20 // register_write((UART_BASE_ADDRESS + UART_PSELRTS), 0xFFFFFFFF); // Optional.}\par
00030 \par
00031     {\cf20 // Set baud rate (see Table 287 on page 156).}\par
00032     {\cf20 // Baud115200 = 0x01D7E000.}\par
00033     {\cf20 // register_write((UART_BASE_ADDRESS + UART_BAUDRATE), 0x01D7E000);}\par
00034 \par
00035     {\cf20 // Enable UART.}\par
00036     register_write(UART_BASE_ADDRESS + UART_ENABLE, 4);\par
00037 \par
00038     {\cf20 // Fire the START event for the Transmitter.}\par
00039     register_write(UART_BASE_ADDRESS + UART_STARTTX, UART_TASK_START);\par
00040 \par
00041     {\cf20 // Fire the START event for the Receiver.}\par
00042     register_write(UART_BASE_ADDRESS + UART_STARTRX, UART_TASK_START);\par
00043 \par
00044     {\cf19 if}(with_interrupts)\par
00045     \{\par
00046         {\cf20 // Enable Interrupt for RXDRDY.}\par
00047         register_write(UART_BASE_ADDRESS | UART_INTENSET, UART_INT_RXDRDY);\par
00048 \par
00049         {\cf20 // Enable User-Interrupt from Cortex-M0 (ID2 is the UART).}\par
00050         register_write(Interrupt_Set_Enable, Interrupt_ID2);\par
00051     \}\par
00052 \}\par
00053 \par
00054 {\cf18 void} uart_writeByte({\cf17 const} uint8_t data)\par
00055 \{\par
00056     {\cf20 // Write the data to the TXD register.}\par
00057     register_write(UART_BASE_ADDRESS + UART_TXD, data);\par
00058 \par
00059     {\cf20 // Wait until the data is transmitted (polling TXDRDY).}\par
00060 \}\par
00061 \par
00062 uint8_t uart_readByte()\par
00063 \{\par
00064     {\cf20 // Check if RXDRDY event is ready.}\par
00065     {\cf17 const} uint32_t receiveIsReady = register_read(UART_BASE_ADDRESS + UART_RXDRDY);\par
00066 \par
00067     {\cf19 if}(!receiveIsReady)\par
00068     \{\par
00069         {\cf20 // FIFO is not ready to read, return 0.}\par
00070         {\cf19 return} 0;\par
00071     \}\par
00072 \par
00073     {\cf20 // Clear the RXDRDY event before reading from RXD.}\par
00074     register_write(UART_BASE_ADDRESS + UART_RXDRDY, UART_EVENT_CLEAR);\par
00075 \par
00076     {\cf20 // Read and return the received byte from RXD.}\par
00077     {\cf19 return} register_read(UART_BASE_ADDRESS + UART_RXD);\par
00078 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/bot.c File Reference\par \pard\plain 
{\tc\tcl2 \v logic/bot.c}
{\xe \v logic/bot.c}
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of bot logic for Tic-Tac-Toe game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/bot.h"}\par
{\f2 #include "hal/random.h"}\par
{\f2 #include "logic/game.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for bot.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d11/bot_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Cell} * {\b bot_markRandomCell} ({\b Cell} cells[{\b CELLS_PER_COL}][{\b CELLS_PER_ROW}], const {\b Player} marked_by)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark a random unmarked cell on the game board. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of bot logic for Tic-Tac-Toe game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b bot.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b bot.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bot_markRandomCell\:bot.c}
{\xe \v bot.c\:bot_markRandomCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Cell} * bot_markRandomCell ({\b Cell} cells[CELLS_PER_COL][CELLS_PER_ROW], {\b Player} marked_by)}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark a random unmarked cell on the game board. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cells} \cell }{2D field of cells representing the game board. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i marked_by} \cell }{Player who should mark the cell.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Pointer to the marked cell.\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Warning\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function assumes that there is at least one unmarked cell on the board. If there is not, the function will loop indefinitely. \par
}}}{
Definition at line {\b 20} of file {\b bot.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b None}, and {\b rng_getRandomValue_waiting()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d98/bot_8c_a35e54b11b140786344c2cf1a75251f5f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d98/bot_8c_a35e54b11b140786344c2cf1a75251f5f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bot.c\par \pard\plain 
{\tc\tcl2 \v logic/bot.c}
{\xe \v logic/bot.c}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file bot.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of bot logic for Tic-Tac-Toe game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see}\par
00007 {\cf20  *  bot.h}\par
00008 {\cf20  *}\par
00009 {\cf20  * @copyright}\par
00010 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00011 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00012 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00013 {\cf20  */}\par
00014 \par
00015 {\cf21 #include "logic/bot.h"}\par
00016 \par
00017 {\cf21 #include "hal/random.h"}\par
00018 {\cf21 #include "logic/game.h"}\par
00019 \par
00020 Cell *bot_markRandomCell(Cell cells[CELLS_PER_COL][CELLS_PER_ROW], {\cf17 const} Player marked_by)\par
00021 \{\par
00022     {\cf19 for}(;;)\par
00023     \{\par
00024         {\cf17 const} uint8_t col = rng_getRandomValue_waiting() % CELLS_PER_ROW;\par
00025         {\cf17 const} uint8_t row = rng_getRandomValue_waiting() % CELLS_PER_COL;\par
00026 \par
00027         {\cf19 if}(cells[row][col].marked_by == None)\par
00028         \{\par
00029             cells[row][col].marked_by = marked_by;\par
00030             Cell *cell = &cells[row][col];\par
00031             {\cf20 /* cell_redraw(cell); */}\par
00032             {\cf19 return} cell;\par
00033         \}\par
00034     \}\par
00035 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/game.c File Reference\par \pard\plain 
{\tc\tcl2 \v logic/game.c}
{\xe \v logic/game.c}
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the core game logic for Tic-Tac-Toe. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/game.h"}\par
{\f2 #include "config.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "hal/random.h"}\par
{\f2 #include "hal/timer.h"}\par
{\f2 #include "logic/bot.h"}\par
{\f2 #include "logic/input.h"}\par
{\f2 #include "logic/time.h"}\par
{\f2 #include "logic/winning.h"}\par
{\f2 #include "presentation/cell.h"}\par
{\f2 #include "presentation/field.h"}\par
{\f2 #include "presentation/menu.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
{\f2 #include "presentation/ui.h"}\par
{\f2 #include "util/input_buf.h"}\par
{\f2 #include "util/math.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for game.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/de8/game_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b init} ({\b Mode} mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes relevant things at the game start. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b handleForcedMoveUpdate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles the presentation update, when a move is forced due to timeout. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b redrawField} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Refreshes the whole UI. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b calculateSummary} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates game summary statistics. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Player} {\b startingPlayer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Randomly determines the starting player. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_run} (const {\b Mode} mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start the main game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_onTimeOut} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically end a turn in case the turn time is over. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b game_endTurn} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the current turn. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile {\b bool} {\b force_ui_update} = {\b false}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force an update of the UI. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b GameState} {\b game_state}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b GameState} of the current game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b CellState} {\b cell_state}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CellState} of the current game. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the core game logic for Tic-Tac-Toe. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b game.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b game.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v calculateSummary\:game.c}
{\xe \v game.c\:calculateSummary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void calculateSummary (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates game summary statistics. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes total and average ticks for each player and the game overall.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Statistics are written to the game_state struct. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b game_state} \par
}}}{
Definition at line {\b 246} of file {\b game.c}.}\par
{
\ql
References {\b GameState::average_ticks}, {\b Circle}, {\b GameState::circle_average_ticks}, {\b GameState::circle_total_ticks}, {\b Cross}, {\b GameState::cross_average_ticks}, {\b GameState::cross_total_ticks}, {\b g_timer}, {\b game_state}, {\b GameState::mode}, {\b PVE}, {\b GameState::round}, {\b GameTimer::ticks_total}, {\b GameState::total_ticks}, and {\b GameState::winner}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a518b849acc5ec6c771aa17706ac9c3b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v game_endTurn\:game.c}
{\xe \v game.c\:game_endTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_endTurn ()}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Finish the current turn. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the game state and switches to the next player or round. \par
}{
Definition at line {\b 169} of file {\b game.c}.}\par
{
\ql
References {\b cell_state}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b GameState::fields_marked}, {\b game_state}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b GameState::mode}, {\b PVE}, {\b GameState::round}, {\b CellState::selected}, and {\b time_finishTurn()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a729e60fc5298c74e80423c136d1f6a5a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a729e60fc5298c74e80423c136d1f6a5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v game_onTimeOut\:game.c}
{\xe \v game.c\:game_onTimeOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_onTimeOut ()}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Automatically end a turn in case the turn time is over. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time_onInterrupt} \par
}}}{
Definition at line {\b 149} of file {\b game.c}.}\par
{
\ql
References {\b CellState::all}, {\b bot_markRandomCell()}, {\b cell_state}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b force_ui_update}, {\b game_endTurn()}, {\b game_state}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b GameState::mode}, and {\b PVE}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a664affa156a0a5fa033bad0b88bb6c72_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a664affa156a0a5fa033bad0b88bb6c72_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v game_run\:game.c}
{\xe \v game.c\:game_run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void game_run (const {\b Mode} mode)}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start the main game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the game and enters the main game loop.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i mode} \cell }{Which mode the game should be played in. \cell }
{\row }
}
}{
Definition at line {\b 82} of file {\b game.c}.}\par
{
\ql
References {\b __WFI}, {\b CellState::all}, {\b BOLD}, {\b bot_markRandomCell()}, {\b calculateSummary()}, {\b cell_redraw_withModifier()}, {\b cell_redrawAll()}, {\b cell_select()}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b GameState::fields_marked}, {\b force_ui_update}, {\b g_input_buf}, {\b g_timer}, {\b game_state}, {\b handleForcedMoveUpdate()}, {\b init()}, {\b input_getNext()}, {\b input_handleByte()}, {\b GameTimer::is_running}, {\b CellState::last_circle}, {\b max}, {\b menu_showGameOver()}, {\b GameState::mode}, {\b None}, {\b PVE}, {\b redrawField()}, {\b REMAINING_TIME}, {\b GameState::round}, {\b CellState::selected}, {\b TICKS_PER_TURN}, {\b TIMER0}, {\b timer_stop()}, {\b ui_updateTimer()}, {\b ui_updateTurn()}, {\b GameState::winner}, and {\b winning_checkForWinner()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a99a6ceced9c8b9648cc11a086603d66e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a99a6ceced9c8b9648cc11a086603d66e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleForcedMoveUpdate\:game.c}
{\xe \v game.c\:handleForcedMoveUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void handleForcedMoveUpdate (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles the presentation update, when a move is forced due to timeout. }}\par
{
Definition at line {\b 286} of file {\b game.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_select()}, {\b cell_state}, {\b Circle}, {\b GameState::current_player}, {\b game_state}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b GameState::mode}, {\b PVE}, {\b GameState::round}, {\b CellState::selected}, and {\b ui_updateTurn()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a02793d13c56663addd9878f851e1a525_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a02793d13c56663addd9878f851e1a525_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v init\:game.c}
{\xe \v game.c\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void init ({\b Mode} mode){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes relevant things at the game start. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the game/cell state, initializes the input buffer, and prepares the UI.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i mode} \cell }{The game mode (PVE or PVP). \cell }
{\row }
}
}{
Definition at line {\b 198} of file {\b game.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_select()}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b GameState::current_player}, {\b FIRST_ROUND}, {\b g_input_buf}, {\b game_state}, {\b HIDE_CURSOR}, {\b input_init()}, {\b Cell::marked_by}, {\b None}, {\b print()}, {\b print_clearConsole()}, {\b redrawField()}, {\b rng_init()}, {\b CellState::selected}, {\b startingPlayer()}, {\b time_init()}, and {\b ui_printStartingPlayer()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a0348f26575dbcf092995319044ada2be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a0348f26575dbcf092995319044ada2be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v redrawField\:game.c}
{\xe \v game.c\:redrawField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void redrawField (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Refreshes the whole UI. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears the console and redraws the game field and UI elements. \par
}{
Definition at line {\b 275} of file {\b game.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_redrawAll()}, {\b cell_select()}, {\b cell_state}, {\b GameState::current_player}, {\b field_redraw()}, {\b game_state}, {\b print_clearConsole()}, {\b REMAINING_TIME}, {\b GameState::round}, {\b CellState::selected}, {\b TICKS_PER_TURN}, {\b ui_displayTimer()}, {\b ui_displayTurn()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a72e489aa1ddb47b58c5b1f29ccf1eb13_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a72e489aa1ddb47b58c5b1f29ccf1eb13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v startingPlayer\:game.c}
{\xe \v game.c\:startingPlayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Player} startingPlayer (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Randomly determines the starting player. }}\par
{
Definition at line {\b 308} of file {\b game.c}.}\par
{
\ql
References {\b rng_getRandomValue_waiting()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a03d584df138a0aa6e9c8f1e013f2073e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dcb/game_8c_a03d584df138a0aa6e9c8f1e013f2073e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v cell_state\:game.c}
{\xe \v game.c\:cell_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CellState} cell_state{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CellState} of the current game. }}\par
{
Definition at line {\b 40} of file {\b game.c}.}\par
}
{\xe \v force_ui_update\:game.c}
{\xe \v game.c\:force_ui_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b bool} force_ui_update = {\b false}}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force an update of the UI. }}\par
{
Definition at line {\b 36} of file {\b game.c}.}\par
}
{\xe \v game_state\:game.c}
{\xe \v game.c\:game_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GameState} game_state{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b GameState} of the current game. }}\par
{
Definition at line {\b 38} of file {\b game.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
game.c\par \pard\plain 
{\tc\tcl2 \v logic/game.c}
{\xe \v logic/game.c}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file game.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements the core game logic for Tic-Tac-Toe}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see game.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "logic/game.h"}\par
00015 \par
00016 {\cf21 #include "config.h"}\par
00017 {\cf21 #include "hal/nvic.h"}\par
00018 {\cf21 #include "hal/random.h"}\par
00019 {\cf21 #include "hal/timer.h"}\par
00020 {\cf21 #include "logic/bot.h"}\par
00021 {\cf21 #include "logic/input.h"}\par
00022 {\cf21 #include "logic/time.h"}\par
00023 {\cf21 #include "logic/winning.h"}\par
00024 {\cf21 #include "presentation/cell.h"}\par
00025 {\cf21 #include "presentation/field.h"}\par
00026 {\cf21 #include "presentation/menu.h"}\par
00027 {\cf21 #include "presentation/print.h"}\par
00028 {\cf21 #include "presentation/style.h"}\par
00029 {\cf21 #include "presentation/ui.h"}\par
00030 {\cf21 #include "util/input_buf.h"}\par
00031 {\cf21 #include "util/math.h"}\par
00032 {\cf21 #include <stdint.h>}\par
00033 \par
00034 {\cf20 }\par
00035 {\cf20 /// @brief Force an update of the UI}\par
00036 {\cf20 }{\cf17 volatile} {\cf18 bool} force_ui_update = {\cf17 false};{\cf20 }\par
00037 {\cf20 /// @brief GameState of the current game}\par
00038 {\cf20 }{\cf17 static} GameState game_state;{\cf20 }\par
00039 {\cf20 /// @brief CellState of the current game}\par
00040 {\cf20 }{\cf17 static} CellState cell_state;\par
00041 {\cf20 }\par
00042 {\cf20 /**}\par
00043 {\cf20  * @brief Initializes relevant things at the game start}\par
00044 {\cf20  *}\par
00045 {\cf20  * @details}\par
00046 {\cf20  * Sets up the game/cell state, initializes the input buffer, and prepares the UI.}\par
00047 {\cf20  *}\par
00048 {\cf20  * @param[in] mode The game mode (PVE or PVP).}\par
00049 {\cf20  */}\par
00050 {\cf17 static} {\cf18 void} init(Mode mode);\par
00051 {\cf20 }\par
00052 {\cf20 /**}\par
00053 {\cf20  * @brief Handles the presentation update, when a move is forced due to timeout}\par
00054 {\cf20  */}\par
00055 {\cf17 static} {\cf18 void} handleForcedMoveUpdate();\par
00056 {\cf20 }\par
00057 {\cf20 /**}\par
00058 {\cf20  * @brief Refreshes the whole UI}\par
00059 {\cf20  *}\par
00060 {\cf20  * @details}\par
00061 {\cf20  * Clears the console and redraws the game field and UI elements.}\par
00062 {\cf20  */}\par
00063 {\cf17 static} {\cf18 void} redrawField();\par
00064 {\cf20 }\par
00065 {\cf20 /**}\par
00066 {\cf20  * @brief Calculates game summary statistics}\par
00067 {\cf20  *}\par
00068 {\cf20  * @details}\par
00069 {\cf20  * Computes total and average ticks for each player and the game overall.}\par
00070 {\cf20  *}\par
00071 {\cf20  * @note Statistics are written to the game_state struct.}\par
00072 {\cf20  * @see game_state}\par
00073 {\cf20  */}\par
00074 {\cf17 static} {\cf18 void} calculateSummary();\par
00075 {\cf20 }\par
00076 {\cf20 /**}\par
00077 {\cf20  * @brief Randomly determines the starting player}\par
00078 {\cf20  */}\par
00079 {\cf17 static} Player startingPlayer();\par
00080 \par
00081 \par
00082 {\cf18 void} game_run({\cf17 const} Mode mode)\par
00083 \{\par
00084     init(mode);\par
00085 \par
00086     Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)] = \{0\};{\cf20 // NOLINT}\par
00087     uint8_t input;\par
00088 \par
00089     {\cf19 if}(game_state.mode == PVE && game_state.current_player == Circle)\par
00090     \{\par
00091         cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);\par
00092         game_state.current_player = Cross;\par
00093         game_state.fields_marked++;\par
00094 \par
00095         cell_select(cell_state.last_circle);\par
00096         cell_select(&cell_state.all[0][0]);\par
00097         ui_updateTurn(game_state.round, game_state.current_player);\par
00098     \}\par
00099 \par
00100     {\cf19 while}({\cf17 true})\par
00101     \{\par
00102         {\cf19 while}(!input_getNext(&g_input_buf, &input))\par
00103         \{\par
00104             {\cf20 // If true, Move was forced due to inactivity}\par
00105             {\cf19 if}(force_ui_update)\par
00106             \{\par
00107                 handleForcedMoveUpdate();\par
00108                 force_ui_update = {\cf17 false};\par
00109                 input = 0;\par
00110                 {\cf19 break};\par
00111             \}\par
00112             ui_updateTimer(REMAINING_TIME, TICKS_PER_TURN);\par
00113             __WFI();\par
00114         \}\par
00115 \par
00116         {\cf17 const} {\cf18 bool} should_redraw_field = input_handleByte(&input, &game_state, &cell_state);\par
00117 \par
00118         game_state.winner = winning_checkForWinner(&cell_state, winner_cells);\par
00119 \par
00120         {\cf19 if}(g_timer.is_running)\par
00121         \{\par
00122             cell_select(cell_state.selected);\par
00123         \}\par
00124 \par
00125         {\cf19 if}(game_state.winner != None || input == {\cf23 'q'} || input == {\cf23 'Q'}\par
00126            || game_state.fields_marked >= CELLS_PER_COL * CELLS_PER_ROW)\par
00127         \{\par
00128             timer_stop(TIMER0);\par
00129             {\cf19 break};\par
00130         \}\par
00131 \par
00132         {\cf19 if}(should_redraw_field)\par
00133         \{\par
00134             redrawField();\par
00135         \}\par
00136     \}\par
00137 \par
00138     cell_redrawAll(cell_state.all, {\cf22 "\\e[0;2m"});\par
00139     {\cf19 for}(uint8_t i = 0; i < (max(CELLS_PER_COL, CELLS_PER_ROW)) && winner_cells[i] != NULL;\par
00140         i++){\cf20 // NOLINT}\par
00141     \{\par
00142         cell_redraw_withModifier(winner_cells[i], BOLD);\par
00143     \}\par
00144 \par
00145     calculateSummary();\par
00146     menu_showGameOver(&game_state);\par
00147 \}\par
00148 \par
00149 {\cf18 void} game_onTimeOut()\par
00150 \{\par
00151     force_ui_update = {\cf17 true};\par
00152     {\cf19 if}(game_state.mode == PVE)\par
00153     \{\par
00154         cell_state.last_cross = bot_markRandomCell(cell_state.all, Cross);\par
00155         cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);\par
00156     \}\par
00157     {\cf19 else} {\cf19 if}(game_state.current_player == Cross)\par
00158     \{\par
00159         cell_state.last_cross = bot_markRandomCell(cell_state.all, Cross);\par
00160     \}\par
00161     {\cf19 else} {\cf19 if}(game_state.current_player == Circle)\par
00162     \{\par
00163         cell_state.last_circle = bot_markRandomCell(cell_state.all, Circle);\par
00164     \}\par
00165 \par
00166     game_endTurn();\par
00167 \}\par
00168 \par
00169 {\cf18 void} game_endTurn()\par
00170 \{\par
00171     {\cf19 if}(game_state.mode == PVE)\par
00172     \{\par
00173         time_finishTurn(&game_state);\par
00174         game_state.round++;\par
00175         game_state.fields_marked += 2;\par
00176     \}\par
00177     {\cf19 else}\par
00178     \{\par
00179         time_finishTurn(&game_state);\par
00180         {\cf19 if}(game_state.current_player == Cross)\par
00181         \{\par
00182             game_state.current_player = Circle;\par
00183             cell_state.selected =\par
00184                 cell_state.last_circle != NULL ? cell_state.last_circle : cell_state.selected;\par
00185             game_state.fields_marked++;\par
00186         \}\par
00187         {\cf19 else}\par
00188         \{\par
00189             game_state.current_player = Cross;\par
00190             cell_state.selected =\par
00191                 cell_state.last_cross != NULL ? cell_state.last_cross : cell_state.selected;\par
00192             game_state.round++;\par
00193             game_state.fields_marked++;\par
00194         \}\par
00195     \}\par
00196 \}\par
00197 \par
00198 {\cf17 static} {\cf18 void} init({\cf17 const} Mode mode)\par
00199 \{\par
00200     {\cf20 // When starting a second game in a session an artifact bug occurred,}\par
00201     {\cf20 // reelecting here fixes this.}\par
00202     {\cf19 if}(cell_state.selected != NULL)\par
00203     \{\par
00204         cell_state.selected->marked_by = None;\par
00205         cell_select(cell_state.selected);\par
00206     \}\par
00207 \par
00208     input_init(&g_input_buf);\par
00209     rng_init();\par
00210 \par
00211     game_state = (GameState)\{\par
00212         .winner = None,\par
00213         .mode = mode,\par
00214         .round = FIRST_ROUND,\par
00215         .current_player = startingPlayer(),\par
00216     \};\par
00217 \par
00218 \par
00219     cell_state = (CellState)\{\};\par
00220 \par
00221     print(HIDE_CURSOR);\par
00222 \par
00223 \par
00224     {\cf19 for}({\cf18 int} y = 0; y < CELLS_PER_COL; y++)\par
00225     \{\par
00226         {\cf19 for}({\cf18 int} x = 0; x < CELLS_PER_ROW; x++)\par
00227         \{\par
00228             cell_state.all[y][x] = (Cell)\{\par
00229                 .col = x,\par
00230                 .row = y,\par
00231                 .marked_by = None,\par
00232             \};\par
00233         \}\par
00234     \}\par
00235 \par
00236     cell_state.selected = &cell_state.all[0][0];\par
00237 \par
00238     ui_printStartingPlayer(game_state.current_player, mode);\par
00239 \par
00240     print_clearConsole();\par
00241     time_init();\par
00242     redrawField();\par
00243 \}\par
00244 \par
00245 \par
00246 {\cf17 static} {\cf18 void} calculateSummary()\par
00247 \{\par
00248     game_state.total_ticks = g_timer.ticks_total;\par
00249 \par
00250     {\cf19 if}(game_state.mode == PVE)\par
00251     \{\par
00252         game_state.average_ticks = g_timer.ticks_total / 2 / game_state.round;\par
00253     \}\par
00254     {\cf19 else}\par
00255     \{\par
00256         game_state.average_ticks = g_timer.ticks_total / game_state.round;\par
00257     \}\par
00258 \par
00259     {\cf20 // the loser made one turn less}\par
00260     uint8_t cross_rounds = game_state.round;\par
00261     uint8_t circle_rounds = game_state.round;\par
00262     {\cf19 if}(game_state.winner == Cross)\par
00263     \{\par
00264         circle_rounds--;\par
00265     \}\par
00266     {\cf19 else} {\cf19 if}(game_state.winner == Circle)\par
00267     \{\par
00268         cross_rounds--;\par
00269     \}\par
00270 \par
00271     game_state.cross_average_ticks = game_state.cross_total_ticks / cross_rounds;\par
00272     game_state.circle_average_ticks = game_state.circle_total_ticks / circle_rounds;\par
00273 \}\par
00274 \par
00275 {\cf17 static} {\cf18 void} redrawField()\par
00276 \{\par
00277     print_clearConsole();\par
00278     ui_printHeading();\par
00279     ui_displayTurn(game_state.round, game_state.current_player);\par
00280     ui_displayTimer(REMAINING_TIME, TICKS_PER_TURN);\par
00281     field_redraw();\par
00282     cell_redrawAll(cell_state.all, {\cf22 ""});\par
00283     cell_select(cell_state.selected);\par
00284 \}\par
00285 \par
00286 {\cf17 static} {\cf18 void} handleForcedMoveUpdate()\par
00287 \{\par
00288     cell_select(cell_state.last_cross);\par
00289     cell_select(cell_state.last_circle);\par
00290     ui_updateTurn(game_state.round, game_state.current_player);\par
00291 \par
00292     {\cf19 if}(game_state.mode == PVE)\par
00293     \{\par
00294         cell_state.selected = cell_state.last_circle;\par
00295     \}\par
00296     {\cf19 else}\par
00297     \{\par
00298         {\cf20 // inverted to select from previous turn}\par
00299         cell_state.selected =\par
00300             game_state.current_player == Circle ? cell_state.last_circle : cell_state.last_cross;\par
00301         {\cf19 if}(cell_state.selected == NULL)\par
00302         \{\par
00303             cell_state.selected = &cell_state.all[0][0];\par
00304         \}\par
00305     \}\par
00306 \}\par
00307 \par
00308 {\cf17 static} Player startingPlayer()\par
00309 \{\par
00310     uint8_t rand = rng_getRandomValue_waiting();\par
00311 \par
00312     {\cf20 // 0 is Cross, 1 is Circle - mod 2 returns 0 or 1}\par
00313     {\cf19 return} (Player)(rand % 2);\par
00314 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/input.c File Reference\par \pard\plain 
{\tc\tcl2 \v logic/input.c}
{\xe \v logic/input.c}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements input handling for the game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/input.h"}\par
{\f2 #include "config.h"}\par
{\f2 #include "logic/bot.h"}\par
{\f2 #include "logic/game.h"}\par
{\f2 #include "logic/time.h"}\par
{\f2 #include "logic/winning.h"}\par
{\f2 #include "presentation/cell.h"}\par
{\f2 #include "presentation/menu.h"}\par
{\f2 #include "presentation/style.h"}\par
{\f2 #include "presentation/ui.h"}\par
{\f2 #include "util/input_buf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for input.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d22/input_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b handleEscapeSequence} ({\b CellState} *{\b cell_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles escape sequences for navigation. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b handleSetMark} ({\b GameState} *{\b game_state}, {\b CellState} *{\b cell_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles marking a cell during the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b openControls} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the controls menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b bool} {\b handlePauseResume} ({\b CellState} *{\b cell_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles pausing and resuming the game. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_handleByte} (const uint8_t *byte, {\b GameState} *{\b game_state}, {\b CellState} *{\b cell_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles an input byte and updates game and cell states. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements input handling for the game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b input.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b input.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v handleEscapeSequence\:input.c}
{\xe \v input.c\:handleEscapeSequence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void handleEscapeSequence ({\b CellState} * cell_state){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles escape sequences for navigation. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processes escape sequences to move the selected cell up, down, left, or right based on arrow key input.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cell_state} \cell }{Pointer to the current cell state. \cell }
{\row }
}
}{
Definition at line {\b 109} of file {\b input.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Cell::col}, {\b g_input_buf}, {\b input_getNext()}, {\b Cell::row}, and {\b CellState::selected}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a309f3d06b02c506feb7a2454b76e25e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a309f3d06b02c506feb7a2454b76e25e7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handlePauseResume\:input.c}
{\xe \v input.c\:handlePauseResume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b bool} handlePauseResume ({\b CellState} * cell_state){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles pausing and resuming the game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Toggles the game timer and redraws the cells as hidden when paused.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cell_state} \cell }{Pointer to the current cell state.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the game is resumed, false otherwise. \par
}}}{
Definition at line {\b 227} of file {\b input.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_redrawAll()}, {\b cell_state}, {\b g_timer}, {\b HIDDEN}, {\b GameTimer::is_running}, {\b time_pause()}, and {\b time_resume()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a03559a576d12d8f279698c1a7d33a772_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a03559a576d12d8f279698c1a7d33a772_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleSetMark\:input.c}
{\xe \v input.c\:handleSetMark}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void handleSetMark ({\b GameState} * game_state, {\b CellState} * cell_state){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles marking a cell during the game. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marks the currently selected cell based on the game mode and updates the game state. Handles special cases for player vs. computer (PVE) mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i game_state} \cell }{Pointer to the current game state. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cell_state} \cell }{Pointer to the current cell state. \cell }
{\row }
}
}{
Definition at line {\b 155} of file {\b input.c}.}\par
{
\ql
References {\b CellState::all}, {\b bot_markRandomCell()}, {\b cell_redraw()}, {\b cell_select()}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Circle}, {\b Cross}, {\b GameState::current_player}, {\b GameState::fields_marked}, {\b g_timer}, {\b game_endTurn()}, {\b game_state}, {\b GameTimer::is_running}, {\b CellState::last_circle}, {\b CellState::last_cross}, {\b Cell::marked_by}, {\b max}, {\b min}, {\b GameState::mode}, {\b None}, {\b PVE}, {\b GameState::round}, {\b CellState::selected}, {\b ui_updateTurn()}, and {\b winning_checkForWinner()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a98b27236b0483cfefce1c2c133ae7925_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a98b27236b0483cfefce1c2c133ae7925_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_handleByte\:input.c}
{\xe \v input.c\:input_handleByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_handleByte (const uint8_t * byte, {\b GameState} * game_state, {\b CellState} * cell_state)}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles an input byte and updates game and cell states. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Processes the input byte to determine the appropriate action, such as marking a cell, navigating the board, or pausing the game. Updates the game state and cell state accordingly.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i byte} \cell }{The input byte to process. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i game_state} \cell }{Pointer to the current game state. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i cell_state} \cell }{Pointer to the current cell state.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a field redraw is needed, false otherwise. \par
}}}{
Definition at line {\b 79} of file {\b input.c}.}\par
{
\ql
References {\b cell_decreaseSize()}, {\b cell_increaseSize()}, {\b cell_state}, {\b g_timer}, {\b game_state}, {\b handleEscapeSequence()}, {\b handlePauseResume()}, {\b handleSetMark()}, {\b GameTimer::is_running}, and {\b openControls()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a3082ccbda618aa1099677e2e7ac9d5f6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a3082ccbda618aa1099677e2e7ac9d5f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v openControls\:input.c}
{\xe \v input.c\:openControls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void openControls (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opens the controls menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the controls menu to the user. Pauses the game timer if it is running. \par
}{
Definition at line {\b 213} of file {\b input.c}.}\par
{
\ql
References {\b g_timer}, {\b GameTimer::is_running}, {\b menu_showControls()}, {\b time_pause()}, and {\b time_resume()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a3b7f9c3d0c05d977365279bbf54ee25f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d06/input_8c_a3b7f9c3d0c05d977365279bbf54ee25f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input.c\par \pard\plain 
{\tc\tcl2 \v logic/input.c}
{\xe \v logic/input.c}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file input.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements input handling for the game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see input.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "logic/input.h"}\par
00015 \par
00016 {\cf21 #include "config.h"}\par
00017 {\cf21 #include "logic/bot.h"}\par
00018 {\cf21 #include "logic/game.h"}\par
00019 {\cf21 #include "logic/time.h"}\par
00020 {\cf21 #include "logic/winning.h"}\par
00021 {\cf21 #include "presentation/cell.h"}\par
00022 {\cf21 #include "presentation/menu.h"}\par
00023 {\cf21 #include "presentation/style.h"}\par
00024 {\cf21 #include "presentation/ui.h"}\par
00025 {\cf21 #include "util/input_buf.h"}\par
00026 {\cf20 }\par
00027 {\cf20 /**}\par
00028 {\cf20  * @brief Handles escape sequences for navigation.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @details}\par
00031 {\cf20  * Processes escape sequences to move the selected cell up, down, left, or right}\par
00032 {\cf20  * based on arrow key input.}\par
00033 {\cf20  *}\par
00034 {\cf20  * @param[inout] cell_state Pointer to the current cell state.}\par
00035 {\cf20  *}\par
00036 {\cf20  * @internal}\par
00037 {\cf20  */}\par
00038 {\cf17 static} {\cf18 void} handleEscapeSequence(CellState *cell_state);\par
00039 {\cf20 }\par
00040 {\cf20 /**}\par
00041 {\cf20  * @brief Handles marking a cell during the game.}\par
00042 {\cf20  *}\par
00043 {\cf20  * @details}\par
00044 {\cf20  * Marks the currently selected cell based on the game mode and updates the}\par
00045 {\cf20  * game state. Handles special cases for player vs. computer (PVE) mode.}\par
00046 {\cf20  *}\par
00047 {\cf20  * @param[inout] game_state Pointer to the current game state.}\par
00048 {\cf20  * @param[inout] cell_state Pointer to the current cell state.}\par
00049 {\cf20  *}\par
00050 {\cf20  * @internal}\par
00051 {\cf20  */}\par
00052 {\cf17 static} {\cf18 void} handleSetMark(GameState *game_state, CellState *cell_state);\par
00053 {\cf20 }\par
00054 {\cf20 /**}\par
00055 {\cf20  * @brief Opens the controls menu.}\par
00056 {\cf20  *}\par
00057 {\cf20  * @details}\par
00058 {\cf20  * Displays the controls menu to the user. Pauses the game timer if it is running.}\par
00059 {\cf20  *}\par
00060 {\cf20  * @internal}\par
00061 {\cf20  */}\par
00062 {\cf17 static} {\cf18 void} openControls();\par
00063 {\cf20 }\par
00064 {\cf20 /**}\par
00065 {\cf20  * @brief Handles pausing and resuming the game.}\par
00066 {\cf20  *}\par
00067 {\cf20  * @details}\par
00068 {\cf20  * Toggles the game timer and redraws the cells as hidden when paused.}\par
00069 {\cf20  *}\par
00070 {\cf20  * @param[inout] cell_state Pointer to the current cell state.}\par
00071 {\cf20  *}\par
00072 {\cf20  * @return True if the game is resumed, false otherwise.}\par
00073 {\cf20  *}\par
00074 {\cf20  * @internal}\par
00075 {\cf20  */}\par
00076 {\cf17 static} {\cf18 bool} handlePauseResume(CellState *cell_state);\par
00077 \par
00078 \par
00079 {\cf18 bool} input_handleByte({\cf17 const} uint8_t *{\cf18 byte}, GameState *game_state, CellState *cell_state)\par
00080 \{\par
00081     {\cf19 switch}(*{\cf18 byte})\par
00082     \{\par
00083         {\cf19 case} {\cf23 '\\e'}:\par
00084             {\cf19 if}(!g_timer.is_running)\par
00085                 {\cf19 break};\par
00086             handleEscapeSequence(cell_state);\par
00087             {\cf19 break};\par
00088         {\cf19 case} {\cf23 '\\r'}:\par
00089         {\cf19 case} {\cf23 ' '}:\par
00090             handleSetMark(game_state, cell_state);\par
00091             {\cf19 break};\par
00092         {\cf19 case} {\cf23 '?'}:\par
00093             openControls();\par
00094             {\cf19 return} {\cf17 true};\par
00095         {\cf19 case} {\cf23 'p'}:\par
00096         {\cf19 case} {\cf23 'P'}:\par
00097             {\cf19 return} handlePauseResume(cell_state);\par
00098         {\cf19 case} {\cf23 '+'}:\par
00099             cell_increaseSize();\par
00100             {\cf19 return} {\cf17 true};\par
00101         {\cf19 case} {\cf23 '-'}:\par
00102             cell_decreaseSize();\par
00103             {\cf19 return} {\cf17 true};\par
00104         {\cf19 default}:;\par
00105     \}\par
00106     {\cf19 return} {\cf17 false};\par
00107 \}\par
00108 \par
00109 {\cf17 static} {\cf18 void} handleEscapeSequence(CellState *cell_state)\par
00110 \{\par
00111     uint8_t input = {\cf23 '\\0'};\par
00112     {\cf19 if}(!input_getNext(&g_input_buf, &input) || input != {\cf23 '['})\par
00113     \{\par
00114         {\cf19 return};\par
00115     \}\par
00116 \par
00117     {\cf19 if}(!input_getNext(&g_input_buf, &input))\par
00118     \{\par
00119         {\cf19 return};\par
00120     \}\par
00121 \par
00122     {\cf17 const} {\cf18 int} col = cell_state->selected->col;\par
00123     {\cf17 const} {\cf18 int} row = cell_state->selected->row;\par
00124 \par
00125     {\cf19 switch}(input)\par
00126     \{\par
00127         {\cf19 case} {\cf23 'A'}:\par
00128             {\cf19 if}(row - 1 >= 0)\par
00129             \{\par
00130                 cell_state->selected = &cell_state->all[row - 1][col];\par
00131             \}\par
00132             {\cf19 break};\par
00133         {\cf19 case} {\cf23 'B'}:\par
00134             {\cf19 if}(row + 1 < CELLS_PER_COL)\par
00135             \{\par
00136                 cell_state->selected = &cell_state->all[row + 1][col];\par
00137             \}\par
00138             {\cf19 break};\par
00139         {\cf19 case} {\cf23 'C'}:\par
00140             {\cf19 if}(col + 1 < CELLS_PER_ROW)\par
00141             \{\par
00142                 cell_state->selected = &cell_state->all[row][col + 1];\par
00143             \}\par
00144             {\cf19 break};\par
00145         {\cf19 case} {\cf23 'D'}:\par
00146             {\cf19 if}(col - 1 >= 0)\par
00147             \{\par
00148                 cell_state->selected = &cell_state->all[row][col - 1];\par
00149             \}\par
00150             {\cf19 break};\par
00151         {\cf19 default}:;\par
00152     \}\par
00153 \}\par
00154 \par
00155 {\cf17 static} {\cf18 void} handleSetMark(GameState *game_state, CellState *cell_state)\par
00156 \{\par
00157     {\cf19 if}(cell_state->selected->marked_by != None || !g_timer.is_running)\par
00158     \{\par
00159         {\cf19 return};\par
00160     \}\par
00161 \par
00162     {\cf19 if}(game_state->mode == PVE)\par
00163     \{\par
00164         cell_state->selected->marked_by = Cross;\par
00165         cell_state->last_cross = cell_state->selected;\par
00166 \par
00167 \par
00168         {\cf20 // Avoid a bug where the bot unfairly wins, if the player started}\par
00169         {\cf20 // and both the player and the bot could win in the same round}\par
00170         {\cf18 bool} hasWinner = {\cf17 false};\par
00171         {\cf19 if}(game_state->fields_marked >= (min(CELLS_PER_COL, CELLS_PER_ROW)))\par
00172         \{\par
00173             {\cf17 static} Cell winningCells[max(CELLS_PER_COL, CELLS_PER_ROW)];\par
00174             {\cf19 if}(winning_checkForWinner(cell_state, (Cell **)&winningCells) != None)\par
00175             \{\par
00176                 hasWinner = {\cf17 true};\par
00177             \}\par
00178         \}\par
00179 \par
00180         {\cf19 if}(!hasWinner)\par
00181         \{\par
00182             {\cf19 if}(game_state->fields_marked + 1 < CELLS_PER_ROW * CELLS_PER_COL)\par
00183             \{\par
00184                 cell_state->last_circle = bot_markRandomCell(cell_state->all, Circle);\par
00185             \}\par
00186             {\cf19 else}\par
00187             \{\par
00188                 game_state->fields_marked--;\par
00189             \}\par
00190         \}\par
00191 \par
00192         cell_redraw(cell_state->last_circle);\par
00193     \}\par
00194     {\cf19 else}\par
00195     \{\par
00196         cell_state->selected->marked_by = game_state->current_player;\par
00197         {\cf19 if}(game_state->current_player == Circle)\par
00198         \{\par
00199             cell_state->last_circle = cell_state->selected;\par
00200             cell_select(cell_state->last_circle);\par
00201         \}\par
00202         {\cf19 else}\par
00203         \{\par
00204             cell_state->last_cross = cell_state->selected;\par
00205             cell_select(cell_state->last_cross);\par
00206         \}\par
00207     \}\par
00208 \par
00209     game_endTurn();\par
00210     ui_updateTurn(game_state->round, game_state->current_player);\par
00211 \}\par
00212 \par
00213 {\cf17 static} {\cf18 void} openControls()\par
00214 \{\par
00215     {\cf19 if}(g_timer.is_running)\par
00216     \{\par
00217         time_pause();\par
00218         menu_showControls({\cf22 "\\nPress any key to return to the match..."});\par
00219         time_resume();\par
00220     \}\par
00221     {\cf19 else}\par
00222     \{\par
00223         menu_showControls({\cf22 "\\nPress any key to return to the match..."});\par
00224     \}\par
00225 \}\par
00226 \par
00227 {\cf17 static} {\cf18 bool} handlePauseResume(CellState *cell_state)\par
00228 \{\par
00229     {\cf19 if}(g_timer.is_running)\par
00230     \{\par
00231         time_pause();\par
00232         cell_redrawAll(cell_state->all, HIDDEN);\par
00233         {\cf19 return} {\cf17 false};\par
00234     \}\par
00235     time_resume();\par
00236     {\cf19 return} {\cf17 true};\par
00237 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/time.c File Reference\par \pard\plain 
{\tc\tcl2 \v logic/time.c}
{\xe \v logic/time.c}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements time-related functionality for the game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/time.h"}\par
{\f2 #include "hal/timer.h"}\par
{\f2 #include "logic/game.h"}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for time.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d14/time_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_init} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_onInterrupt} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the ticks and can finish the round. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_finishTurn} ({\b GameState} *{\b game_state})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the ticks. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_pause} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause the timer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b time_resume} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume the timer when paused. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GameTimer} {\b g_timer}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global game timer instance. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements time-related functionality for the game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b time.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b time.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v time_finishTurn\:time.c}
{\xe \v time.c\:time_finishTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_finishTurn ({\b GameState} * game_state)}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the ticks. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the turn-specific tick counter and updates the game state with the elapsed time for the current player.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i game_state} \cell }{Current state of the game \cell }
{\row }
}
}{
Definition at line {\b 43} of file {\b time.c}.}\par
{
\ql
References {\b GameState::circle_total_ticks}, {\b Cross}, {\b GameState::cross_total_ticks}, {\b GameState::current_player}, {\b g_timer}, {\b game_state}, and {\b GameTimer::ticks_turn}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_a90e96cefd66715b9740be8f0dbab0042_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_init\:time.c}
{\xe \v time.c\:time_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_init ()}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the hardware timer with the appropriate configuration for the game. \par
}{
Definition at line {\b 26} of file {\b time.c}.}\par
{
\ql
References {\b CC0}, {\b TICK_SPEED}, {\b TIMER0}, {\b TIMER_BIT_MODE_32}, {\b timer_captureCompareSet()}, {\b timer_init_detailed()}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_a04352ea8ee003992baa1d4e993b50dae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_a04352ea8ee003992baa1d4e993b50dae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_onInterrupt\:time.c}
{\xe \v time.c\:time_onInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_onInterrupt ()}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increments the ticks and can finish the round. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is called on a timer interrupt. It increments the total and turn-specific tick counters and triggers a timeout if the turn duration is exceeded. \par
}{
Definition at line {\b 33} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b game_onTimeOut()}, {\b TICKS_PER_TURN}, {\b GameTimer::ticks_total}, and {\b GameTimer::ticks_turn}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_ac55568b0a64c8b18a2d2ffc7d50eacaa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_ac55568b0a64c8b18a2d2ffc7d50eacaa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_pause\:time.c}
{\xe \v time.c\:time_pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_pause ()}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pause the timer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the hardware timer and marks the timer as not running. \par
}{
Definition at line {\b 59} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b GameTimer::is_running}, {\b TIMER0}, and {\b timer_stop()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_a5ad5fe91a14f332c6acc40870c980fae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_a5ad5fe91a14f332c6acc40870c980fae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v time_resume\:time.c}
{\xe \v time.c\:time_resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void time_resume ()}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resume the timer when paused. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restarts the hardware timer and marks the timer as running. \par
}{
Definition at line {\b 65} of file {\b time.c}.}\par
{
\ql
References {\b g_timer}, {\b GameTimer::is_running}, {\b TIMER0}, and {\b timer_start()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_aa626af1fe4486ff2f05529894b807e5a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/time_8c_aa626af1fe4486ff2f05529894b807e5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_timer\:time.c}
{\xe \v time.c\:g_timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GameTimer} g_timer}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = (GameTimer)\{\par
    .ticks_total = 0,\par
    .ticks_turn = 0,\par
    .is_running = {\cf17 true},\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global game timer instance. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This global variable tracks the timer state and tick counts for the game. \par
}{
Definition at line {\b 19} of file {\b time.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time.c\par \pard\plain 
{\tc\tcl2 \v logic/time.c}
{\xe \v logic/time.c}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file time.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements time-related functionality for the game}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see time.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "logic/time.h"}\par
00015 {\cf21 #include "hal/timer.h"}\par
00016 {\cf21 #include "logic/game.h"}\par
00017 {\cf21 #include <stdint.h>}\par
00018 \par
00019 GameTimer g_timer = (GameTimer)\{\par
00020     .ticks_total = 0,\par
00021     .ticks_turn = 0,\par
00022     .is_running = {\cf17 true},\par
00023 \};\par
00024 \par
00025 {\cf21 #ifndef DISABLE_TIMER}\par
00026 {\cf18 void} time_init()\par
00027 \{\par
00028     timer_init_detailed(TIMER0, TICK_SPEED, TIMER_BIT_MODE_32);\par
00029     timer_captureCompareSet(TIMER0, CC0, 2000, {\cf17 true});\par
00030     timer_start(TIMER0);\par
00031 \}\par
00032 \par
00033 {\cf18 void} time_onInterrupt()\par
00034 \{\par
00035     g_timer.ticks_total++;\par
00036     g_timer.ticks_turn = (g_timer.ticks_turn + 1) % TICKS_PER_TURN;\par
00037     {\cf19 if}(g_timer.ticks_turn == TICKS_PER_TURN - 1)\par
00038     \{\par
00039         game_onTimeOut();\par
00040     \}\par
00041 \}\par
00042 \par
00043 {\cf18 void} time_finishTurn(GameState *game_state)\par
00044 \{\par
00045     {\cf17 const} uint32_t ticks = g_timer.ticks_turn;\par
00046 \par
00047     {\cf19 if}(game_state->current_player == Cross)\par
00048     \{\par
00049         game_state->cross_total_ticks += ticks;\par
00050     \}\par
00051     {\cf19 else}\par
00052     \{\par
00053         game_state->circle_total_ticks += ticks;\par
00054     \}\par
00055 \par
00056     g_timer.ticks_turn = 0;\par
00057 \}\par
00058 \par
00059 {\cf18 void} time_pause()\par
00060 \{\par
00061     timer_stop(TIMER0);\par
00062     g_timer.is_running = {\cf17 false};\par
00063 \}\par
00064 \par
00065 {\cf18 void} time_resume()\par
00066 \{\par
00067     timer_start(TIMER0);\par
00068     g_timer.is_running = {\cf17 true};\par
00069 \}\par
00070 \par
00071 {\cf21 #else}\par
00072 \par
00073 {\cf18 void} time_init()\par
00074 \{\par
00075 \}\par
00076 \par
00077 {\cf18 void} time_onInterrupt()\par
00078 \{\par
00079 \}\par
00080 \par
00081 {\cf18 void} time_finishTurn(GameState *game_state)\par
00082 \{\par
00083 \}\par
00084 \par
00085 {\cf18 void} time_pause()\par
00086 \{\par
00087 \}\par
00088 \par
00089 {\cf18 void} time_resume()\par
00090 \{\par
00091 \}\par
00092 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
logic/winning.c File Reference\par \pard\plain 
{\tc\tcl2 \v logic/winning.c}
{\xe \v logic/winning.c}
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the function for checking if someone has won. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "logic/winning.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for winning.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d32/winning_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b bool} {\b checkIfPlayerWon} (const {\b Cell} *cell, {\b Player} player, {\b CellState} *{\b cell_state}, {\b Cell} *winner_cells[{\b max}({\b CELLS_PER_COL}, {\b CELLS_PER_ROW})])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the given player has won. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Player} {\b winning_checkForWinner} ({\b CellState} *{\b cell_state}, {\b Cell} *winner_cells[{\b max}({\b CELLS_PER_COL}, {\b CELLS_PER_ROW})])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks at the end of the round if someone has won. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the function for checking if someone has won. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the implementation of the logic for determining if a player has won in the game. It includes the main function and helper functions for evaluating the game state.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b winning.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b winning.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v checkIfPlayerWon\:winning.c}
{\xe \v winning.c\:checkIfPlayerWon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b bool} checkIfPlayerWon (const {\b Cell} * cell, {\b Player} player, {\b CellState} * cell_state, {\b Cell} * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if the given player has won. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function evaluates the game board to determine if the specified player has won. It checks vertical, horizontal, and diagonal lines originating from the last marked cell of the player. If a winning condition is met, the relevant cells are written to the provided buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{Last marked cell of the player \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i player} \cell }{Player it is looking for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell_state} \cell }{Current state of the game board \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i winner_cells} \cell }{Buffer to store the cells forming the winning line\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the player has won, false otherwise \par
}}}{
Definition at line {\b 62} of file {\b winning.c}.}\par
{
\ql
References {\b CellState::all}, {\b cell_state}, {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Cell::col}, {\b Cell::marked_by}, {\b max}, {\b min}, and {\b Cell::row}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dfd/winning_8c_a8cb661cf3adab5e96933f0673b163eed_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v winning_checkForWinner\:winning.c}
{\xe \v winning.c\:winning_checkForWinner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Player} winning_checkForWinner ({\b CellState} * cell_state, {\b Cell} * winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)])}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks at the end of the round if someone has won. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function evaluates the current state of the game board to determine if a player has won. If a player has won, the relevant cells are written to the provided buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell_state} \cell }{Current state of the cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i winner_cells} \cell }{If a player won, the relevant cells will be written to this buffer\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The player who won, or {\f2 None}  if no player has won \par
}}}{
Definition at line {\b 46} of file {\b winning.c}.}\par
{
\ql
References {\b cell_state}, {\b checkIfPlayerWon()}, {\b Circle}, {\b Cross}, {\b CellState::last_circle}, {\b CellState::last_cross}, and {\b None}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dfd/winning_8c_af938c2e846f22abb47204c30c0bc316c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dfd/winning_8c_af938c2e846f22abb47204c30c0bc316c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
winning.c\par \pard\plain 
{\tc\tcl2 \v logic/winning.c}
{\xe \v logic/winning.c}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file winning.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements the function for checking if someone has won}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the implementation of the logic for determining if a player}\par
00008 {\cf20  * has won in the game. It includes the main function and helper functions for}\par
00009 {\cf20  * evaluating the game state.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see winning.h}\par
00012 {\cf20  *}\par
00013 {\cf20  * @copyright}\par
00014 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00015 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00016 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00017 {\cf20  */}\par
00018 \par
00019 {\cf21 #include "logic/winning.h"}\par
00020 {\cf20 }\par
00021 {\cf20 /**}\par
00022 {\cf20  * @brief Checks if the given player has won}\par
00023 {\cf20  *}\par
00024 {\cf20  * @details}\par
00025 {\cf20  * This function evaluates the game board to determine if the specified player has won.}\par
00026 {\cf20  * It checks vertical, horizontal, and diagonal lines originating from the last marked}\par
00027 {\cf20  * cell of the player. If a winning condition is met, the relevant cells are written}\par
00028 {\cf20  * to the provided buffer.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @param[in] cell Last marked cell of the player}\par
00031 {\cf20  * @param[in] player Player it is looking for}\par
00032 {\cf20  * @param[in] cell_state Current state of the game board}\par
00033 {\cf20  * @param[out] winner_cells Buffer to store the cells forming the winning line}\par
00034 {\cf20  *}\par
00035 {\cf20  * @return True if the player has won, false otherwise}\par
00036 {\cf20  *}\par
00037 {\cf20  * @internal}\par
00038 {\cf20  */}\par
00039 {\cf17 static} {\cf18 bool} checkIfPlayerWon(\par
00040     {\cf17 const} Cell *cell,\par
00041     Player player,\par
00042     CellState *cell_state,\par
00043     Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]{\cf20 // NOLINT}\par
00044 );\par
00045 \par
00046 Player winning_checkForWinner(\par
00047     CellState *cell_state,\par
00048     Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]{\cf20 // NOLINT}\par
00049 )\par
00050 \{\par
00051     {\cf19 if}(checkIfPlayerWon(cell_state->last_circle, Circle, cell_state, winner_cells))\par
00052     \{\par
00053         {\cf19 return} Circle;\par
00054     \}\par
00055     {\cf19 if}(checkIfPlayerWon(cell_state->last_cross, Cross, cell_state, winner_cells))\par
00056     \{\par
00057         {\cf19 return} Cross;\par
00058     \}\par
00059     {\cf19 return} None;\par
00060 \}\par
00061 \par
00062 {\cf17 static} {\cf18 bool} checkIfPlayerWon(\par
00063     {\cf17 const} Cell *cell,\par
00064     {\cf17 const} Player player,\par
00065     CellState *cell_state,\par
00066     Cell *winner_cells[max(CELLS_PER_COL, CELLS_PER_ROW)]){\cf20 // NOLINT}\par
00067 \{\par
00068     {\cf19 if}(cell == NULL)\par
00069     \{\par
00070         {\cf19 return} {\cf17 false};\par
00071     \}\par
00072 \par
00073     {\cf17 const} uint8_t diagonal_win_condition = min(CELLS_PER_COL, CELLS_PER_ROW);{\cf20 // NOLINT}\par
00074     {\cf17 const} uint8_t max_cells = max(CELLS_PER_COL, CELLS_PER_ROW);             {\cf20 // NOLINT}\par
00075     {\cf17 const} uint8_t row = cell->row;\par
00076     {\cf17 const} uint8_t col = cell->col;\par
00077     {\cf17 const} uint8_t max_row = CELLS_PER_COL - 1;\par
00078     {\cf17 const} uint8_t max_col = CELLS_PER_ROW - 1;\par
00079     uint8_t diagonal_1_sum = 1;\par
00080     uint8_t diagonal_2_sum = 1;\par
00081     {\cf18 bool} vertical_match = {\cf17 true};\par
00082     {\cf18 bool} horizontal_match = {\cf17 true};\par
00083     {\cf18 bool} diagonal_1_up_right = {\cf17 true};\par
00084     {\cf18 bool} diagonal_1_down_left = {\cf17 true};\par
00085     {\cf18 bool} diagonal_2_up_left = {\cf17 true};\par
00086     {\cf18 bool} diagonal_2_down_right = {\cf17 true};\par
00087 \par
00088     Cell *diagonal_1_cells[min(CELLS_PER_COL, CELLS_PER_ROW)] = \{0\};{\cf20 // NOLINT}\par
00089     Cell *diagonal_2_cells[min(CELLS_PER_COL, CELLS_PER_ROW)] = \{0\};{\cf20 // NOLINT}\par
00090     {\cf19 for}(uint8_t i = 1, n = 0; n < max_cells; i++, n++)\par
00091     \{\par
00092         {\cf20 // --- VERTICAL ---}\par
00093         {\cf20 // downwards}\par
00094         {\cf19 if}(n <= max_row && cell_state->all[n][col].marked_by != player)\par
00095         \{\par
00096             vertical_match = {\cf17 false};\par
00097         \}\par
00098 \par
00099         {\cf20 // --- HORIZONTAL ---}\par
00100         {\cf20 // to the right}\par
00101         {\cf19 if}(n <= max_col && cell_state->all[row][n].marked_by != player)\par
00102         \{\par
00103             horizontal_match = {\cf17 false};\par
00104         \}\par
00105 \par
00106         {\cf20 // --- 1st DIAGONAL ---}\par
00107         {\cf20 // upwards to the right}\par
00108         {\cf19 if}(diagonal_1_up_right && row - i >= 0 && col + i <= max_col\par
00109            && cell_state->all[row - i][col + i].marked_by == player)\par
00110         \{\par
00111             diagonal_1_cells[n] = &cell_state->all[row - i][col + i];\par
00112             diagonal_1_sum++;\par
00113         \}\par
00114         {\cf19 else}\par
00115         \{\par
00116             diagonal_1_up_right = {\cf17 false};\par
00117         \}\par
00118         {\cf20 // downwards to the left}\par
00119         {\cf19 if}(diagonal_1_down_left && row + i <= max_row && col - i >= 0\par
00120            && cell_state->all[row + i][col - i].marked_by == player)\par
00121         \{\par
00122             diagonal_1_cells[n] = &cell_state->all[row + i][col - i];\par
00123             diagonal_1_sum++;\par
00124         \}\par
00125         {\cf19 else}\par
00126         \{\par
00127             diagonal_1_down_left = {\cf17 false};\par
00128         \}\par
00129 \par
00130         {\cf20 // --- 2nd DIAGONAL ---}\par
00131         {\cf20 // upwards to the left}\par
00132         {\cf19 if}(diagonal_2_up_left && row - i >= 0 && col - i >= 0\par
00133            && cell_state->all[row - i][col - i].marked_by == player)\par
00134         \{\par
00135             diagonal_2_cells[n] = &cell_state->all[row - i][col - i];\par
00136             diagonal_2_sum++;\par
00137         \}\par
00138         {\cf19 else}\par
00139         \{\par
00140             diagonal_2_up_left = {\cf17 false};\par
00141         \}\par
00142         {\cf20 // downwards to the right}\par
00143         {\cf19 if}(diagonal_2_down_right && row + i <= max_row && col + i <= max_col\par
00144            && cell_state->all[row + i][col + i].marked_by == player)\par
00145         \{\par
00146             diagonal_2_cells[n] = &cell_state->all[row + i][col + i];\par
00147             diagonal_2_sum++;\par
00148         \}\par
00149         {\cf19 else}\par
00150         \{\par
00151             diagonal_2_down_right = {\cf17 false};\par
00152         \}\par
00153     \}\par
00154 \par
00155     {\cf19 if}(vertical_match)\par
00156     \{\par
00157         {\cf19 for}(uint8_t i = 0; i < CELLS_PER_COL; i++)\par
00158         \{\par
00159             winner_cells[i] = &cell_state->all[i][col];\par
00160         \}\par
00161         {\cf19 return} {\cf17 true};\par
00162     \}\par
00163 \par
00164     {\cf19 if}(horizontal_match)\par
00165     \{\par
00166         {\cf19 for}(uint8_t i = 0; i < CELLS_PER_ROW; i++)\par
00167         \{\par
00168             winner_cells[i] = &cell_state->all[row][i];\par
00169         \}\par
00170         {\cf19 return} {\cf17 true};\par
00171     \}\par
00172 \par
00173     {\cf19 if}(diagonal_1_sum >= diagonal_win_condition)\par
00174     \{\par
00175         {\cf19 for}(uint8_t i = 0; i < diagonal_win_condition; i++)\par
00176         \{\par
00177             winner_cells[i] = diagonal_1_cells[i];\par
00178         \}\par
00179         winner_cells[diagonal_win_condition - 1] = &cell_state->all[row][col];\par
00180         {\cf19 return} {\cf17 true};\par
00181     \}\par
00182 \par
00183     {\cf19 if}(diagonal_2_sum >= diagonal_win_condition)\par
00184     \{\par
00185         {\cf19 for}(uint8_t i = 0; i < diagonal_win_condition; i++)\par
00186         \{\par
00187             winner_cells[i] = diagonal_2_cells[i];\par
00188         \}\par
00189         winner_cells[diagonal_win_condition - 1] = &cell_state->all[row][col];\par
00190         {\cf19 return} {\cf17 true};\par
00191     \}\par
00192 \par
00193     {\cf19 return} {\cf17 false};\par
00194 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c File Reference\par \pard\plain 
{\tc\tcl2 \v main.c}
{\xe \v main.c}
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point for the TikTakToe game. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "def.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "hal/uart.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
{\f2 #include "presentation/ui.h"}\par
{\f2 #include "util/input_buf.h"}\par
{\f2 #include "hal/system.h"}\par
{\f2 #include "presentation/menu.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for main.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d10/main_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function for the Tic-Tac-Toe application. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Entry point for the TikTakToe game. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the main function, which initializes the system, handles the main menu, and manages the game flow based on user input.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Main function for the Tic-Tac-Toe application. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the UART and input buffer, displays the main menu, and handles user input to either reset the game or exit. If the game is reset, the system performs a soft reset. If the user exits, the system enters off mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
void \par
}}}{
Definition at line {\b 37} of file {\b main.c}.}\par
{
\ql
References {\b __WFI}, {\b DEFAULT_BOLD}, {\b g_input_buf}, {\b input_getNext()}, {\b input_init()}, {\b ITALIC_DIM}, {\b menu_showMainMenu()}, {\b print()}, {\b print_clearConsole()}, {\b println_styled()}, {\b SHOW_CURSOR}, {\b system_offMode()}, {\b system_softReset()}, {\b uart_init()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d29/main_8c_ae66f6b31b5ad750f1fe042a706a4e3d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file main.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Entry point for the TikTakToe game.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the main function, which initializes the system, handles}\par
00008 {\cf20  * the main menu, and manages the game flow based on user input.}\par
00009 {\cf20  *}\par
00010 {\cf20  * @copyright}\par
00011 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00012 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00013 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00014 {\cf20  */}\par
00015 \par
00016 {\cf21 #include "def.h"}\par
00017 {\cf21 #include "hal/nvic.h"}\par
00018 {\cf21 #include "hal/uart.h"}\par
00019 {\cf21 #include "presentation/print.h"}\par
00020 {\cf21 #include "presentation/style.h"}\par
00021 {\cf21 #include "presentation/ui.h"}\par
00022 {\cf21 #include "util/input_buf.h"}\par
00023 \par
00024 {\cf21 #include "hal/system.h"}\par
00025 {\cf21 #include "presentation/menu.h"}\par
00026 {\cf20 }\par
00027 {\cf20 /**}\par
00028 {\cf20  * @brief Main function for the Tic-Tac-Toe application.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @details}\par
00031 {\cf20  * Initializes the UART and input buffer, displays the main menu, and handles}\par
00032 {\cf20  * user input to either reset the game or exit. If the game is reset, the system}\par
00033 {\cf20  * performs a soft reset. If the user exits, the system enters off mode.}\par
00034 {\cf20  *}\par
00035 {\cf20  * @return void}\par
00036 {\cf20  */}\par
00037 {\cf18 int} main()\par
00038 \{\par
00039     uart_init({\cf17 true});\par
00040     input_init(&g_input_buf);\par
00041 \par
00042     {\cf19 if}(menu_showMainMenu())\par
00043     \{\par
00044         print_clearConsole();\par
00045         ui_printHeading();\par
00046         println_styled({\cf22 "The game will be reset..."}, &DEFAULT_BOLD);\par
00047         println_styled({\cf22 "Press any key to continue..."}, &ITALIC_DIM);\par
00048 \par
00049         {\cf17 static} uint8_t input;\par
00050         {\cf19 while}(!input_getNext(&g_input_buf, &input))\par
00051         \{\par
00052             __WFI();\par
00053         \}\par
00054         system_softReset();\par
00055     \}\par
00056     {\cf19 else}\par
00057     \{\par
00058         print_clearConsole();\par
00059         ui_printHeading();\par
00060         println_styled({\cf22 "Thanks for playing!"}, &DEFAULT_BOLD);\par
00061         println_styled(\par
00062             {\cf22 "Hint: If you are using the qemu emulator, you can exit using \\"<CTR> + a,  x\\".\\n"},\par
00063             &ITALIC_DIM);\par
00064         print(SHOW_CURSOR);\par
00065         system_offMode();\par
00066     \}\par
00067 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/cell.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/cell.c}
{\xe \v presentation/cell.c}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for managing the presentation of cells. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/cell.h"}\par
{\f2 #include "logic/game.h"}\par
{\f2 #include "presentation/cursor.h"}\par
{\f2 #include "presentation/field.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cell.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d0d/cell_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b redrawCell} (uint8_t row, uint8_t col, const char *modifier, {\b Player} marked_by)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws a single cell at the specified position. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redraw} (const {\b Cell} *cell)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redraw_withModifier} (const {\b Cell} *cell, const char *modifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell with a modifier. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_select} (const {\b Cell} *cell)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the given cell. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_redrawAll} ({\b Cell} all_cells[][{\b CELLS_PER_ROW}], const char *modifier)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the entire field of cells. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_increaseSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the size of the cells. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cell_decreaseSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the size of the cells. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CellSize} {\b g_cell_size}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global variable representing the current cell size. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b SMALL_X} [1][3] = \{\{" ", "X", " "\}\}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representation of a small 'X'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b SMALL_O} [1][3] = \{\{" ", "O", " "\}\}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representation of a small 'O'. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b MEDIUM_X} [3][7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b MEDIUM_O} [3][7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b LARGE_X} [5][9]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b LARGE_O} [5][9]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b CellSize} {\b VALID_SIZES} []\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of valid cell sizes. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for managing the presentation of cells. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b cell.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b cell.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cell_decreaseSize\:cell.c}
{\xe \v cell.c\:cell_decreaseSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_decreaseSize ()}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Decreases the size of the cells. }}\par
{
Definition at line {\b 160} of file {\b cell.c}.}\par
{
\ql
References {\b g_cell_size}, {\b CellSize::height}, {\b CellSize::size}, {\b Small}, {\b VALID_SIZES}, and {\b CellSize::width}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_ac37a7db30665215c6cafea5b9b0d6788_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_increaseSize\:cell.c}
{\xe \v cell.c\:cell_increaseSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_increaseSize ()}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Increases the size of the cells. }}\par
{
Definition at line {\b 149} of file {\b cell.c}.}\par
{
\ql
References {\b g_cell_size}, {\b CellSize::height}, {\b Large}, {\b CellSize::size}, {\b VALID_SIZES}, and {\b CellSize::width}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_ab9e31dcd2aaecf6c26bba4fc29a2e882_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redraw\:cell.c}
{\xe \v cell.c\:cell_redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redraw (const {\b Cell} * cell)}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to redraw. \cell }
{\row }
}
}{
Definition at line {\b 101} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a3945952c9b76c87175d1ae905f01b07a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a3945952c9b76c87175d1ae905f01b07a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redraw_withModifier\:cell.c}
{\xe \v cell.c\:cell_redraw_withModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redraw_withModifier (const {\b Cell} * cell, const char * modifier)}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the given cell with a modifier. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to redraw. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i modifier} \cell }{Modifier to apply during redraw. \cell }
{\row }
}
}{
Definition at line {\b 106} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_abd511bd7897b645ef9cb3a62583959e6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_abd511bd7897b645ef9cb3a62583959e6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_redrawAll\:cell.c}
{\xe \v cell.c\:cell_redrawAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_redrawAll ({\b Cell} all_cells[][CELLS_PER_ROW], const char * modifier)}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws the entire field of cells. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i all_cells} \cell }{2D array of cells representing the field. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i modifier} \cell }{Modifier to apply during redraw. \cell }
{\row }
}
}{
Definition at line {\b 136} of file {\b cell.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b Cell::col}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a58542af15ec3ebf1a4e50c34789aa317_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a58542af15ec3ebf1a4e50c34789aa317_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cell_select\:cell.c}
{\xe \v cell.c\:cell_select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cell_select (const {\b Cell} * cell)}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selects the given cell. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i cell} \cell }{{\b Cell} to select. \cell }
{\row }
}
}{
Definition at line {\b 111} of file {\b cell.c}.}\par
{
\ql
References {\b Cell::col}, {\b INVERSE}, {\b Cell::marked_by}, {\b redrawCell()}, and {\b Cell::row}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a457332dae4bea1ebce89e8d8379dd3ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a457332dae4bea1ebce89e8d8379dd3ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v redrawCell\:cell.c}
{\xe \v cell.c\:redrawCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void redrawCell (uint8_t row, uint8_t col, const char * modifier, {\b Player} marked_by){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraws a single cell at the specified position. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i row} \cell }{Y-position of the cell. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i col} \cell }{X-position of the cell. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i modifier} \cell }{Modifier to apply during redraw. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i marked_by} \cell }{Player marking the cell. \cell }
{\row }
}
}{
Definition at line {\b 172} of file {\b cell.c}.}\par
{
\ql
References {\b Circle}, {\b Cross}, {\b cursor_moveTo()}, {\b DEFAULT_CIRCLE}, {\b DEFAULT_CROSS}, {\b FIELD_X_OFFSET}, {\b FIELD_Y_OFFSET}, {\b g_cell_size}, {\b CellSize::height}, {\b Large}, {\b LARGE_O}, {\b LARGE_X}, {\b Medium}, {\b MEDIUM_O}, {\b MEDIUM_X}, {\b None}, {\b print()}, {\b print_style()}, {\b RESET}, {\b CellSize::size}, {\b Small}, {\b SMALL_O}, {\b SMALL_X}, and {\b CellSize::width}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a09cfcadedb8a21e79770e0409f9e6209_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcc/cell_8c_a09cfcadedb8a21e79770e0409f9e6209_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_cell_size\:cell.c}
{\xe \v cell.c\:g_cell_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CellSize} g_cell_size}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = (CellSize)\{\par
    .size = INITIAL_SIZE,\par
    .height = INITIAL_HEIGHT,\par
    .width = INITIAL_WIDTH,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global variable representing the current cell size. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialized with default values for size, height, and width.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b VALID_SIZES} \par
{\b INITIAL_SIZE} \par
{\b INITIAL_HEIGHT} \par
{\b INITIAL_WIDTH} \par
}}}{
Definition at line {\b 22} of file {\b cell.c}.}\par
}
{\xe \v LARGE_O\:cell.c}
{\xe \v cell.c\:LARGE_O}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* LARGE_O[5][9]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{{\cf22 " "},\par
     CORNER_TOP_LEFT,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     CORNER_TOP_RIGHT,\par
     {\cf22 " "}\},\par
    \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
    \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
    \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
    \{{\cf22 " "},\par
     CORNER_BOT_LEFT,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     TOP_BOTTOM,\par
     CORNER_BOT_RIGHT,\par
     {\cf22 " "}\},\par
\}\par
}
{
Definition at line {\b 63} of file {\b cell.c}.}\par
}
{\xe \v LARGE_X\:cell.c}
{\xe \v cell.c\:LARGE_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* LARGE_X[5][9]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_MID, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}\},\par
\}\par
}
{
Definition at line {\b 55} of file {\b cell.c}.}\par
}
{\xe \v MEDIUM_O\:cell.c}
{\xe \v cell.c\:MEDIUM_O}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* MEDIUM_O[3][7]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{{\cf22 " "}, CORNER_TOP_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_TOP_RIGHT, {\cf22 " "}\},\par
    \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
    \{{\cf22 " "}, CORNER_BOT_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_BOT_RIGHT, {\cf22 " "}\},\par
\}\par
}
{
Definition at line {\b 49} of file {\b cell.c}.}\par
}
{\xe \v MEDIUM_X\:cell.c}
{\xe \v cell.c\:MEDIUM_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* MEDIUM_X[3][7]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_MID, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
    \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}\},\par
\}\par
}
{
Definition at line {\b 43} of file {\b cell.c}.}\par
}
{\xe \v SMALL_O\:cell.c}
{\xe \v cell.c\:SMALL_O}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* SMALL_O[1][3] = \{\{" ", "O", " "\}\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representation of a small 'O'. }}\par
{
Definition at line {\b 41} of file {\b cell.c}.}\par
}
{\xe \v SMALL_X\:cell.c}
{\xe \v cell.c\:SMALL_X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* SMALL_X[1][3] = \{\{" ", "X", " "\}\}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Representation of a small 'X'. }}\par
{
Definition at line {\b 40} of file {\b cell.c}.}\par
}
{\xe \v VALID_SIZES\:cell.c}
{\xe \v cell.c\:VALID_SIZES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CellSize} VALID_SIZES[]{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \{.width = 4, .height = 3\},\par
    \{.width = 8, .height = 5\},\par
    \{.width = 10, .height = 7\},\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of valid cell sizes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Each entry contains the width and height for a specific size. \par
}{
Definition at line {\b 95} of file {\b cell.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cell.c\par \pard\plain 
{\tc\tcl2 \v presentation/cell.c}
{\xe \v presentation/cell.c}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file cell.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements functions for managing the presentation of cells.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see cell.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/cell.h"}\par
00015 \par
00016 {\cf21 #include "logic/game.h"}\par
00017 {\cf21 #include "presentation/cursor.h"}\par
00018 {\cf21 #include "presentation/field.h"}\par
00019 {\cf21 #include "presentation/print.h"}\par
00020 {\cf21 #include "presentation/style.h"}\par
00021 \par
00022 CellSize g_cell_size = (CellSize)\{\par
00023     .size = INITIAL_SIZE,\par
00024     .height = INITIAL_HEIGHT,\par
00025     .width = INITIAL_WIDTH,\par
00026 \};\par
00027 {\cf20 }\par
00028 {\cf20 /**}\par
00029 {\cf20  * @brief Redraws a single cell at the specified position.}\par
00030 {\cf20  *}\par
00031 {\cf20  * @param[in] row Y-position of the cell.}\par
00032 {\cf20  * @param[in] col X-position of the cell.}\par
00033 {\cf20  * @param[in] modifier Modifier to apply during redraw.}\par
00034 {\cf20  * @param[in] marked_by Player marking the cell.}\par
00035 {\cf20  *}\par
00036 {\cf20  * @internal}\par
00037 {\cf20  */}\par
00038 {\cf17 static} {\cf18 void} redrawCell(uint8_t row, uint8_t col, {\cf17 const} {\cf18 char} *modifier, Player marked_by);\par
00039 \par
00040 {\cf17 static} {\cf18 char} *SMALL_X[1][3] = \{\{{\cf22 " "}, {\cf22 "X"}, {\cf22 " "}\}\};{\cf20 ///< Representation of a small 'X'.}\par
00041 {\cf17 static} {\cf18 char} *SMALL_O[1][3] = \{\{{\cf22 " "}, {\cf22 "O"}, {\cf22 " "}\}\};{\cf20 ///< Representation of a small 'O'.}\par
00042 \par
00043 {\cf17 static} {\cf18 char} *MEDIUM_X[3][7] = \{\par
00044     \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}\},\par
00045     \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_MID, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
00046     \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}\},\par
00047 \};\par
00048 \par
00049 {\cf17 static} {\cf18 char} *MEDIUM_O[3][7] = \{\par
00050     \{{\cf22 " "}, CORNER_TOP_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_TOP_RIGHT, {\cf22 " "}\},\par
00051     \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
00052     \{{\cf22 " "}, CORNER_BOT_LEFT, TOP_BOTTOM, TOP_BOTTOM, TOP_BOTTOM, CORNER_BOT_RIGHT, {\cf22 " "}\},\par
00053 \};\par
00054 \par
00055 {\cf17 static} {\cf18 char} *LARGE_X[5][9] = \{\par
00056     \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}\},\par
00057     \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
00058     \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_MID, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
00059     \{{\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}\},\par
00060     \{{\cf22 " "}, {\cf22 " "}, DIAGONAL_FW, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, DIAGONAL_BW, {\cf22 " "}, {\cf22 " "}\},\par
00061 \};\par
00062 \par
00063 {\cf17 static} {\cf18 char} *LARGE_O[5][9] = \{\par
00064     \{{\cf22 " "},\par
00065      CORNER_TOP_LEFT,\par
00066      TOP_BOTTOM,\par
00067      TOP_BOTTOM,\par
00068      TOP_BOTTOM,\par
00069      TOP_BOTTOM,\par
00070      TOP_BOTTOM,\par
00071      CORNER_TOP_RIGHT,\par
00072      {\cf22 " "}\},\par
00073     \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
00074     \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
00075     \{{\cf22 " "}, SIDE, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, SIDE, {\cf22 " "}\},\par
00076     \{{\cf22 " "},\par
00077      CORNER_BOT_LEFT,\par
00078      TOP_BOTTOM,\par
00079      TOP_BOTTOM,\par
00080      TOP_BOTTOM,\par
00081      TOP_BOTTOM,\par
00082      TOP_BOTTOM,\par
00083      CORNER_BOT_RIGHT,\par
00084      {\cf22 " "}\},\par
00085 \};\par
00086 {\cf20 }\par
00087 {\cf20 /**}\par
00088 {\cf20  * @brief Array of valid cell sizes.}\par
00089 {\cf20  *}\par
00090 {\cf20  * @details}\par
00091 {\cf20  * Each entry contains the width and height for a specific size.}\par
00092 {\cf20  *}\par
00093 {\cf20  * @internal}\par
00094 {\cf20  */}\par
00095 {\cf17 static} CellSize VALID_SIZES[] = \{\par
00096     \{.width = 4, .height = 3\},\par
00097     \{.width = 8, .height = 5\},\par
00098     \{.width = 10, .height = 7\},\par
00099 \};\par
00100 \par
00101 {\cf18 void} cell_redraw({\cf17 const} Cell *cell)\par
00102 \{\par
00103     redrawCell(cell->row, cell->col, {\cf22 ""}, cell->marked_by);\par
00104 \}\par
00105 \par
00106 {\cf18 void} cell_redraw_withModifier({\cf17 const} Cell *cell, {\cf17 const} {\cf18 char} *modifier)\par
00107 \{\par
00108     redrawCell(cell->row, cell->col, modifier, cell->marked_by);\par
00109 \}\par
00110 \par
00111 {\cf18 void} cell_select({\cf17 const} Cell *cell)\par
00112 \{\par
00113     {\cf17 static} uint16_t prev_top = 0;\par
00114     {\cf17 static} uint16_t prev_left = 0;\par
00115     {\cf17 static} Player prev_mark;\par
00116     {\cf17 static} {\cf18 bool} has_prev = {\cf17 false};\par
00117 \par
00118     {\cf20 // with +1 to account for top/left divider}\par
00119     {\cf20 // with -2 account for dividers}\par
00120     {\cf19 if}(has_prev)\par
00121     \{\par
00122         redrawCell(prev_top, prev_left, 0, prev_mark);\par
00123     \}\par
00124     {\cf19 else}\par
00125     \{\par
00126         has_prev = {\cf17 true};\par
00127     \}\par
00128 \par
00129     redrawCell(cell->row, cell->col, INVERSE, cell->marked_by);\par
00130 \par
00131     prev_top = cell->row;\par
00132     prev_left = cell->col;\par
00133     prev_mark = cell->marked_by;\par
00134 \}\par
00135 \par
00136 {\cf18 void} cell_redrawAll(Cell all_cells[][CELLS_PER_ROW], {\cf17 const} {\cf18 char} *modifier)\par
00137 \{\par
00138     {\cf17 const} Cell *cell = NULL;\par
00139     {\cf19 for}(uint8_t row = 0; row < CELLS_PER_COL; row++)\par
00140     \{\par
00141         {\cf19 for}(uint8_t col = 0; col < CELLS_PER_ROW; col++)\par
00142         \{\par
00143             cell = &all_cells[row][col];\par
00144             redrawCell(cell->row, cell->col, modifier, cell->marked_by);\par
00145         \}\par
00146     \}\par
00147 \}\par
00148 \par
00149 {\cf18 void} cell_increaseSize()\par
00150 \{\par
00151     {\cf19 if}(g_cell_size.size + 1 >= Large + 1)\par
00152     \{\par
00153         {\cf19 return};\par
00154     \}\par
00155     g_cell_size.size++;\par
00156     g_cell_size.width = VALID_SIZES[g_cell_size.size].width;\par
00157     g_cell_size.height = VALID_SIZES[g_cell_size.size].height;\par
00158 \}\par
00159 \par
00160 {\cf18 void} cell_decreaseSize()\par
00161 \{\par
00162     {\cf19 if}(g_cell_size.size - 1 < Small)\par
00163     \{\par
00164         {\cf19 return};\par
00165     \}\par
00166     g_cell_size.size--;\par
00167     g_cell_size.width = VALID_SIZES[g_cell_size.size].width;\par
00168     g_cell_size.height = VALID_SIZES[g_cell_size.size].height;\par
00169 \}\par
00170 \par
00171 {\cf17 static} {\cf18 void}\par
00172 redrawCell({\cf17 const} uint8_t row, {\cf17 const} uint8_t col, {\cf17 const} {\cf18 char} *modifier, {\cf17 const} Player marked_by)\par
00173 \{\par
00174     {\cf17 const} uint8_t top = row * (g_cell_size.height - 1) + 1;\par
00175     {\cf17 const} uint8_t left = col * g_cell_size.width + 1;\par
00176     {\cf17 const} uint8_t bot = top + (g_cell_size.height - 2);\par
00177     {\cf17 const} uint8_t right = left + (g_cell_size.width - 2);\par
00178 \par
00179     {\cf19 for}(uint8_t i = top; i < bot; i++)\par
00180     \{\par
00181         cursor_moveTo(left + FIELD_X_OFFSET, i + FIELD_Y_OFFSET);\par
00182 \par
00183         print(modifier);\par
00184         {\cf19 for}(uint8_t j = 0; j < g_cell_size.width - 1; j++)\par
00185         \{\par
00186             {\cf19 switch}(marked_by)\par
00187             \{\par
00188                 {\cf19 case} Cross:\par
00189                     print_style(&DEFAULT_CROSS);\par
00190                     print(modifier);\par
00191                     {\cf19 switch}(g_cell_size.size)\par
00192                     \{\par
00193                         {\cf19 case} Small:\par
00194                             print(SMALL_X[i - top][j]);\par
00195                             {\cf19 break};\par
00196                         {\cf19 case} Medium:\par
00197                             print(MEDIUM_X[i - top][j]);\par
00198                             {\cf19 break};\par
00199                         {\cf19 case} Large:\par
00200                             print(LARGE_X[i - top][j]);\par
00201                             {\cf19 break};\par
00202                     \}\par
00203                     {\cf19 break};\par
00204                 {\cf19 case} Circle:\par
00205                     print_style(&DEFAULT_CIRCLE);\par
00206                     print(modifier);\par
00207                     {\cf19 switch}(g_cell_size.size)\par
00208                     \{\par
00209                         {\cf19 case} Small:\par
00210                             print(SMALL_O[i - top][j]);\par
00211                             {\cf19 break};\par
00212                         {\cf19 case} Medium:\par
00213                             print(MEDIUM_O[i - top][j]);\par
00214                             {\cf19 break};\par
00215                         {\cf19 case} Large:\par
00216                             print(LARGE_O[i - top][j]);\par
00217                             {\cf19 break};\par
00218                     \}\par
00219                     {\cf19 break};\par
00220                 {\cf19 case} None:\par
00221                     print(modifier);\par
00222                     print({\cf22 " "});\par
00223                     {\cf19 break};\par
00224             \}\par
00225         \}\par
00226 \par
00227 \par
00228         cursor_moveTo(right + FIELD_X_OFFSET, i + FIELD_Y_OFFSET);\par
00229         print(RESET);\par
00230     \}\par
00231 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/cursor.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/cursor.c}
{\xe \v presentation/cursor.c}
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements cursor movement functionality for the presentation layer. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/cursor.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "util/conversion.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cursor.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dee/cursor_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b writeNumToBuf} (uint8_t num, const char *num_buf, char *buf, uint8_t *buf_pos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a numeric value to a buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cursor_moveTo} (const uint8_t x, const uint8_t y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the cursor to the given coordinates. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements cursor movement functionality for the presentation layer. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b cursor.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b cursor.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cursor_moveTo\:cursor.c}
{\xe \v cursor.c\:cursor_moveTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cursor_moveTo (uint8_t x, uint8_t y)}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the cursor to the given coordinates. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function generates an escape sequence to move the cursor to the specified (x, y) position on the terminal.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i x} \cell }{X-coordinate of the cursor position. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i y} \cell }{Y-coordinate of the cursor position.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function can be improved by using new functions found in the conversion module and directly writing the string representation of the number to the target buffer. \par
}}}{
Definition at line {\b 34} of file {\b cursor.c}.}\par
{
\ql
References {\b int_to_str()}, {\b print()}, and {\b writeNumToBuf()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dfa/cursor_8c_a599725458bf000c7fc08432a74602fac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dfa/cursor_8c_a599725458bf000c7fc08432a74602fac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeNumToBuf\:cursor.c}
{\xe \v cursor.c\:writeNumToBuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void writeNumToBuf (uint8_t num, const char * num_buf, char * buf, uint8_t * buf_pos){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write a numeric value to a buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function writes the string representation of a numeric value to a buffer while maintaining the current position in the buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num} \cell }{The numeric value to write. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num_buf} \cell }{A buffer containing the string representation of the number. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i buf} \cell }{The target buffer to write to. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i buf_pos} \cell }{Pointer to the current position in the target buffer. \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b cursor.c}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dfa/cursor_8c_a57bbc852bc29fb220c4d95404ee482dc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cursor.c\par \pard\plain 
{\tc\tcl2 \v presentation/cursor.c}
{\xe \v presentation/cursor.c}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file cursor.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements cursor movement functionality for the presentation layer.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see cursor.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/cursor.h"}\par
00015 {\cf21 #include "presentation/print.h"}\par
00016 {\cf21 #include "util/conversion.h"}\par
00017 {\cf20 }\par
00018 {\cf20 /**}\par
00019 {\cf20  * @brief Write a numeric value to a buffer.}\par
00020 {\cf20  *}\par
00021 {\cf20  * @details}\par
00022 {\cf20  * This function writes the string representation of a numeric value to a buffer}\par
00023 {\cf20  * while maintaining the current position in the buffer.}\par
00024 {\cf20  *}\par
00025 {\cf20  * @param[in] num The numeric value to write.}\par
00026 {\cf20  * @param[in] num_buf A buffer containing the string representation of the number.}\par
00027 {\cf20  * @param[out] buf The target buffer to write to.}\par
00028 {\cf20  * @param[inout] buf_pos Pointer to the current position in the target buffer.}\par
00029 {\cf20  *}\par
00030 {\cf20  * @internal}\par
00031 {\cf20  */}\par
00032 {\cf17 static} {\cf18 void} writeNumToBuf(uint8_t num, {\cf17 const} {\cf18 char} *num_buf, {\cf18 char} *buf, uint8_t *buf_pos);\par
00033 \par
00034 {\cf18 void} cursor_moveTo({\cf17 const} uint8_t x, {\cf17 const} uint8_t y)\par
00035 \{\par
00036     {\cf20 // uint8_t has max 3 digits + null terminator}\par
00037     {\cf17 static} {\cf18 char} conversion_buf[4];\par
00038     {\cf17 const} uint8_t size = {\cf17 sizeof}(conversion_buf);\par
00039 \par
00040     {\cf20 // \\e (1) + [ (1) + 000 (3) + ; (1) + 000 (3) + H (1) + '\\0' => 11}\par
00041     {\cf17 static} {\cf18 char} escape_seq[11];\par
00042     uint8_t pos = 0;\par
00043     escape_seq[pos++] = {\cf23 '\\e'};\par
00044     escape_seq[pos++] = {\cf23 '['};\par
00045 \par
00046     int_to_str(y, conversion_buf, size);\par
00047     writeNumToBuf(y, conversion_buf, escape_seq, &pos);\par
00048 \par
00049     escape_seq[pos++] = {\cf23 ';'};\par
00050 \par
00051     int_to_str(x, conversion_buf, size);\par
00052     writeNumToBuf(x, conversion_buf, escape_seq, &pos);\par
00053 \par
00054     escape_seq[pos++] = {\cf23 'H'};\par
00055     escape_seq[pos] = {\cf23 '\\0'};\par
00056 \par
00057     print(escape_seq);\par
00058 \}\par
00059 \par
00060 {\cf17 static} {\cf18 void} writeNumToBuf({\cf17 const} uint8_t num, {\cf17 const} {\cf18 char} *num_buf, {\cf18 char} *buf, uint8_t *buf_pos)\par
00061 \{\par
00062     buf[(*buf_pos)++] = num_buf[0];\par
00063     {\cf19 if}(num > 9)\par
00064     \{\par
00065         buf[(*buf_pos)++] = num_buf[1];\par
00066     \}\par
00067     {\cf19 if}(num > 99)\par
00068     \{\par
00069         buf[(*buf_pos)++] = num_buf[2];\par
00070     \}\par
00071 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/field.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/field.c}
{\xe \v presentation/field.c}
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the rendering of the TikTakToe field. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/field.h"}\par
{\f2 #include "presentation/cell.h"}\par
{\f2 #include "presentation/cursor.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "config.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for field.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d88/field_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printRow} (char **row, size_t row_length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Print one row of the field. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b field_redraw} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraw the whole 2D field. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements the rendering of the TikTakToe field. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b field.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b field.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v field_redraw\:field.c}
{\xe \v field.c\:field_redraw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void field_redraw ()}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redraw the whole 2D field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function renders the entire tic-tac-toe field, including borders and empty cells, based on the current configuration. \par
}{
Definition at line {\b 35} of file {\b field.c}.}\par
{
\ql
References {\b CELLS_PER_COL}, {\b CELLS_PER_ROW}, {\b CORNER_BOT_LEFT}, {\b CORNER_BOT_RIGHT}, {\b CORNER_TOP_LEFT}, {\b CORNER_TOP_RIGHT}, {\b CROSS}, {\b cursor_moveTo()}, {\b EMPTY}, {\b FIELD_X_OFFSET}, {\b FIELD_Y_OFFSET}, {\b g_cell_size}, {\b CellSize::height}, {\b printRow()}, {\b SIDE}, {\b T_BOT}, {\b T_LEFT}, {\b T_RIGHT}, {\b T_TOP}, {\b TOP_BOTTOM}, and {\b CellSize::width}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da6/field_8c_a3d0c2012ab22c49c338449956fc0dd68_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da6/field_8c_a3d0c2012ab22c49c338449956fc0dd68_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printRow\:field.c}
{\xe \v field.c\:printRow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void printRow (char ** row, size_t row_length){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Print one row of the field. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i row} \cell }{Array of strings representing the row to print. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i row_length} \cell }{Length of the row array. \cell }
{\row }
}
}{
Definition at line {\b 98} of file {\b field.c}.}\par
{
\ql
References {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da6/field_8c_a1b9c763dcae98750455d20a27f4f1a4a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da6/field_8c_a1b9c763dcae98750455d20a27f4f1a4a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
field.c\par \pard\plain 
{\tc\tcl2 \v presentation/field.c}
{\xe \v presentation/field.c}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file field.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements the rendering of the TikTakToe field.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see field.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/field.h"}\par
00015 \par
00016 {\cf21 #include "presentation/cell.h"}\par
00017 {\cf21 #include "presentation/cursor.h"}\par
00018 {\cf21 #include "presentation/print.h"}\par
00019 \par
00020 {\cf21 #include "config.h"}\par
00021 \par
00022 {\cf21 #include <stddef.h>}\par
00023 {\cf21 #include <stdint.h>}\par
00024 {\cf20 }\par
00025 {\cf20 /**}\par
00026 {\cf20  * @brief Print one row of the field.}\par
00027 {\cf20  *}\par
00028 {\cf20  * @param[in] row Array of strings representing the row to print.}\par
00029 {\cf20  * @param[in] row_length Length of the row array.}\par
00030 {\cf20  *}\par
00031 {\cf20  * @internal}\par
00032 {\cf20  */}\par
00033 {\cf17 static} {\cf18 void} printRow({\cf18 char} **row, {\cf18 size_t} row_length);\par
00034 \par
00035 {\cf18 void} field_redraw()\par
00036 \{\par
00037     {\cf17 const} uint8_t row_length = CELLS_PER_ROW * g_cell_size.width + 1;\par
00038     {\cf18 char} *divider[row_length];\par
00039     {\cf18 char} *top_divider[row_length];\par
00040     {\cf18 char} *bot_divider[row_length];\par
00041     {\cf18 char} *non_divider[row_length];\par
00042 \par
00043     {\cf19 for}(uint8_t i = 0; i < row_length; i++)\par
00044     \{\par
00045         {\cf19 if}(i == 0)\par
00046         \{\par
00047             divider[i] = T_LEFT;\par
00048             top_divider[i] = CORNER_TOP_LEFT;\par
00049             bot_divider[i] = CORNER_BOT_LEFT;\par
00050             non_divider[i] = SIDE;\par
00051         \}\par
00052         {\cf19 else} {\cf19 if}(i == row_length - 1)\par
00053         \{\par
00054             divider[i] = T_RIGHT;\par
00055             top_divider[i] = CORNER_TOP_RIGHT;\par
00056             bot_divider[i] = CORNER_BOT_RIGHT;\par
00057             non_divider[i] = SIDE;\par
00058         \}\par
00059         {\cf19 else} {\cf19 if}(i % g_cell_size.width == 0)\par
00060         \{\par
00061             divider[i] = CROSS;\par
00062             top_divider[i] = T_TOP;\par
00063             bot_divider[i] = T_BOT;\par
00064             non_divider[i] = SIDE;\par
00065         \}\par
00066         {\cf19 else}\par
00067         \{\par
00068             divider[i] = TOP_BOTTOM;\par
00069             top_divider[i] = TOP_BOTTOM;\par
00070             bot_divider[i] = TOP_BOTTOM;\par
00071             non_divider[i] = EMPTY;\par
00072         \}\par
00073     \}\par
00074 \par
00075     cursor_moveTo(FIELD_X_OFFSET, FIELD_Y_OFFSET);\par
00076     printRow(top_divider, row_length);\par
00077 \par
00078     uint8_t first = 0;\par
00079     {\cf19 for}(uint8_t i = 0; i < CELLS_PER_COL; i++)\par
00080     \{\par
00081         {\cf19 if}(first == 0)\par
00082         \{\par
00083             first = 1;\par
00084         \}\par
00085         {\cf19 else}\par
00086         \{\par
00087             printRow(divider, row_length);\par
00088         \}\par
00089         {\cf19 for}(uint8_t j = 0; j < g_cell_size.height - 2; j++)\par
00090         \{\par
00091             printRow(non_divider, row_length);\par
00092         \}\par
00093     \}\par
00094     printRow(bot_divider, row_length);\par
00095 \}\par
00096 \par
00097 \par
00098 {\cf17 static} {\cf18 void} printRow({\cf18 char} **row, {\cf17 const} {\cf18 size_t} row_length)\par
00099 \{\par
00100     {\cf19 for}({\cf18 size_t} i = 0; i < row_length; i++)\par
00101     \{\par
00102         print(row[i]);\par
00103     \}\par
00104     print({\cf22 "\\n"});\par
00105 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/menu.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/menu.c}
{\xe \v presentation/menu.c}
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements menu presentation functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/menu.h"}\par
{\f2 #include "config.h"}\par
{\f2 #include "hal/nvic.h"}\par
{\f2 #include "logic/game.h"}\par
{\f2 #include "presentation/ascii_art.h"}\par
{\f2 #include "presentation/cell.h"}\par
{\f2 #include "presentation/cursor.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
{\f2 #include "presentation/ui.h"}\par
{\f2 #include "util/input_buf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for menu.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dd0/menu_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printWinnerBanner} (const {\b GameState} *game_info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the winner banner based on the game state. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b printMainMenu} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the main menu options to the console. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b menu_showMainMenu} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the main menu and handles user input. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showGameOver} (const {\b GameState} *game_info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the game over screen and game summary. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showCredits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the credits screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_showControls} (const char *continue_hint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the controls menu. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu_anyKeyToContinue} (const char *continue_hint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for any key press to continue. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements menu presentation functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b menu.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b menu.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v menu_anyKeyToContinue\:menu.c}
{\xe \v menu.c\:menu_anyKeyToContinue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_anyKeyToContinue (const char * continue_hint)}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Waits for any key press to continue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i continue_hint} \cell }{Hint message displayed to prompt the user. \cell }
{\row }
}
}{
Definition at line {\b 222} of file {\b menu.c}.}\par
{
\ql
References {\b __WFI}, {\b g_input_buf}, {\b input_getNext()}, {\b ITALIC_DIM}, and {\b println_styled()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_aa8ce93493c2adb2ce4240b95e852793c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_aa8ce93493c2adb2ce4240b95e852793c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showControls\:menu.c}
{\xe \v menu.c\:menu_showControls}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showControls (const char * continue_hint)}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the controls menu. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i continue_hint} \cell }{Hint message displayed to return to the menu. \cell }
{\row }
}
}{
Definition at line {\b 174} of file {\b menu.c}.}\par
{
\ql
References {\b ARROW_DOWN}, {\b ARROW_LEFT}, {\b ARROW_RIGHT}, {\b ARROW_UP}, {\b BOLD_CROSS}, {\b DEFAULT_BOLD}, {\b ITALIC_DIM}, {\b menu_anyKeyToContinue()}, {\b print()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println()}, {\b println_styled()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a23ef48917f29c7ba37351342e66a636f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a23ef48917f29c7ba37351342e66a636f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showCredits\:menu.c}
{\xe \v menu.c\:menu_showCredits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showCredits ()}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the credits screen. }}\par
{
Definition at line {\b 143} of file {\b menu.c}.}\par
{
\ql
References {\b BOLD_CROSS}, {\b DEFAULT_BOLD}, {\b ITALIC_DIM}, {\b menu_anyKeyToContinue()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println()}, {\b println_styled()}, {\b RETURN_MENU_HINT}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a54a22faf156830dd16ee4e3c52835881_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a54a22faf156830dd16ee4e3c52835881_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showGameOver\:menu.c}
{\xe \v menu.c\:menu_showGameOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu_showGameOver (const {\b GameState} * game_info)}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the game over screen and game summary. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i game_info} \cell }{Pointer to the game state containing game statistics. \cell }
{\row }
}
}{
Definition at line {\b 86} of file {\b menu.c}.}\par
{
\ql
References {\b GameState::average_ticks}, {\b BOLD_CIRCLE}, {\b BOLD_CROSS}, {\b CELLS_PER_COL}, {\b GameState::circle_average_ticks}, {\b GameState::circle_total_ticks}, {\b GameState::cross_average_ticks}, {\b GameState::cross_total_ticks}, {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b DEFAULT_ITALIC}, {\b ERASE_LINE_FROM_CURSOR}, {\b GameState::fields_marked}, {\b g_cell_size}, {\b HEADING_LINES}, {\b CellSize::height}, {\b menu_anyKeyToContinue()}, {\b print()}, {\b print_clearConsole()}, {\b print_styled()}, {\b println_int()}, {\b println_styled()}, {\b printWinnerBanner()}, {\b RESET}, {\b RETURN_MENU_HINT}, {\b GameState::round}, {\b TIMER_ROW}, {\b GameState::total_ticks}, {\b ui_gameOver()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ab82b49f40989dd1c5b11264bca838492_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ab82b49f40989dd1c5b11264bca838492_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v menu_showMainMenu\:menu.c}
{\xe \v menu.c\:menu_showMainMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} menu_showMainMenu ()}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the main menu and handles user input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\f2 true}  if the game should reset, {\f2 false}  if the game should quit. \par
}}}{
Definition at line {\b 42} of file {\b menu.c}.}\par
{
\ql
References {\b __WFI}, {\b g_input_buf}, {\b game_run()}, {\b HIDE_CURSOR}, {\b input_getNext()}, {\b menu_showControls()}, {\b menu_showCredits()}, {\b print()}, {\b printMainMenu()}, {\b PVE}, {\b PVP}, and {\b RETURN_MENU_HINT}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a1692d3cd85ed442706f90d6b6f60613f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_a1692d3cd85ed442706f90d6b6f60613f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printMainMenu\:menu.c}
{\xe \v menu.c\:printMainMenu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void printMainMenu (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the main menu options to the console. }}\par
{
Definition at line {\b 234} of file {\b menu.c}.}\par
{
\ql
References {\b DEFAULT_BOLD}, {\b DIM}, {\b ITALIC_DIM}, {\b print()}, {\b print_clearConsole()}, {\b println()}, {\b println_styled()}, {\b RESET}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ab7df6333ff61c8bfcb1209aba9ee0237_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ab7df6333ff61c8bfcb1209aba9ee0237_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printWinnerBanner\:menu.c}
{\xe \v menu.c\:printWinnerBanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void printWinnerBanner (const {\b GameState} * game_info){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the winner banner based on the game state. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i game_info} \cell }{Pointer to the game state containing the winner information. \cell }
{\row }
}
}{
Definition at line {\b 253} of file {\b menu.c}.}\par
{
\ql
References {\b BOLD_CIRCLE}, {\b BOLD_CROSS}, {\b BOLD_DIM}, {\b Circle}, {\b CIRCLE_WINS}, {\b Cross}, {\b CROSS_WINS}, {\b ITS_A_TIE}, {\b None}, {\b print_styled()}, and {\b GameState::winner}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ae6016a73419a07574f6693644b4172f7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/menu_8c_ae6016a73419a07574f6693644b4172f7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
menu.c\par \pard\plain 
{\tc\tcl2 \v presentation/menu.c}
{\xe \v presentation/menu.c}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file menu.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements menu presentation functions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see menu.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 {\cf21 #include "presentation/menu.h"}\par
00014 {\cf21 #include "config.h"}\par
00015 {\cf21 #include "hal/nvic.h"}\par
00016 {\cf21 #include "logic/game.h"}\par
00017 {\cf21 #include "presentation/ascii_art.h"}\par
00018 {\cf21 #include "presentation/cell.h"}\par
00019 {\cf21 #include "presentation/cursor.h"}\par
00020 {\cf21 #include "presentation/print.h"}\par
00021 {\cf21 #include "presentation/style.h"}\par
00022 {\cf21 #include "presentation/ui.h"}\par
00023 {\cf21 #include "util/input_buf.h"}\par
00024 \par
00025 {\cf20 }\par
00026 {\cf20 /**}\par
00027 {\cf20  * @brief Prints the winner banner based on the game state.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @param[in] game_info Pointer to the game state containing the winner information.}\par
00030 {\cf20  *}\par
00031 {\cf20  * @internal}\par
00032 {\cf20  */}\par
00033 {\cf17 static} {\cf18 void} printWinnerBanner({\cf17 const} GameState *game_info);\par
00034 {\cf20 }\par
00035 {\cf20 /**}\par
00036 {\cf20  * @brief Prints the main menu options to the console.}\par
00037 {\cf20  *}\par
00038 {\cf20  * @internal}\par
00039 {\cf20  */}\par
00040 {\cf17 static} {\cf18 void} printMainMenu();\par
00041 \par
00042 {\cf18 bool} menu_showMainMenu()\par
00043 \{\par
00044     print(HIDE_CURSOR);\par
00045     printMainMenu();\par
00046     uint8_t input;\par
00047     {\cf19 while}({\cf17 true})\par
00048     \{\par
00049         {\cf19 while}(!input_getNext(&g_input_buf, &input))\par
00050         \{\par
00051             __WFI();\par
00052         \}\par
00053 \par
00054         {\cf19 switch}(input)\par
00055         \{\par
00056             {\cf19 case} {\cf23 '1'}:\par
00057                 game_run(PVP);\par
00058                 printMainMenu();\par
00059                 {\cf19 break};\par
00060             {\cf19 case} {\cf23 '2'}:\par
00061                 game_run(PVE);\par
00062                 printMainMenu();\par
00063                 {\cf19 break};\par
00064             {\cf19 case} {\cf23 '3'}:\par
00065                 menu_showControls(RETURN_MENU_HINT);\par
00066                 printMainMenu();\par
00067                 {\cf19 break};\par
00068             {\cf19 case} {\cf23 '4'}:\par
00069                 menu_showCredits();\par
00070                 printMainMenu();\par
00071                 {\cf19 break};\par
00072             {\cf19 case} {\cf23 '5'}:\par
00073                 {\cf19 return} {\cf17 false};\par
00074             {\cf19 case} {\cf23 '6'}:\par
00075                 {\cf19 return} {\cf17 true};\par
00076             {\cf19 case} {\cf23 '7'}:\par
00077                 {\cf20 // this exists to test the HardFault_Handler}\par
00078                 {\cf20 // if the application was actually "deployed" in any way}\par
00079                 {\cf20 // it should be removed}\par
00080                 __asm {\cf17 volatile}({\cf22 "udf #0"});\par
00081             {\cf19 default}:;\par
00082         \}\par
00083     \}\par
00084 \}\par
00085 \par
00086 {\cf18 void} menu_showGameOver({\cf17 const} GameState *game_info)\par
00087 \{\par
00088     ui_gameOver();\par
00089 \par
00090     {\cf20 // avoid artifact when ascii art is disabled}\par
00091     cursor_moveTo(1, (CELLS_PER_COL * g_cell_size.height + HEADING_LINES) + 1);\par
00092     print(ERASE_LINE_FROM_CURSOR);\par
00093 \par
00094     cursor_moveTo(1, TIMER_ROW);\par
00095     printWinnerBanner(game_info);\par
00096 \par
00097     menu_anyKeyToContinue({\cf22 "\\nPress any key to see the summary..."});\par
00098 \par
00099     print_clearConsole();\par
00100     ui_printHeading();\par
00101     printWinnerBanner(game_info);\par
00102 \par
00103     println_styled({\cf22 "\\nGame Summary:\\n"}, &DEFAULT_BOLD);\par
00104 \par
00105 \par
00106     print_styled({\cf22 "\\tRounds needed:\\t"}, &DEFAULT_ITALIC);\par
00107     println_int(game_info->round);\par
00108 \par
00109     print_styled({\cf22 "\\tFields marked:\\t"}, &DEFAULT_ITALIC);\par
00110     println_int(game_info->fields_marked);\par
00111 \par
00112     print_styled({\cf22 "\\tTotal ticks:\\t"}, &DEFAULT_ITALIC);\par
00113     println_int(game_info->total_ticks);\par
00114 \par
00115     print_styled({\cf22 "\\t\'D8 ticks/turn:\\t"}, &DEFAULT_ITALIC);\par
00116     println_int(game_info->average_ticks);\par
00117 \par
00118 \par
00119     print_styled({\cf22 "\\n\\tTotal ticks by "}, &DEFAULT_ITALIC);\par
00120     print_styled({\cf22 "cross"}, &BOLD_CROSS);\par
00121     print({\cf22 ":\\t"});\par
00122     println_int(game_info->cross_total_ticks);\par
00123 \par
00124     print_styled({\cf22 "\\t\'D8 ticks/turn by "}, &DEFAULT_ITALIC);\par
00125     print_styled({\cf22 "cross"}, &BOLD_CROSS);\par
00126     print({\cf22 ":\\t"});\par
00127     println_int(game_info->cross_average_ticks);\par
00128 \par
00129     print_styled({\cf22 "\\n\\tTotal ticks by "}, &DEFAULT_ITALIC);\par
00130     print_styled({\cf22 "circle"}, &BOLD_CIRCLE);\par
00131     print({\cf22 ":\\t"});\par
00132     println_int(game_info->circle_total_ticks);\par
00133 \par
00134     print_styled({\cf22 "\\t\'D8 ticks/turn by "}, &DEFAULT_ITALIC);\par
00135     print_styled({\cf22 "circle"}, &BOLD_CIRCLE);\par
00136     print({\cf22 ":\\t"});\par
00137     println_int(game_info->circle_average_ticks);\par
00138     print(RESET);\par
00139 \par
00140     menu_anyKeyToContinue(RETURN_MENU_HINT);\par
00141 \}\par
00142 \par
00143 {\cf18 void} menu_showCredits()\par
00144 \{\par
00145     print_clearConsole();\par
00146     ui_printHeading();\par
00147     println_styled({\cf22 "Credits"}, &DEFAULT_BOLD);\par
00148     println({\cf22 ""});\par
00149 \par
00150     println_styled({\cf22 "Developed by"}, &BOLD_CROSS);\par
00151     println({\cf22 "\\tSimon Blum"});\par
00152     println({\cf22 "\\tBen Oeckl"});\par
00153     println({\cf22 "\\tPaul St\'F6ckle"});\par
00154     println({\cf22 "\\tMaximilian Rodler"});\par
00155     println({\cf22 ""});\par
00156 \par
00157     println_styled({\cf22 "Based on initial work by"}, &DEFAULT_BOLD);\par
00158     println({\cf22 "\\tThomas Vogt"});\par
00159     println({\cf22 "\\tSven Reis"});\par
00160     println({\cf22 ""});\par
00161 \par
00162     print_styled({\cf22 "Licensed under "}, &ITALIC_DIM);\par
00163     println_styled({\cf22 "Mozilla Public License 2.0."}, &ITALIC_DIM);\par
00164     println({\cf22 ""});\par
00165     println_styled(\par
00166         {\cf22 "If a copy of the MPL was not distributed with this project,\\n\\}\par
00167 {\cf22 you can obtain one at http://mozilla.org/MPL/2.0/."},\par
00168         &ITALIC_DIM);\par
00169 \par
00170 \par
00171     menu_anyKeyToContinue(RETURN_MENU_HINT);\par
00172 \}\par
00173 \par
00174 {\cf18 void} menu_showControls({\cf17 const} {\cf18 char} *continue_hint)\par
00175 \{\par
00176     print_clearConsole();\par
00177     ui_printHeading();\par
00178     println_styled({\cf22 "Controls:\\n"}, &DEFAULT_BOLD);\par
00179 \par
00180     print({\cf22 "\\t"});\par
00181     print_styled(ARROW_RIGHT, &BOLD_CROSS);\par
00182     println({\cf22 "\\t Move selection right"});\par
00183 \par
00184     print({\cf22 "\\t"});\par
00185     print_styled(ARROW_UP, &BOLD_CROSS);\par
00186     println({\cf22 "\\t Move selection up"});\par
00187 \par
00188     print({\cf22 "\\t"});\par
00189     print_styled(ARROW_LEFT, &BOLD_CROSS);\par
00190     println({\cf22 "\\t Move selection left"});\par
00191 \par
00192     print({\cf22 "\\t"});\par
00193     print_styled(ARROW_DOWN, &BOLD_CROSS);\par
00194     println({\cf22 "\\t Move selection down\\n"});\par
00195 \par
00196     print_styled({\cf22 "\\t<SPACE>"}, &BOLD_CROSS);\par
00197     println({\cf22 "\\t Mark the selected field"});\par
00198 \par
00199     print_styled({\cf22 "\\t<ENTER>"}, &BOLD_CROSS);\par
00200     println({\cf22 "\\t Mark the selected field\\n"});\par
00201 \par
00202 \par
00203     print_styled({\cf22 "\\tp / P"}, &BOLD_CROSS);\par
00204     println({\cf22 "\\t Pause the game"});\par
00205     println_styled({\cf22 "\\t\\t You won't be able to see the field while paused!\\n"}, &ITALIC_DIM);\par
00206     print_styled({\cf22 "\\tq / Q"}, &BOLD_CROSS);\par
00207     println({\cf22 "\\t Quit the running game\\n"});\par
00208 \par
00209 \par
00210     print_styled({\cf22 "\\t+"}, &BOLD_CROSS);\par
00211     println({\cf22 "\\t Increase cell size"});\par
00212 \par
00213     print_styled({\cf22 "\\t-"}, &BOLD_CROSS);\par
00214     println({\cf22 "\\t Decrease cell size\\n"});\par
00215 \par
00216     print_styled({\cf22 "\\t?"}, &BOLD_CROSS);\par
00217     println({\cf22 "\\t Open this overview"});\par
00218 \par
00219     menu_anyKeyToContinue(continue_hint);\par
00220 \}\par
00221 \par
00222 {\cf18 void} menu_anyKeyToContinue({\cf17 const} {\cf18 char} *continue_hint)\par
00223 \{\par
00224     println_styled(continue_hint, &ITALIC_DIM);\par
00225     uint8_t input;\par
00226     {\cf19 while}(!input_getNext(&g_input_buf, &input))\par
00227     \{\par
00228         __WFI();\par
00229     \}\par
00230     {\cf19 while}(input_getNext(&g_input_buf, &input))\par
00231         ;\par
00232 \}\par
00233 \par
00234 {\cf17 static} {\cf18 void} printMainMenu()\par
00235 \{\par
00236     print_clearConsole();\par
00237     ui_printHeading();\par
00238     println_styled({\cf22 "Choose your option:\\n"}, &DEFAULT_BOLD);\par
00239     println({\cf22 "\\t(1) Player vs Player"});\par
00240     println({\cf22 "\\t(2) Player vs Computer"});\par
00241     println({\cf22 "\\t(3) Controls"});\par
00242     println({\cf22 "\\t(4) Credits"});\par
00243     println({\cf22 "\\t(5) Quit\\n"});\par
00244 \par
00245     println(DIM);\par
00246     println({\cf22 "\\t(6) Reset\\n"});\par
00247     println({\cf22 "\\tResetting the game may help if an unexpected error occurs."});\par
00248     println({\cf22 "\\tIf the error persists, please contact the developer.\\n"});\par
00249     print(RESET);\par
00250     println_styled({\cf22 "Hint: Press the number corresponding to your desired option"}, &ITALIC_DIM);\par
00251 \}\par
00252 \par
00253 {\cf17 static} {\cf18 void} printWinnerBanner({\cf17 const} GameState *game_info)\par
00254 \{\par
00255     {\cf19 switch}(game_info->winner)\par
00256     \{\par
00257         {\cf19 case} Circle:\par
00258             print_styled(CIRCLE_WINS, &BOLD_CIRCLE);\par
00259             {\cf19 break};\par
00260         {\cf19 case} Cross:\par
00261             print_styled(CROSS_WINS, &BOLD_CROSS);\par
00262             {\cf19 break};\par
00263         {\cf19 case} None:\par
00264             print_styled(ITS_A_TIE, &BOLD_DIM);\par
00265             {\cf19 break};\par
00266         {\cf19 default}:;\par
00267     \}\par
00268 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/print.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/print.c}
{\xe \v presentation/print.c}
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of high-level printing functions for UART. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/print.h"}\par
{\f2 #include "hal/uart.h"}\par
{\f2 #include "presentation/style.h"}\par
{\f2 #include "util/conversion.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for print.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dab/print_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_clearConsole} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the whole terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_int} (const uint32_t number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println_int} (const uint32_t number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer with a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_styled} (const char *string, const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b println_styled} (const char *string, const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style and a new line character. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_style} (const {\b Style} *style)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given style attributes. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of high-level printing functions for UART. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b print.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b print.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v print\:print.c}
{\xe \v print.c\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print (const char * string)}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
}
}{
Definition at line {\b 25} of file {\b print.c}.}\par
{
\ql
References {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_ae2dd7886efd463e815dadf10eb54777e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_ae2dd7886efd463e815dadf10eb54777e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_clearConsole\:print.c}
{\xe \v print.c\:print_clearConsole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_clearConsole ()}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the whole terminal. }}\par
{
Definition at line {\b 20} of file {\b print.c}.}\par
{
\ql
References {\b CLEAR_SCREEN}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_aa1dd7679332aa803a3febb63dc5dd825_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_aa1dd7679332aa803a3febb63dc5dd825_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_int\:print.c}
{\xe \v print.c\:print_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_int (const uint32_t number)}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i number} \cell }{The integer to print \cell }
{\row }
}
}{
Definition at line {\b 34} of file {\b print.c}.}\par
{
\ql
References {\b int_to_str()}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a351314bfb5d5cfeaac8ffaea06ca6e8c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a351314bfb5d5cfeaac8ffaea06ca6e8c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_style\:print.c}
{\xe \v print.c\:print_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_style (const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given style attributes. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to print \cell }
{\row }
}
}{
Definition at line {\b 66} of file {\b print.c}.}\par
{
\ql
References {\b Style::bg_color}, {\b Style::fg_color}, {\b Style::font_style}, and {\b print()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a9e731fe6687d1daac66269c94765a45b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a9e731fe6687d1daac66269c94765a45b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_styled\:print.c}
{\xe \v print.c\:print_styled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_styled (const char * string, const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to apply \cell }
{\row }
}
}{
Definition at line {\b 53} of file {\b print.c}.}\par
{
\ql
References {\b print()}, {\b print_style()}, and {\b RESET}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a334f851ea1e7bad8e04d74dbb5e6ed44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a334f851ea1e7bad8e04d74dbb5e6ed44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println\:print.c}
{\xe \v print.c\:println}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println (const char * string)}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a0955e0c88609d4769ade150a1834b22a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a0955e0c88609d4769ade150a1834b22a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println_int\:print.c}
{\xe \v print.c\:println_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println_int (const uint32_t number)}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given integer with a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i number} \cell }{The integer to print \cell }
{\row }
}
}{
Definition at line {\b 47} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print_int()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a5ec3fe142f65005eea1c8400632aae78_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a5ec3fe142f65005eea1c8400632aae78_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v println_styled\:print.c}
{\xe \v print.c\:println_styled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void println_styled (const char * string, const {\b Style} * style)}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the given string with a predefined style and a new line character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i string} \cell }{The string to print \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i style} \cell }{The style to apply \cell }
{\row }
}
}{
Definition at line {\b 60} of file {\b print.c}.}\par
{
\ql
References {\b LINE_SEPERATOR}, {\b print_styled()}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a02a20f9ab0165b4cbac365bb9e9aa823_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db1/print_8c_a02a20f9ab0165b4cbac365bb9e9aa823_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
print.c\par \pard\plain 
{\tc\tcl2 \v presentation/print.c}
{\xe \v presentation/print.c}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file print.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of high-level printing functions for UART}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see print.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/print.h"}\par
00015 \par
00016 {\cf21 #include "hal/uart.h"}\par
00017 {\cf21 #include "presentation/style.h"}\par
00018 {\cf21 #include "util/conversion.h"}\par
00019 \par
00020 {\cf18 void} print_clearConsole()\par
00021 \{\par
00022     print(CLEAR_SCREEN);\par
00023 \}\par
00024 \par
00025 {\cf18 void} print({\cf17 const} {\cf18 char} *{\cf18 string})\par
00026 \{\par
00027     {\cf19 while}(*{\cf18 string} != {\cf23 '\\0'})\par
00028     \{\par
00029         uart_writeByte(*{\cf18 string});\par
00030         {\cf18 string}++;\par
00031     \}\par
00032 \}\par
00033 \par
00034 {\cf18 void} print_int({\cf17 const} uint32_t number)\par
00035 \{\par
00036     {\cf18 char} buf[11] = \{0\};\par
00037     int_to_str(number, buf, 11);\par
00038     print(buf);\par
00039 \}\par
00040 \par
00041 {\cf18 void} println({\cf17 const} {\cf18 char} *{\cf18 string})\par
00042 \{\par
00043     print({\cf18 string});\par
00044     uart_writeByte(LINE_SEPERATOR);\par
00045 \}\par
00046 \par
00047 {\cf18 void} println_int({\cf17 const} uint32_t number)\par
00048 \{\par
00049     print_int(number);\par
00050     uart_writeByte(LINE_SEPERATOR);\par
00051 \}\par
00052 \par
00053 {\cf18 void} print_styled({\cf17 const} {\cf18 char} *{\cf18 string}, {\cf17 const} Style *style)\par
00054 \{\par
00055     print_style(style);\par
00056     print({\cf18 string});\par
00057     print(RESET);\par
00058 \}\par
00059 \par
00060 {\cf18 void} println_styled({\cf17 const} {\cf18 char} *{\cf18 string}, {\cf17 const} Style *style)\par
00061 \{\par
00062     print_styled({\cf18 string}, style);\par
00063     uart_writeByte(LINE_SEPERATOR);\par
00064 \}\par
00065 \par
00066 {\cf18 void} print_style({\cf17 const} Style *style)\par
00067 \{\par
00068     {\cf20 // assuming the if checks are cheaper then printing if NULL}\par
00069     {\cf19 if}(style->fg_color != NULL)\par
00070     \{\par
00071         print(style->fg_color);\par
00072     \}\par
00073     {\cf19 if}(style->bg_color != NULL)\par
00074     \{\par
00075         print(style->bg_color);\par
00076     \}\par
00077     {\cf19 if}(style->font_style != NULL)\par
00078     \{\par
00079         print(style->font_style);\par
00080     \}\par
00081 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/style.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/style.c}
{\xe \v presentation/style.c}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements predefined styles for terminal output. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/style.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for style.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/da6/style_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_BOLD}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with bold font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_ITALIC}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with italic font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining bold and dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b ITALIC_DIM}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining italic and dim font. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_CIRCLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for circles with magenta foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_CIRCLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for circles with magenta foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b DEFAULT_CROSS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for crosses with green foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b BOLD_CROSS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for crosses with green foreground. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Style} {\b HEADING_STYLE}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} for headings with blue foreground and bold font. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements predefined styles for terminal output. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b style.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b style.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v BOLD_CIRCLE\:style.c}
{\xe \v style.c\:BOLD_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_CIRCLE}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .fg_color = FG_MAGENTA,\par
    .font_style = BOLD,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for circles with magenta foreground. }}\par
{
Definition at line {\b 42} of file {\b style.c}.}\par
}
{\xe \v BOLD_CROSS\:style.c}
{\xe \v style.c\:BOLD_CROSS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_CROSS}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .fg_color = FG_GREEN,\par
    .font_style = BOLD,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bold style for crosses with green foreground. }}\par
{
Definition at line {\b 51} of file {\b style.c}.}\par
}
{\xe \v BOLD_DIM\:style.c}
{\xe \v style.c\:BOLD_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} BOLD_DIM}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .font_style = BOLD,\par
    .fg_color = DIM,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining bold and dim font. }}\par
{
Definition at line {\b 28} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_BOLD\:style.c}
{\xe \v style.c\:DEFAULT_BOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_BOLD}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .font_style = BOLD,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with bold font. }}\par
{
Definition at line {\b 16} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_CIRCLE\:style.c}
{\xe \v style.c\:DEFAULT_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_CIRCLE}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .fg_color = FG_MAGENTA,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for circles with magenta foreground. }}\par
{
Definition at line {\b 38} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_CROSS\:style.c}
{\xe \v style.c\:DEFAULT_CROSS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_CROSS}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .fg_color = FG_GREEN,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style for crosses with green foreground. }}\par
{
Definition at line {\b 47} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_DIM\:style.c}
{\xe \v style.c\:DEFAULT_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_DIM}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .font_style = DIM,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with dim font. }}\par
{
Definition at line {\b 24} of file {\b style.c}.}\par
}
{\xe \v DEFAULT_ITALIC\:style.c}
{\xe \v style.c\:DEFAULT_ITALIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} DEFAULT_ITALIC}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .font_style = ITALIC,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default style with italic font. }}\par
{
Definition at line {\b 20} of file {\b style.c}.}\par
}
{\xe \v HEADING_STYLE\:style.c}
{\xe \v style.c\:HEADING_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} HEADING_STYLE}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .fg_color = FG_BLUE,\par
    .font_style = BOLD,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} for headings with blue foreground and bold font. }}\par
{
Definition at line {\b 56} of file {\b style.c}.}\par
}
{\xe \v ITALIC_DIM\:style.c}
{\xe \v style.c\:ITALIC_DIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Style} ITALIC_DIM}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    .font_style = ITALIC,\par
    .fg_color = DIM,\par
\}\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Style} combining italic and dim font. }}\par
{
Definition at line {\b 33} of file {\b style.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
style.c\par \pard\plain 
{\tc\tcl2 \v presentation/style.c}
{\xe \v presentation/style.c}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file style.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements predefined styles for terminal output.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see style.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/style.h"}\par
00015 \par
00016 {\cf17 const} Style DEFAULT_BOLD = \{\par
00017     .font_style = BOLD,\par
00018 \};\par
00019 \par
00020 {\cf17 const} Style DEFAULT_ITALIC = \{\par
00021     .font_style = ITALIC,\par
00022 \};\par
00023 \par
00024 {\cf17 const} Style DEFAULT_DIM = \{\par
00025     .font_style = DIM,\par
00026 \};\par
00027 \par
00028 {\cf17 const} Style BOLD_DIM = \{\par
00029     .font_style = BOLD,\par
00030     .fg_color = DIM,\par
00031 \};\par
00032 \par
00033 {\cf17 const} Style ITALIC_DIM = \{\par
00034     .font_style = ITALIC,\par
00035     .fg_color = DIM,\par
00036 \};\par
00037 \par
00038 {\cf17 const} Style DEFAULT_CIRCLE = \{\par
00039     .fg_color = FG_MAGENTA,\par
00040 \};\par
00041 \par
00042 {\cf17 const} Style BOLD_CIRCLE = \{\par
00043     .fg_color = FG_MAGENTA,\par
00044     .font_style = BOLD,\par
00045 \};\par
00046 \par
00047 {\cf17 const} Style DEFAULT_CROSS = \{\par
00048     .fg_color = FG_GREEN,\par
00049 \};\par
00050 \par
00051 {\cf17 const} Style BOLD_CROSS = \{\par
00052     .fg_color = FG_GREEN,\par
00053     .font_style = BOLD,\par
00054 \};\par
00055 \par
00056 {\cf17 const} Style HEADING_STYLE = \{\par
00057     .fg_color = FG_BLUE,\par
00058     .font_style = BOLD,\par
00059 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
presentation/ui.c File Reference\par \pard\plain 
{\tc\tcl2 \v presentation/ui.c}
{\xe \v presentation/ui.c}
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for the in-game user interface. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "presentation/ui.h"}\par
{\f2 #include "hal/uart.h"}\par
{\f2 #include "logic/time.h"}\par
{\f2 #include "presentation/ascii_art.h"}\par
{\f2 #include "presentation/cursor.h"}\par
{\f2 #include "presentation/menu.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ui.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d7a/ui_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_displayTimer} (const uint16_t remaining_time, const uint16_t total_time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the timer text to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_updateTimer} (const uint16_t remaining_time, const uint16_t total_time)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the time on the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_displayTurn} (const uint8_t current_turn, const {\b Player} player)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the turn text to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_updateTurn} (const uint8_t current_turn, const {\b Player} player)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the turn number on the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_gameOver} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the "Game Over" message on the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_printHeading} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the game heading to the screen. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ui_printStartingPlayer} ({\b Player} starting_player, {\b Mode} mode)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the starting player and mode. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements functions for the in-game user interface. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b ui.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b ui.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ui_displayTimer\:ui.c}
{\xe \v ui.c\:ui_displayTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_displayTimer (uint16_t remaining_time, uint16_t total_time)}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the timer text to the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i remaining_time} \cell }{The remaining time in seconds. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i total_time} \cell }{The total time in seconds. \cell }
{\row }
}
}{
Definition at line {\b 24} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b ITALIC_DIM}, {\b print()}, {\b print_styled()}, {\b TIMER_ROW}, and {\b ui_updateTimer()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_a7eb2f23a2c01049cc1c90f987f506424_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_a7eb2f23a2c01049cc1c90f987f506424_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_displayTurn\:ui.c}
{\xe \v ui.c\:ui_displayTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_displayTurn (uint8_t current_turn, {\b Player} player)}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes the turn text to the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i current_turn} \cell }{The current turn number. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i player} \cell }{The player whose turn it is (Circle or Cross). \cell }
{\row }
}
}{
Definition at line {\b 89} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b DEFAULT_ITALIC}, {\b print_styled()}, {\b TURN_ROW}, and {\b ui_updateTurn()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_a5bca51cc044ff3d5ae62598e420cc159_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_a5bca51cc044ff3d5ae62598e420cc159_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_gameOver\:ui.c}
{\xe \v ui.c\:ui_gameOver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_gameOver ()}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the "Game Over" message on the screen. }}\par
{
Definition at line {\b 117} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b DEFAULT_BOLD}, {\b ERASE_LINE_FROM_CURSOR}, {\b print()}, {\b print_styled()}, {\b TIMER_ROW}, and {\b TURN_ROW}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_aa7c37f269bcee19a98aea573289d9877_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_aa7c37f269bcee19a98aea573289d9877_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_printHeading\:ui.c}
{\xe \v ui.c\:ui_printHeading}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_printHeading ()}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints the game heading to the screen. }}\par
{
Definition at line {\b 127} of file {\b ui.c}.}\par
{
\ql
References {\b cursor_moveTo()}, {\b HEADING}, {\b HEADING_STYLE}, and {\b print_styled()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ad7ec4b5965543c400031e14183eee496_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ad7ec4b5965543c400031e14183eee496_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_printStartingPlayer\:ui.c}
{\xe \v ui.c\:ui_printStartingPlayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_printStartingPlayer ({\b Player} starting_player, {\b Mode} mode)}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displays the starting player and mode. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i starting_player} \cell }{The player who starts the game. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i mode} \cell }{The game mode (e.g., PVE or PVP). \cell }
{\row }
}
}{
Definition at line {\b 133} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD}, {\b Circle}, {\b CIRCLE_STARTS}, {\b COMPUTER_STARTS}, {\b Cross}, {\b CROSS_STARTS}, {\b DEFAULT_CIRCLE}, {\b DEFAULT_CROSS}, {\b FG_RED}, {\b menu_anyKeyToContinue()}, {\b None}, {\b PLAYER_STARTS}, {\b print_clearConsole()}, {\b print_styled()}, {\b PVE}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ae1c1dad8845af014a8e35894e8842fb5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ae1c1dad8845af014a8e35894e8842fb5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_updateTimer\:ui.c}
{\xe \v ui.c\:ui_updateTimer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_updateTimer (uint16_t remaining_time, uint16_t total_time)}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the time on the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i remaining_time} \cell }{The remaining time in seconds. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i total_time} \cell }{The total time in seconds. \cell }
{\row }
}
}{
Definition at line {\b 34} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD}, {\b cursor_moveTo()}, {\b DIM}, {\b EMPTY_PROGRESS_ELEMENT}, {\b ERASE_LINE_FROM_CURSOR}, {\b FG_GREEN}, {\b FG_RED}, {\b FG_YELLOW}, {\b FULL_PROGRESS_ELEMENT}, {\b g_timer}, {\b HALF_PROGRESS_ELEMENT}, {\b GameTimer::is_running}, {\b ITALIC_DIM}, {\b print()}, {\b print_styled()}, {\b println_styled()}, {\b TIMER_ROW}, and {\b uart_writeByte()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ab07153d30b3acd0a53ca9d4043e27160_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ab07153d30b3acd0a53ca9d4043e27160_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ui_updateTurn\:ui.c}
{\xe \v ui.c\:ui_updateTurn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ui_updateTurn (uint8_t current_turn, {\b Player} player)}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the turn number on the screen. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i current_turn} \cell }{The current turn number. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i player} \cell }{The player whose turn it is (Circle or Cross). \cell }
{\row }
}
}{
Definition at line {\b 99} of file {\b ui.c}.}\par
{
\ql
References {\b BOLD_CIRCLE}, {\b BOLD_CROSS}, {\b Circle}, {\b Cross}, {\b cursor_moveTo()}, {\b FG_GREEN}, {\b FG_MAGENTA}, {\b print()}, {\b print_int()}, {\b print_styled()}, and {\b TURN_ROW}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ab109b310e2462d1f3317b8099c7063b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d78/ui_8c_ab109b310e2462d1f3317b8099c7063b4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ui.c\par \pard\plain 
{\tc\tcl2 \v presentation/ui.c}
{\xe \v presentation/ui.c}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file ui.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implements functions for the in-game user interface.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @see ui.h}\par
00007 {\cf20  *}\par
00008 {\cf20  * @copyright}\par
00009 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00010 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00011 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00012 {\cf20  */}\par
00013 \par
00014 {\cf21 #include "presentation/ui.h"}\par
00015 \par
00016 {\cf21 #include "hal/uart.h"}\par
00017 {\cf21 #include "logic/time.h"}\par
00018 {\cf21 #include "presentation/ascii_art.h"}\par
00019 {\cf21 #include "presentation/cursor.h"}\par
00020 {\cf21 #include "presentation/menu.h"}\par
00021 {\cf21 #include "presentation/print.h"}\par
00022 {\cf21 #include "presentation/style.h"}\par
00023 \par
00024 {\cf18 void} ui_displayTimer({\cf17 const} uint16_t remaining_time, {\cf17 const} uint16_t total_time)\par
00025 \{\par
00026     cursor_moveTo(2, TIMER_ROW);\par
00027     print({\cf22 ""});\par
00028     ui_updateTimer(remaining_time, total_time);\par
00029 \par
00030     cursor_moveTo(2, TIMER_ROW + 2);\par
00031     print_styled({\cf22 "Hint: Press \\"?\\" to see all controls!"}, &ITALIC_DIM);\par
00032 \}\par
00033 \par
00034 {\cf18 void} ui_updateTimer({\cf17 const} uint16_t remaining_time, {\cf17 const} uint16_t total_time)\par
00035 \{\par
00036     cursor_moveTo(2, TIMER_ROW);\par
00037     print(ERASE_LINE_FROM_CURSOR);\par
00038     print(BOLD);\par
00039 \par
00040 {\cf21 #ifndef DISABLE_TIMER}\par
00041     {\cf17 static} Style style;\par
00042     {\cf17 const} uint8_t percent = ((float)remaining_time / (float)total_time) * 100;{\cf20 // NOLINT}\par
00043     {\cf19 if}(!g_timer.is_running)\par
00044     \{\par
00045         style = (Style)\{.font_style = DIM\};\par
00046     \}\par
00047     {\cf19 else} {\cf19 if}(percent > 66)\par
00048     \{\par
00049         style = (Style)\{.fg_color = FG_GREEN\};\par
00050     \}\par
00051     {\cf19 else} {\cf19 if}(percent > 33)\par
00052     \{\par
00053         style = (Style)\{.fg_color = FG_YELLOW\};\par
00054     \}\par
00055     {\cf19 else}\par
00056     \{\par
00057         style = (Style)\{.fg_color = FG_RED\};\par
00058     \}\par
00059 \par
00060     {\cf19 for}(uint16_t i = 0; i < total_time; i++)\par
00061     \{\par
00062         {\cf19 if}(i < remaining_time)\par
00063         \{\par
00064             print_styled(FULL_PROGRESS_ELEMENT, &style);\par
00065         \}\par
00066         {\cf19 else} {\cf19 if}(i == remaining_time)\par
00067         \{\par
00068             print_styled(HALF_PROGRESS_ELEMENT, &style);\par
00069         \}\par
00070         {\cf19 else}\par
00071         \{\par
00072             print_styled(EMPTY_PROGRESS_ELEMENT, &style);\par
00073         \}\par
00074     \}\par
00075 \par
00076     cursor_moveTo(2, TIMER_ROW + 1);\par
00077     {\cf19 if}(!g_timer.is_running)\par
00078     \{\par
00079         println_styled({\cf22 "Paused..."}, &ITALIC_DIM);\par
00080         {\cf19 return};\par
00081     \}\par
00082     print(ERASE_LINE_FROM_CURSOR);\par
00083 {\cf21 #else}\par
00084     print_styled({\cf22 "Timer disabled"}, &ITALIC_DIM);\par
00085 {\cf21 #endif}\par
00086     uart_writeByte({\cf23 '\\n'});\par
00087 \}\par
00088 \par
00089 {\cf18 void} ui_displayTurn({\cf17 const} uint8_t current_turn, {\cf17 const} Player player)\par
00090 \{\par
00091     cursor_moveTo(1, TURN_ROW);\par
00092 \par
00093     print_styled({\cf22 "Round"}, &DEFAULT_BOLD);\par
00094     cursor_moveTo(1 + 6 + 3, TURN_ROW);\par
00095     print_styled({\cf22 " Waiting for "}, &DEFAULT_ITALIC);\par
00096     ui_updateTurn(current_turn, player);\par
00097 \}\par
00098 \par
00099 {\cf18 void} ui_updateTurn({\cf17 const} uint8_t current_turn, {\cf17 const} Player player)\par
00100 \{\par
00101     cursor_moveTo(1 + 6, TURN_ROW);\par
00102     print_int(current_turn);\par
00103 \par
00104     cursor_moveTo(1 + 6 + 3 + 13, TURN_ROW);\par
00105     {\cf19 if}(player == Circle)\par
00106     \{\par
00107         print(FG_MAGENTA);\par
00108         print_styled({\cf22 "Circle... "}, &BOLD_CIRCLE);\par
00109     \}\par
00110     {\cf19 else} {\cf19 if}(player == Cross)\par
00111     \{\par
00112         print(FG_GREEN);\par
00113         print_styled({\cf22 "Cross..."}, &BOLD_CROSS);\par
00114     \}\par
00115 \}\par
00116 \par
00117 {\cf18 void} ui_gameOver()\par
00118 \{\par
00119     cursor_moveTo(1, TURN_ROW);\par
00120     print(ERASE_LINE_FROM_CURSOR);\par
00121     print_styled({\cf22 "Game Over!"}, &DEFAULT_BOLD);\par
00122 \par
00123     cursor_moveTo(0, TIMER_ROW);\par
00124     print(ERASE_LINE_FROM_CURSOR);\par
00125 \}\par
00126 \par
00127 {\cf18 void} ui_printHeading()\par
00128 \{\par
00129     cursor_moveTo(0, 0);\par
00130     print_styled(HEADING, &HEADING_STYLE);\par
00131 \}\par
00132 \par
00133 {\cf18 void} ui_printStartingPlayer(Player starting_player, Mode mode)\par
00134 \{\par
00135     print_clearConsole();\par
00136     ui_printHeading();\par
00137     {\cf19 switch}(starting_player)\par
00138     \{\par
00139         {\cf19 case} Cross:\par
00140             {\cf19 if}(mode == PVE)\par
00141             \{\par
00142                 print_styled(PLAYER_STARTS, &DEFAULT_CROSS);\par
00143             \}\par
00144             {\cf19 else}\par
00145             \{\par
00146                 print_styled(CROSS_STARTS, &DEFAULT_CROSS);\par
00147             \}\par
00148             {\cf19 break};\par
00149         {\cf19 case} Circle:\par
00150             {\cf19 if}(mode == PVE)\par
00151             \{\par
00152                 print_styled(COMPUTER_STARTS, &DEFAULT_CIRCLE);\par
00153             \}\par
00154             {\cf19 else}\par
00155             \{\par
00156                 print_styled(CIRCLE_STARTS, &DEFAULT_CIRCLE);\par
00157             \}\par
00158             {\cf19 break};\par
00159         {\cf19 case} None:\par
00160             print_styled(\par
00161                 {\cf22 "Something went very wrong..."},\par
00162                 &(Style)\{.font_style = BOLD, .fg_color = FG_RED\});\par
00163     \}\par
00164     menu_anyKeyToContinue({\cf22 "Press any key to start the game..."});\par
00165 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/conversion.c File Reference\par \pard\plain 
{\tc\tcl2 \v util/conversion.c}
{\xe \v util/conversion.c}
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of utility functions for integer-to-string and integer-to-character conversions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "util/conversion.h"}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for conversion.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d13/conversion_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int8_t {\b int_to_str} (uint32_t num, char *buf, const size_t buf_size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b int_to_char} (uint8_t num)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a character. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of utility functions for integer-to-string and integer-to-character conversions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b conversion.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b conversion.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v int_to_char\:conversion.c}
{\xe \v conversion.c\:int_to_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char int_to_char (uint8_t num)}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a character. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a single-digit integer (0-9) to its corresponding ASCII character.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num} \cell }{The integer to convert (must be between 0 and 9).\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The ASCII character corresponding to the input integer. \par
}}}{
Definition at line {\b 55} of file {\b conversion.c}.}\par
{
\ql
References {\b ASCII_NUM_OFFSET}.}\par
}
{\xe \v int_to_str\:conversion.c}
{\xe \v conversion.c\:int_to_str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int8_t int_to_str (uint32_t num, char * buf, const size_t buf_size)}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts an integer to a string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a given unsigned integer to its string representation and stores it in the provided buffer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i num} \cell }{The integer to convert. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i buf} \cell }{The buffer to store the resulting string. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i buf_size} \cell }{The size of the buffer.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 on success, -1 if an error occurred (e.g., buffer is NULL or too small). \par
}}}{
Definition at line {\b 20} of file {\b conversion.c}.}\par
{
\ql
References {\b ASCII_NUM_OFFSET}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d2f/conversion_8c_a10b90e654db54d6aad3fb7c1ba84b5db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
conversion.c\par \pard\plain 
{\tc\tcl2 \v util/conversion.c}
{\xe \v util/conversion.c}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file conversion.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of utility functions for integer-to-string and integer-to-character}\par
00005 {\cf20  * conversions.}\par
00006 {\cf20  *}\par
00007 {\cf20  * @see conversion.h}\par
00008 {\cf20  *}\par
00009 {\cf20  * @copyright}\par
00010 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00011 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00012 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00013 {\cf20  */}\par
00014 \par
00015 {\cf21 #include "util/conversion.h"}\par
00016 \par
00017 {\cf21 #include <stddef.h>}\par
00018 {\cf21 #include <stdint.h>}\par
00019 \par
00020 int8_t int_to_str(uint32_t num, {\cf18 char} *buf, {\cf17 const} {\cf18 size_t} buf_size)\par
00021 \{\par
00022     {\cf19 if}(buf == NULL || buf_size == 0)\par
00023     \{\par
00024         {\cf19 return} -1;\par
00025     \}\par
00026 \par
00027     {\cf19 if}(num < 10)\par
00028     \{\par
00029         buf[0] = num + ASCII_NUM_OFFSET;\par
00030         buf[1] = {\cf23 '\\0'};\par
00031         {\cf19 return} 0;\par
00032     \}\par
00033 \par
00034     {\cf18 size_t} i = 0;\par
00035     {\cf19 do}\par
00036     \{\par
00037         {\cf19 if}(i > buf_size)\par
00038         \{\par
00039             {\cf19 return} -1;\par
00040         \}\par
00041         buf[i++] = num % 10 + {\cf23 '0'};\par
00042         num /= 10;\par
00043     \} {\cf19 while}(num);\par
00044 \par
00045     {\cf19 for}({\cf18 size_t} j = 0, k = i - 1; j < k; j++, k--)\par
00046     \{\par
00047         {\cf17 const} {\cf18 char} temp = buf[j];\par
00048         buf[j] = buf[k];\par
00049         buf[k] = temp;\par
00050     \}\par
00051 \par
00052     {\cf19 return} 0;\par
00053 \}\par
00054 \par
00055 {\cf18 char} int_to_char(uint8_t num)\par
00056 \{\par
00057     {\cf19 while}(num >= 10)\par
00058     \{\par
00059         num -= 10;\par
00060     \}\par
00061 \par
00062     {\cf19 return} num + ASCII_NUM_OFFSET;\par
00063 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/error_handling.c File Reference\par \pard\plain 
{\tc\tcl2 \v util/error_handling.c}
{\xe \v util/error_handling.c}
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "util/error_handling.h"}\par
{\f2 #include "presentation/ui.h"}\par
{\f2 #include "hal/system.h"}\par
{\f2 #include "hal/uart.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "presentation/style.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for error_handling.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/db3/error__handling_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b handleError} (const char *hint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles error messages and resets the system. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HardFault_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles hard faults. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Default_Handler} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles unexpected interrupts. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Default_Handler\:error_handling.c}
{\xe \v error_handling.c\:Default_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Default_Handler ()}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles unexpected interrupts. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when an unexpected interrupt occurs. It provides a mechanism to handle the interrupt and display an appropriate message. \par
}{
Definition at line {\b 31} of file {\b error_handling.c}.}\par
{
\ql
References {\b handleError()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d03/error__handling_8c_a678d0aa1dbbf42119a8358cc68140b51_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleError\:error_handling.c}
{\xe \v error_handling.c\:handleError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void handleError (const char * hint){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles error messages and resets the system. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function clears the console, displays an error message, and waits for user input before attempting a soft reset of the system.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i hint} \cell }{A message providing details about the error.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Depending on the error, the system may not be able to recover or even execute this function properly. \par
}}}{
Definition at line {\b 37} of file {\b error_handling.c}.}\par
{
\ql
References {\b BOLD}, {\b DIM}, {\b FG_RED}, {\b print()}, {\b print_clearConsole()}, {\b println()}, {\b RESET}, {\b system_softReset()}, {\b uart_readByte()}, and {\b ui_printHeading()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d03/error__handling_8c_a0805cfdbb794a5ba0d8d0411c746556c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d03/error__handling_8c_a0805cfdbb794a5ba0d8d0411c746556c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v HardFault_Handler\:error_handling.c}
{\xe \v error_handling.c\:HardFault_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void HardFault_Handler ()}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handles hard faults. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function is triggered when a hard fault occurs. It provides a mechanism to handle the fault and display an appropriate message. \par
}{
Definition at line {\b 25} of file {\b error_handling.c}.}\par
{
\ql
References {\b handleError()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d03/error__handling_8c_a2af56a8bf3197b2f06cac4c0b84ffc3e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
error_handling.c\par \pard\plain 
{\tc\tcl2 \v util/error_handling.c}
{\xe \v util/error_handling.c}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "util/error_handling.h"}\par
00002 {\cf21 #include "presentation/ui.h"}\par
00003 \par
00004 {\cf21 #include "hal/system.h"}\par
00005 {\cf21 #include "hal/uart.h"}\par
00006 {\cf21 #include "presentation/print.h"}\par
00007 {\cf21 #include "presentation/style.h"}\par
00008 {\cf20 }\par
00009 {\cf20 /**}\par
00010 {\cf20  * @brief Handles error messages and resets the system.}\par
00011 {\cf20  *}\par
00012 {\cf20  * @details}\par
00013 {\cf20  * This function clears the console, displays an error message, and waits for}\par
00014 {\cf20  * user input before attempting a soft reset of the system.}\par
00015 {\cf20  *}\par
00016 {\cf20  * @param[in] hint A message providing details about the error.}\par
00017 {\cf20  *}\par
00018 {\cf20  * @note Depending on the error, the system may not be able to recover or even}\par
00019 {\cf20  * execute this function properly.}\par
00020 {\cf20  *}\par
00021 {\cf20  * @internal}\par
00022 {\cf20  */}\par
00023 {\cf17 static} {\cf18 void} handleError({\cf17 const} {\cf18 char} *hint);\par
00024 \par
00025 {\cf18 void} HardFault_Handler()\par
00026 \{\par
00027     handleError(\par
00028         {\cf22 "You have encountered a hard fault. If this error persists please contact the developer!"});\par
00029 \}\par
00030 \par
00031 {\cf18 void} Default_Handler()\par
00032 \{\par
00033     handleError(\par
00034         {\cf22 "An unexpected interrupt occurred. If this error persists please contact the developer!"});\par
00035 \}\par
00036 \par
00037 {\cf17 static} {\cf18 void} handleError({\cf17 const} {\cf18 char} *hint)\par
00038 \{\par
00039     print_clearConsole();\par
00040     ui_printHeading();\par
00041     print(FG_RED);\par
00042     print(BOLD);\par
00043     print({\cf22 "Ooops, something went very wrong!\\n"});\par
00044     print(RESET);\par
00045     println(hint);\par
00046     print({\cf22 "\\nPress any key to try to reset the game... "});\par
00047     print(DIM);\par
00048     println({\cf22 "(This is not guaranteed to fix the error)"});\par
00049     print(RESET);\par
00050 \par
00051     {\cf19 while}(uart_readByte() == 0)\par
00052         ;\par
00053 \par
00054     system_softReset();\par
00055 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util/input_buf.c File Reference\par \pard\plain 
{\tc\tcl2 \v util/input_buf.c}
{\xe \v util/input_buf.c}
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the input buffer functions. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "util/input_buf.h"}\par
{\f2 #include "presentation/print.h"}\par
{\f2 #include "util/error_handling.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for input_buf.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d12/input__buf_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b bool} {\b putIntoBuf} (volatile {\b InputBuffer} *ib, const uint8_t byte)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put the next byte into the buffer. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b input_onInterrupt} (const uint8_t input)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to call in case of UART input interrupt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b input_init} (volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the given {\b InputBuffer}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_isEmpty} (const volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is empty. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_isFull} (const volatile {\b InputBuffer} *ib)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is full. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b input_getNext} (volatile {\b InputBuffer} *ib, uint8_t *byte)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next byte from the buffer. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile {\b InputBuffer} {\b g_input_buf}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global input buffer instance. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implementation of the input buffer functions. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This file contains the implementation of functions for managing the input buffer, including initialization, checking buffer state, and handling UART input interrupts.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b input_buf.h}\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Copyright\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This Source Code Form is subject to the terms of the Mozilla Public License, v2.0. If a copy of the MPL was not distributed with this file, You can obtain one at {\f2 http://mozilla.org/MPL/2.0/}. \par
}}}{
Definition in file {\b input_buf.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v input_getNext\:input_buf.c}
{\xe \v input_buf.c\:input_getNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_getNext (volatile {\b InputBuffer} * ib, uint8_t * byte)}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the next byte from the buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i ib} \cell }{{\b InputBuffer} to read from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i byte} \cell }{Pointer to store the next byte. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
False if the buffer is empty, true otherwise. \par
}}}{
Definition at line {\b 67} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::data}, {\b INPUT_BUF_SIZE}, {\b input_isEmpty()}, and {\b InputBuffer::tail}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a3e03a367ae13ea8f68021a964efbef90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a3e03a367ae13ea8f68021a964efbef90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_init\:input_buf.c}
{\xe \v input_buf.c\:input_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void input_init (volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the given {\b InputBuffer}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i ib} \cell }{{\b InputBuffer} to initialize. \cell }
{\row }
}
}{
Definition at line {\b 51} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a9bb68967ad751f4b307afa735a3501ff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_isEmpty\:input_buf.c}
{\xe \v input_buf.c\:input_isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_isEmpty (const volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is empty. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ib} \cell }{{\b InputBuffer} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the buffer is empty, false otherwise. \par
}}}{
Definition at line {\b 57} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_aaec1348b29929f537c59bc6b5718bd4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_isFull\:input_buf.c}
{\xe \v input_buf.c\:input_isFull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} input_isFull (const volatile {\b InputBuffer} * ib)}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the buffer is full. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i ib} \cell }{{\b InputBuffer} to check. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the buffer is full, false otherwise. \par
}}}{
Definition at line {\b 62} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::head}, {\b INPUT_BUF_SIZE}, and {\b InputBuffer::tail}.}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a4401e9499819daae58c72b265d521374_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v input_onInterrupt\:input_buf.c}
{\xe \v input_buf.c\:input_onInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void input_onInterrupt (uint8_t input)}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function to call in case of UART input interrupt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i input} \cell }{Pure input from UART. \cell }
{\row }
}
}{
Definition at line {\b 41} of file {\b input_buf.c}.}\par
{
\ql
References {\b g_input_buf}, and {\b putIntoBuf()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a6f2425195e541bcea7e78d39ff1c1d54_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_a6f2425195e541bcea7e78d39ff1c1d54_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v putIntoBuf\:input_buf.c}
{\xe \v input_buf.c\:putIntoBuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b bool} putIntoBuf (volatile {\b InputBuffer} * ib, const uint8_t byte){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Put the next byte into the buffer. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function writes a byte into the input buffer if there is space available.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in,out\cell }{{\i ib} \cell }{{\b InputBuffer} to write to. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i byte} \cell }{Byte to write into the buffer. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
False if the buffer is full, true otherwise. \par
}}}{
Definition at line {\b 78} of file {\b input_buf.c}.}\par
{
\ql
References {\b InputBuffer::data}, {\b InputBuffer::head}, {\b INPUT_BUF_SIZE}, and {\b input_isFull()}.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_ab3e24b09253fed6492359ce7aa936407_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dec/input__buf_8c_ab3e24b09253fed6492359ce7aa936407_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v g_input_buf\:input_buf.c}
{\xe \v input_buf.c\:g_input_buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile {\b InputBuffer} g_input_buf}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Global input buffer instance. }}\par
{
Definition at line {\b 24} of file {\b input_buf.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
input_buf.c\par \pard\plain 
{\tc\tcl2 \v util/input_buf.c}
{\xe \v util/input_buf.c}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /**}\par
00002 {\cf20  * @file input_buf.c}\par
00003 {\cf20  *}\par
00004 {\cf20  * @brief Implementation of the input buffer functions.}\par
00005 {\cf20  *}\par
00006 {\cf20  * @details}\par
00007 {\cf20  * This file contains the implementation of functions for managing the input}\par
00008 {\cf20  * buffer, including initialization, checking buffer state, and handling UART}\par
00009 {\cf20  * input interrupts.}\par
00010 {\cf20  *}\par
00011 {\cf20  * @see input_buf.h}\par
00012 {\cf20  *}\par
00013 {\cf20  * @copyright}\par
00014 {\cf20  * This Source Code Form is subject to the terms of the Mozilla Public}\par
00015 {\cf20  * License, v2.0. If a copy of the MPL was not distributed with this}\par
00016 {\cf20  * file, You can obtain one at http://mozilla.org/MPL/2.0/.}\par
00017 {\cf20  */}\par
00018 \par
00019 {\cf21 #include "util/input_buf.h"}\par
00020 \par
00021 {\cf21 #include "presentation/print.h"}\par
00022 {\cf21 #include "util/error_handling.h"}\par
00023 \par
00024 {\cf17 volatile} InputBuffer g_input_buf;\par
00025 {\cf20 }\par
00026 {\cf20 /**}\par
00027 {\cf20  * @brief Put the next byte into the buffer.}\par
00028 {\cf20  *}\par
00029 {\cf20  * @details}\par
00030 {\cf20  * This function writes a byte into the input buffer if there is space}\par
00031 {\cf20  * available.}\par
00032 {\cf20  *}\par
00033 {\cf20  * @param[inout] ib InputBuffer to write to.}\par
00034 {\cf20  * @param[in] byte Byte to write into the buffer.}\par
00035 {\cf20  * @return False if the buffer is full, true otherwise.}\par
00036 {\cf20  *}\par
00037 {\cf20  * @internal}\par
00038 {\cf20  */}\par
00039 {\cf17 static} {\cf18 bool} putIntoBuf({\cf17 volatile} InputBuffer *ib, {\cf17 const} uint8_t {\cf18 byte});\par
00040 \par
00041 {\cf18 void} input_onInterrupt({\cf17 const} uint8_t input)\par
00042 \{\par
00043     {\cf19 if}(!putIntoBuf(&g_input_buf, input))\par
00044     \{\par
00045         {\cf20 // Triggering a hardfault is not the best way to handle this, but it is}\par
00046         {\cf20 // better than silently dropping input.}\par
00047         __asm {\cf17 volatile}({\cf22 "udf #0"});\par
00048     \}\par
00049 \}\par
00050 \par
00051 {\cf18 void} input_init({\cf17 volatile} InputBuffer *ib)\par
00052 \{\par
00053     ib->head = 0;\par
00054     ib->tail = 0;\par
00055 \}\par
00056 \par
00057 {\cf18 bool} input_isEmpty({\cf17 const} {\cf17 volatile} InputBuffer *ib)\par
00058 \{\par
00059     {\cf19 return} ib->head == ib->tail;\par
00060 \}\par
00061 \par
00062 {\cf18 bool} input_isFull({\cf17 const} {\cf17 volatile} InputBuffer *ib)\par
00063 \{\par
00064     {\cf19 return} (ib->head + 1) % INPUT_BUF_SIZE == ib->tail;\par
00065 \}\par
00066 \par
00067 {\cf18 bool} input_getNext({\cf17 volatile} InputBuffer *ib, uint8_t *{\cf18 byte})\par
00068 \{\par
00069     {\cf19 if}(input_isEmpty(ib))\par
00070     \{\par
00071         {\cf19 return} {\cf17 false};\par
00072     \}\par
00073     *{\cf18 byte} = ib->data[ib->tail];\par
00074     ib->tail = (ib->tail + 1) % INPUT_BUF_SIZE;\par
00075     {\cf19 return} {\cf17 true};\par
00076 \}\par
00077 \par
00078 {\cf17 static} {\cf18 bool} putIntoBuf({\cf17 volatile} InputBuffer *ib, {\cf17 const} uint8_t {\cf18 byte})\par
00079 \{\par
00080     {\cf19 if}(input_isFull(ib))\par
00081     \{\par
00082         {\cf19 return} {\cf17 false};\par
00083     \}\par
00084 \par
00085     ib->data[ib->head] = byte;\par
00086     ib->head = (ib->head + 1) % INPUT_BUF_SIZE;\par
00087     {\cf19 return} {\cf17 true};\par
00088 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
